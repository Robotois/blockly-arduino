{"code":"!function(e){var l={};function o(t){if(l[t])return l[t].exports;var i=l[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=l,o.d=function(e,l,t){o.o(e,l)||Object.defineProperty(e,l,{enumerable:!0,get:t})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,l){if(1&l&&(e=o(e)),8&l)return e;if(4&l&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&l&&\"string\"!=typeof e)for(var i in e)o.d(t,i,function(l){return e[l]}.bind(null,i));return t},o.n=function(e){var l=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(l,\"a\",l),l},o.o=function(e,l){return Object.prototype.hasOwnProperty.call(e,l)},o.p=\"\",o(o.s=0)}([function(e,l,o){\"use strict\";o.r(l);o(1),o(2),o(3),o(4),o(5),o(6),o(7),o(8),o(9),o(10),o(11),o(12),o(13),o(14),o(15),o(16),o(17),o(18),o(19),o(20),o(21),o(22),o(23),o(24),o(25),o(26),o(27),o(28),o(29),o(30)},function(e,l,o){\"use strict\";Blockly.JavaScript=new Blockly.Generator(\"JavaScript\"),Blockly.JavaScript.addReservedWords(\"Blockly,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,enum,export,extends,import,super,implements,interface,let,package,private,protected,public,static,yield,const,null,true,false,Array,ArrayBuffer,Boolean,Date,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Error,eval,EvalError,Float32Array,Float64Array,Function,Infinity,Int16Array,Int32Array,Int8Array,isFinite,isNaN,Iterator,JSON,Math,NaN,Number,Object,parseFloat,parseInt,RangeError,ReferenceError,RegExp,StopIteration,String,SyntaxError,TypeError,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray,undefined,uneval,URIError,applicationCache,closed,Components,content,_content,controllers,crypto,defaultStatus,dialogArguments,directories,document,frameElement,frames,fullScreen,globalStorage,history,innerHeight,innerWidth,length,location,locationbar,localStorage,menubar,messageManager,mozAnimationStartTime,mozInnerScreenX,mozInnerScreenY,mozPaintCount,name,navigator,opener,outerHeight,outerWidth,pageXOffset,pageYOffset,parent,performance,personalbar,pkcs11,returnValue,screen,screenX,screenY,scrollbars,scrollMaxX,scrollMaxY,scrollX,scrollY,self,sessionStorage,sidebar,status,statusbar,toolbar,top,URL,window,addEventListener,alert,atob,back,blur,btoa,captureEvents,clearImmediate,clearInterval,clearTimeout,close,confirm,disableExternalCapture,dispatchEvent,dump,enableExternalCapture,escape,find,focus,forward,GeckoActiveXObject,getAttention,getAttentionWithCycleCount,getComputedStyle,getSelection,home,matchMedia,maximize,minimize,moveBy,moveTo,mozRequestAnimationFrame,open,openDialog,postMessage,print,prompt,QueryInterface,releaseEvents,removeEventListener,resizeBy,resizeTo,restore,routeEvent,scroll,scrollBy,scrollByLines,scrollByPages,scrollTo,setCursor,setImmediate,setInterval,setResizable,setTimeout,showModalDialog,sizeToContent,stop,unescape,updateCommands,XPCNativeWrapper,XPCSafeJSObjectWrapper,onabort,onbeforeunload,onblur,onchange,onclick,onclose,oncontextmenu,ondevicemotion,ondeviceorientation,ondragdrop,onerror,onfocus,onhashchange,onkeydown,onkeypress,onkeyup,onload,onmousedown,onmousemove,onmouseout,onmouseover,onmouseup,onmozbeforepaint,onpaint,onpopstate,onreset,onresize,onscroll,onselect,onsubmit,onunload,onpageshow,onpagehide,Image,Option,Worker,Event,Range,File,FileReader,Blob,BlobBuilder,Attr,CDATASection,CharacterData,Comment,console,DocumentFragment,DocumentType,DomConfiguration,DOMError,DOMErrorHandler,DOMException,DOMImplementation,DOMImplementationList,DOMImplementationRegistry,DOMImplementationSource,DOMLocator,DOMObject,DOMString,DOMStringList,DOMTimeStamp,DOMUserData,Entity,EntityReference,MediaQueryList,MediaQueryListListener,NameList,NamedNodeMap,Node,NodeFilter,NodeIterator,NodeList,Notation,Plugin,PluginArray,ProcessingInstruction,SharedWorker,Text,TimeRanges,Treewalker,TypeInfo,UserDataHandler,Worker,WorkerGlobalScope,HTMLDocument,HTMLElement,HTMLAnchorElement,HTMLAppletElement,HTMLAudioElement,HTMLAreaElement,HTMLBaseElement,HTMLBaseFontElement,HTMLBodyElement,HTMLBRElement,HTMLButtonElement,HTMLCanvasElement,HTMLDirectoryElement,HTMLDivElement,HTMLDListElement,HTMLEmbedElement,HTMLFieldSetElement,HTMLFontElement,HTMLFormElement,HTMLFrameElement,HTMLFrameSetElement,HTMLHeadElement,HTMLHeadingElement,HTMLHtmlElement,HTMLHRElement,HTMLIFrameElement,HTMLImageElement,HTMLInputElement,HTMLKeygenElement,HTMLLabelElement,HTMLLIElement,HTMLLinkElement,HTMLMapElement,HTMLMenuElement,HTMLMetaElement,HTMLModElement,HTMLObjectElement,HTMLOListElement,HTMLOptGroupElement,HTMLOptionElement,HTMLOutputElement,HTMLParagraphElement,HTMLParamElement,HTMLPreElement,HTMLQuoteElement,HTMLScriptElement,HTMLSelectElement,HTMLSourceElement,HTMLSpanElement,HTMLStyleElement,HTMLTableElement,HTMLTableCaptionElement,HTMLTableCellElement,HTMLTableDataCellElement,HTMLTableHeaderCellElement,HTMLTableColElement,HTMLTableRowElement,HTMLTableSectionElement,HTMLTextAreaElement,HTMLTimeElement,HTMLTitleElement,HTMLTrackElement,HTMLUListElement,HTMLUnknownElement,HTMLVideoElement,HTMLCanvasElement,CanvasRenderingContext2D,CanvasGradient,CanvasPattern,TextMetrics,ImageData,CanvasPixelArray,HTMLAudioElement,HTMLVideoElement,NotifyAudioAvailableEvent,HTMLCollection,HTMLAllCollection,HTMLFormControlsCollection,HTMLOptionsCollection,HTMLPropertiesCollection,DOMTokenList,DOMSettableTokenList,DOMStringMap,RadioNodeList,SVGDocument,SVGElement,SVGAElement,SVGAltGlyphElement,SVGAltGlyphDefElement,SVGAltGlyphItemElement,SVGAnimationElement,SVGAnimateElement,SVGAnimateColorElement,SVGAnimateMotionElement,SVGAnimateTransformElement,SVGSetElement,SVGCircleElement,SVGClipPathElement,SVGColorProfileElement,SVGCursorElement,SVGDefsElement,SVGDescElement,SVGEllipseElement,SVGFilterElement,SVGFilterPrimitiveStandardAttributes,SVGFEBlendElement,SVGFEColorMatrixElement,SVGFEComponentTransferElement,SVGFECompositeElement,SVGFEConvolveMatrixElement,SVGFEDiffuseLightingElement,SVGFEDisplacementMapElement,SVGFEDistantLightElement,SVGFEFloodElement,SVGFEGaussianBlurElement,SVGFEImageElement,SVGFEMergeElement,SVGFEMergeNodeElement,SVGFEMorphologyElement,SVGFEOffsetElement,SVGFEPointLightElement,SVGFESpecularLightingElement,SVGFESpotLightElement,SVGFETileElement,SVGFETurbulenceElement,SVGComponentTransferFunctionElement,SVGFEFuncRElement,SVGFEFuncGElement,SVGFEFuncBElement,SVGFEFuncAElement,SVGFontElement,SVGFontFaceElement,SVGFontFaceFormatElement,SVGFontFaceNameElement,SVGFontFaceSrcElement,SVGFontFaceUriElement,SVGForeignObjectElement,SVGGElement,SVGGlyphElement,SVGGlyphRefElement,SVGGradientElement,SVGLinearGradientElement,SVGRadialGradientElement,SVGHKernElement,SVGImageElement,SVGLineElement,SVGMarkerElement,SVGMaskElement,SVGMetadataElement,SVGMissingGlyphElement,SVGMPathElement,SVGPathElement,SVGPatternElement,SVGPolylineElement,SVGPolygonElement,SVGRectElement,SVGScriptElement,SVGStopElement,SVGStyleElement,SVGSVGElement,SVGSwitchElement,SVGSymbolElement,SVGTextElement,SVGTextPathElement,SVGTitleElement,SVGTRefElement,SVGTSpanElement,SVGUseElement,SVGViewElement,SVGVKernElement,SVGAngle,SVGColor,SVGICCColor,SVGElementInstance,SVGElementInstanceList,SVGLength,SVGLengthList,SVGMatrix,SVGNumber,SVGNumberList,SVGPaint,SVGPoint,SVGPointList,SVGPreserveAspectRatio,SVGRect,SVGStringList,SVGTransform,SVGTransformList,SVGAnimatedAngle,SVGAnimatedBoolean,SVGAnimatedEnumeration,SVGAnimatedInteger,SVGAnimatedLength,SVGAnimatedLengthList,SVGAnimatedNumber,SVGAnimatedNumberList,SVGAnimatedPreserveAspectRatio,SVGAnimatedRect,SVGAnimatedString,SVGAnimatedTransformList,SVGPathSegList,SVGPathSeg,SVGPathSegArcAbs,SVGPathSegArcRel,SVGPathSegClosePath,SVGPathSegCurvetoCubicAbs,SVGPathSegCurvetoCubicRel,SVGPathSegCurvetoCubicSmoothAbs,SVGPathSegCurvetoCubicSmoothRel,SVGPathSegCurvetoQuadraticAbs,SVGPathSegCurvetoQuadraticRel,SVGPathSegCurvetoQuadraticSmoothAbs,SVGPathSegCurvetoQuadraticSmoothRel,SVGPathSegLinetoAbs,SVGPathSegLinetoHorizontalAbs,SVGPathSegLinetoHorizontalRel,SVGPathSegLinetoRel,SVGPathSegLinetoVerticalAbs,SVGPathSegLinetoVerticalRel,SVGPathSegMovetoAbs,SVGPathSegMovetoRel,ElementTimeControl,TimeEvent,SVGAnimatedPathData,SVGAnimatedPoints,SVGColorProfileRule,SVGCSSRule,SVGExternalResourcesRequired,SVGFitToViewBox,SVGLangSpace,SVGLocatable,SVGRenderingIntent,SVGStylable,SVGTests,SVGTextContentElement,SVGTextPositioningElement,SVGTransformable,SVGUnitTypes,SVGURIReference,SVGViewSpec,SVGZoomAndPan\"),Blockly.JavaScript.ORDER_ATOMIC=0,Blockly.JavaScript.ORDER_NEW=1.1,Blockly.JavaScript.ORDER_MEMBER=1.2,Blockly.JavaScript.ORDER_FUNCTION_CALL=2,Blockly.JavaScript.ORDER_INCREMENT=3,Blockly.JavaScript.ORDER_DECREMENT=3,Blockly.JavaScript.ORDER_BITWISE_NOT=4.1,Blockly.JavaScript.ORDER_UNARY_PLUS=4.2,Blockly.JavaScript.ORDER_UNARY_NEGATION=4.3,Blockly.JavaScript.ORDER_LOGICAL_NOT=4.4,Blockly.JavaScript.ORDER_TYPEOF=4.5,Blockly.JavaScript.ORDER_VOID=4.6,Blockly.JavaScript.ORDER_DELETE=4.7,Blockly.JavaScript.ORDER_AWAIT=4.8,Blockly.JavaScript.ORDER_EXPONENTIATION=5,Blockly.JavaScript.ORDER_MULTIPLICATION=5.1,Blockly.JavaScript.ORDER_DIVISION=5.2,Blockly.JavaScript.ORDER_MODULUS=5.3,Blockly.JavaScript.ORDER_SUBTRACTION=6.1,Blockly.JavaScript.ORDER_ADDITION=6.2,Blockly.JavaScript.ORDER_BITWISE_SHIFT=7,Blockly.JavaScript.ORDER_RELATIONAL=8,Blockly.JavaScript.ORDER_IN=8,Blockly.JavaScript.ORDER_INSTANCEOF=8,Blockly.JavaScript.ORDER_EQUALITY=9,Blockly.JavaScript.ORDER_BITWISE_AND=10,Blockly.JavaScript.ORDER_BITWISE_XOR=11,Blockly.JavaScript.ORDER_BITWISE_OR=12,Blockly.JavaScript.ORDER_LOGICAL_AND=13,Blockly.JavaScript.ORDER_LOGICAL_OR=14,Blockly.JavaScript.ORDER_CONDITIONAL=15,Blockly.JavaScript.ORDER_ASSIGNMENT=16,Blockly.JavaScript.ORDER_YIELD=17,Blockly.JavaScript.ORDER_COMMA=18,Blockly.JavaScript.ORDER_NONE=99,Blockly.JavaScript.ORDER_OVERRIDES=[[Blockly.JavaScript.ORDER_FUNCTION_CALL,Blockly.JavaScript.ORDER_MEMBER],[Blockly.JavaScript.ORDER_FUNCTION_CALL,Blockly.JavaScript.ORDER_FUNCTION_CALL],[Blockly.JavaScript.ORDER_MEMBER,Blockly.JavaScript.ORDER_MEMBER],[Blockly.JavaScript.ORDER_MEMBER,Blockly.JavaScript.ORDER_FUNCTION_CALL],[Blockly.JavaScript.ORDER_LOGICAL_NOT,Blockly.JavaScript.ORDER_LOGICAL_NOT],[Blockly.JavaScript.ORDER_MULTIPLICATION,Blockly.JavaScript.ORDER_MULTIPLICATION],[Blockly.JavaScript.ORDER_ADDITION,Blockly.JavaScript.ORDER_ADDITION],[Blockly.JavaScript.ORDER_LOGICAL_AND,Blockly.JavaScript.ORDER_LOGICAL_AND],[Blockly.JavaScript.ORDER_LOGICAL_OR,Blockly.JavaScript.ORDER_LOGICAL_OR]],Blockly.JavaScript.init=function(e){Blockly.JavaScript.definitions_=Object.create(null),Blockly.JavaScript.functionNames_=Object.create(null),Blockly.JavaScript.variableDB_?Blockly.JavaScript.variableDB_.reset():Blockly.JavaScript.variableDB_=new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_),Blockly.JavaScript.variableDB_.setVariableMap(e.getVariableMap());for(var l=[],o=Blockly.Variables.allDeveloperVariables(e),t=0;t<o.length;t++)l.push(Blockly.JavaScript.variableDB_.getName(o[t],Blockly.Names.DEVELOPER_VARIABLE_TYPE));for(e=Blockly.Variables.allUsedVarModels(e),t=0;t<e.length;t++)l.push(Blockly.JavaScript.variableDB_.getName(e[t].getId(),Blockly.Variables.NAME_TYPE));l.length&&(Blockly.JavaScript.definitions_.variables=\"var \"+l.join(\", \")+\";\")},Blockly.JavaScript.finish=function(e){var l,o=[];for(l in Blockly.JavaScript.definitions_)o.push(Blockly.JavaScript.definitions_[l]);return delete Blockly.JavaScript.definitions_,delete Blockly.JavaScript.functionNames_,Blockly.JavaScript.variableDB_.reset(),o.join(\"\\n\\n\")+\"\\n\\n\\n\"+e},Blockly.JavaScript.scrubNakedValue=function(e){return e+\";\\n\"},Blockly.JavaScript.quote_=function(e){return\"'\"+(e=e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\").replace(/'/g,\"\\\\'\"))+\"'\"},Blockly.JavaScript.scrub_=function(e,l,o){var t=\"\";if(!e.outputConnection||!e.outputConnection.targetConnection){var i=e.getCommentText();(i=Blockly.utils.wrap(i,Blockly.JavaScript.COMMENT_WRAP-3))&&(t=e.getProcedureDef?t+\"/**\\n\"+Blockly.JavaScript.prefixLines(i+\"\\n\",\" * \")+\" */\\n\":t+Blockly.JavaScript.prefixLines(i+\"\\n\",\"// \"));for(var n=0;n<e.inputList.length;n++)e.inputList[n].type==Blockly.INPUT_VALUE&&(i=e.inputList[n].connection.targetBlock())&&(i=Blockly.JavaScript.allNestedComments(i))&&(t+=Blockly.JavaScript.prefixLines(i,\"// \"))}return e=e.nextConnection&&e.nextConnection.targetBlock(),t+l+(o=o?\"\":Blockly.JavaScript.blockToCode(e))},Blockly.JavaScript.getAdjusted=function(e,l,o,t,i){o=o||0,i=i||Blockly.JavaScript.ORDER_NONE,e.workspace.options.oneBasedIndex&&o--;var n=e.workspace.options.oneBasedIndex?\"1\":\"0\";if(e=0<o?Blockly.JavaScript.valueToCode(e,l,Blockly.JavaScript.ORDER_ADDITION)||n:0>o?Blockly.JavaScript.valueToCode(e,l,Blockly.JavaScript.ORDER_SUBTRACTION)||n:t?Blockly.JavaScript.valueToCode(e,l,Blockly.JavaScript.ORDER_UNARY_NEGATION)||n:Blockly.JavaScript.valueToCode(e,l,i)||n,Blockly.isNumber(e))e=parseFloat(e)+o,t&&(e=-e);else{if(0<o){e=e+\" + \"+o;var a=Blockly.JavaScript.ORDER_ADDITION}else 0>o&&(e=e+\" - \"+-o,a=Blockly.JavaScript.ORDER_SUBTRACTION);t&&(e=o?\"-(\"+e+\")\":\"-\"+e,a=Blockly.JavaScript.ORDER_UNARY_NEGATION),a=Math.floor(a),i=Math.floor(i),a&&i>=a&&(e=\"(\"+e+\")\")}return e},Blockly.JavaScript.colour={},Blockly.JavaScript.colour_picker=function(e){return[\"'\"+e.getFieldValue(\"COLOUR\")+\"'\",Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.colour_random=function(e){return[Blockly.JavaScript.provideFunction_(\"colourRandom\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"() {\",\"  var num = Math.floor(Math.random() * Math.pow(2, 24));\",\"  return '#' + ('00000' + num.toString(16)).substr(-6);\",\"}\"])+\"()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.colour_rgb=function(e){var l=Blockly.JavaScript.valueToCode(e,\"RED\",Blockly.JavaScript.ORDER_COMMA)||0,o=Blockly.JavaScript.valueToCode(e,\"GREEN\",Blockly.JavaScript.ORDER_COMMA)||0;return e=Blockly.JavaScript.valueToCode(e,\"BLUE\",Blockly.JavaScript.ORDER_COMMA)||0,[Blockly.JavaScript.provideFunction_(\"colourRgb\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b) {\",\"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\",\"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\",\"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\",\"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\",\"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\",\"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+l+\", \"+o+\", \"+e+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.colour_blend=function(e){var l=Blockly.JavaScript.valueToCode(e,\"COLOUR1\",Blockly.JavaScript.ORDER_COMMA)||\"'#000000'\",o=Blockly.JavaScript.valueToCode(e,\"COLOUR2\",Blockly.JavaScript.ORDER_COMMA)||\"'#000000'\";return e=Blockly.JavaScript.valueToCode(e,\"RATIO\",Blockly.JavaScript.ORDER_COMMA)||.5,[Blockly.JavaScript.provideFunction_(\"colourBlend\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(c1, c2, ratio) {\",\"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\",\"  var r1 = parseInt(c1.substring(1, 3), 16);\",\"  var g1 = parseInt(c1.substring(3, 5), 16);\",\"  var b1 = parseInt(c1.substring(5, 7), 16);\",\"  var r2 = parseInt(c2.substring(1, 3), 16);\",\"  var g2 = parseInt(c2.substring(3, 5), 16);\",\"  var b2 = parseInt(c2.substring(5, 7), 16);\",\"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\",\"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\",\"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\",\"  r = ('0' + (r || 0).toString(16)).slice(-2);\",\"  g = ('0' + (g || 0).toString(16)).slice(-2);\",\"  b = ('0' + (b || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+l+\", \"+o+\", \"+e+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists={},Blockly.JavaScript.lists_create_empty=function(e){return[\"[]\",Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.lists_create_with=function(e){for(var l=Array(e.itemCount_),o=0;o<e.itemCount_;o++)l[o]=Blockly.JavaScript.valueToCode(e,\"ADD\"+o,Blockly.JavaScript.ORDER_COMMA)||\"null\";return[\"[\"+l.join(\", \")+\"]\",Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.lists_repeat=function(e){return[Blockly.JavaScript.provideFunction_(\"listsRepeat\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(value, n) {\",\"  var array = [];\",\"  for (var i = 0; i < n; i++) {\",\"    array[i] = value;\",\"  }\",\"  return array;\",\"}\"])+\"(\"+(Blockly.JavaScript.valueToCode(e,\"ITEM\",Blockly.JavaScript.ORDER_COMMA)||\"null\")+\", \"+(e=Blockly.JavaScript.valueToCode(e,\"NUM\",Blockly.JavaScript.ORDER_COMMA)||\"0\")+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists_length=function(e){return[(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.lists_isEmpty=function(e){return[\"!\"+(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.JavaScript.ORDER_LOGICAL_NOT]},Blockly.JavaScript.lists_indexOf=function(e){var l=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",o=Blockly.JavaScript.valueToCode(e,\"FIND\",Blockly.JavaScript.ORDER_NONE)||\"''\";return l=(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".\"+l+\"(\"+o+\")\",e.workspace.options.oneBasedIndex?[l+\" + 1\",Blockly.JavaScript.ORDER_ADDITION]:[l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists_getIndex=function(e){var l=e.getFieldValue(\"MODE\")||\"GET\",o=e.getFieldValue(\"WHERE\")||\"FROM_START\",t=Blockly.JavaScript.valueToCode(e,\"VALUE\",\"RANDOM\"==o?Blockly.JavaScript.ORDER_COMMA:Blockly.JavaScript.ORDER_MEMBER)||\"[]\";switch(o){case\"FIRST\":if(\"GET\"==l)return[t+\"[0]\",Blockly.JavaScript.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[t+\".shift()\",Blockly.JavaScript.ORDER_MEMBER];if(\"REMOVE\"==l)return t+\".shift();\\n\";break;case\"LAST\":if(\"GET\"==l)return[t+\".slice(-1)[0]\",Blockly.JavaScript.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[t+\".pop()\",Blockly.JavaScript.ORDER_MEMBER];if(\"REMOVE\"==l)return t+\".pop();\\n\";break;case\"FROM_START\":if(e=Blockly.JavaScript.getAdjusted(e,\"AT\"),\"GET\"==l)return[t+\"[\"+e+\"]\",Blockly.JavaScript.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[t+\".splice(\"+e+\", 1)[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return t+\".splice(\"+e+\", 1);\\n\";break;case\"FROM_END\":if(e=Blockly.JavaScript.getAdjusted(e,\"AT\",1,!0),\"GET\"==l)return[t+\".slice(\"+e+\")[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"GET_REMOVE\"==l)return[t+\".splice(\"+e+\", 1)[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return t+\".splice(\"+e+\", 1);\";break;case\"RANDOM\":if(t=Blockly.JavaScript.provideFunction_(\"listsGetRandomItem\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(list, remove) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  if (remove) {\",\"    return list.splice(x, 1)[0];\",\"  } else {\",\"    return list[x];\",\"  }\",\"}\"])+\"(\"+t+\", \"+(\"GET\"!=l)+\")\",\"GET\"==l||\"GET_REMOVE\"==l)return[t,Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return t+\";\\n\"}throw Error(\"Unhandled combination (lists_getIndex).\")},Blockly.JavaScript.lists_setIndex=function(e){function l(){if(o.match(/^\\w+$/))return\"\";var e=Blockly.JavaScript.variableDB_.getDistinctName(\"tmpList\",Blockly.Variables.NAME_TYPE),l=\"var \"+e+\" = \"+o+\";\\n\";return o=e,l}var o=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\",t=e.getFieldValue(\"MODE\")||\"GET\",i=e.getFieldValue(\"WHERE\")||\"FROM_START\",n=Blockly.JavaScript.valueToCode(e,\"TO\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"null\";switch(i){case\"FIRST\":if(\"SET\"==t)return o+\"[0] = \"+n+\";\\n\";if(\"INSERT\"==t)return o+\".unshift(\"+n+\");\\n\";break;case\"LAST\":if(\"SET\"==t)return(e=l())+(o+\"[\")+o+\".length - 1] = \"+n+\";\\n\";if(\"INSERT\"==t)return o+\".push(\"+n+\");\\n\";break;case\"FROM_START\":if(i=Blockly.JavaScript.getAdjusted(e,\"AT\"),\"SET\"==t)return o+\"[\"+i+\"] = \"+n+\";\\n\";if(\"INSERT\"==t)return o+\".splice(\"+i+\", 0, \"+n+\");\\n\";break;case\"FROM_END\":if(i=Blockly.JavaScript.getAdjusted(e,\"AT\",1,!1,Blockly.JavaScript.ORDER_SUBTRACTION),e=l(),\"SET\"==t)return e+(o+\"[\")+o+\".length - \"+i+\"] = \"+n+\";\\n\";if(\"INSERT\"==t)return e+(o+\".splice(\")+o+\".length - \"+i+\", 0, \"+n+\");\\n\";break;case\"RANDOM\":if(e=l(),e+=\"var \"+(i=Blockly.JavaScript.variableDB_.getDistinctName(\"tmpX\",Blockly.Variables.NAME_TYPE))+\" = Math.floor(Math.random() * \"+o+\".length);\\n\",\"SET\"==t)return e+(o+\"[\")+i+\"] = \"+n+\";\\n\";if(\"INSERT\"==t)return e+(o+\".splice(\")+i+\", 0, \"+n+\");\\n\"}throw Error(\"Unhandled combination (lists_setIndex).\")},Blockly.JavaScript.lists.getIndex_=function(e,l,o){return\"FIRST\"==l?\"0\":\"FROM_END\"==l?e+\".length - 1 - \"+o:\"LAST\"==l?e+\".length - 1\":o},Blockly.JavaScript.lists_getSublist=function(e){var l=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\",o=e.getFieldValue(\"WHERE1\"),t=e.getFieldValue(\"WHERE2\");if(\"FIRST\"==o&&\"LAST\"==t)l+=\".slice(0)\";else if(l.match(/^\\w+$/)||\"FROM_END\"!=o&&\"FROM_START\"==t){switch(o){case\"FROM_START\":var i=Blockly.JavaScript.getAdjusted(e,\"AT1\");break;case\"FROM_END\":i=l+\".length - \"+(i=Blockly.JavaScript.getAdjusted(e,\"AT1\",1,!1,Blockly.JavaScript.ORDER_SUBTRACTION));break;case\"FIRST\":i=\"0\";break;default:throw Error(\"Unhandled option (lists_getSublist).\")}switch(t){case\"FROM_START\":e=Blockly.JavaScript.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":e=l+\".length - \"+(e=Blockly.JavaScript.getAdjusted(e,\"AT2\",0,!1,Blockly.JavaScript.ORDER_SUBTRACTION));break;case\"LAST\":e=l+\".length\";break;default:throw Error(\"Unhandled option (lists_getSublist).\")}l=l+\".slice(\"+i+\", \"+e+\")\"}else{i=Blockly.JavaScript.getAdjusted(e,\"AT1\"),e=Blockly.JavaScript.getAdjusted(e,\"AT2\");var n=Blockly.JavaScript.lists.getIndex_,a={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};l=Blockly.JavaScript.provideFunction_(\"subsequence\"+a[o]+a[t],[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==o||\"FROM_START\"==o?\", at1\":\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", at2\":\"\")+\") {\",\"  var start = \"+n(\"sequence\",o,\"at1\")+\";\",\"  var end = \"+n(\"sequence\",t,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+l+(\"FROM_END\"==o||\"FROM_START\"==o?\", \"+i:\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", \"+e:\"\")+\")\"}return[l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists_sort=function(e){var l=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"[]\",o=\"1\"===e.getFieldValue(\"DIRECTION\")?1:-1;return e=e.getFieldValue(\"TYPE\"),[l+\".slice().sort(\"+Blockly.JavaScript.provideFunction_(\"listsGetSortCompare\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(type, direction) {\",\"  var compareFuncs = {\",'    \"NUMERIC\": function(a, b) {',\"        return parseFloat(a) - parseFloat(b); },\",'    \"TEXT\": function(a, b) {',\"        return a.toString() > b.toString() ? 1 : -1; },\",'    \"IGNORE_CASE\": function(a, b) {',\"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\",\"  };\",\"  var compare = compareFuncs[type];\",\"  return function(a, b) { return compare(a, b) * direction; }\",\"}\"])+'(\"'+e+'\", '+o+\"))\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists_split=function(e){var l=Blockly.JavaScript.valueToCode(e,\"INPUT\",Blockly.JavaScript.ORDER_MEMBER),o=Blockly.JavaScript.valueToCode(e,\"DELIM\",Blockly.JavaScript.ORDER_NONE)||\"''\";if(\"SPLIT\"==(e=e.getFieldValue(\"MODE\")))l||(l=\"''\"),e=\"split\";else{if(\"JOIN\"!=e)throw Error(\"Unknown mode: \"+e);l||(l=\"[]\"),e=\"join\"}return[l+\".\"+e+\"(\"+o+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.lists_reverse=function(e){return[(Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"[]\")+\".slice().reverse()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.logic={},Blockly.JavaScript.controls_if=function(e){var l=0,o=\"\";do{var t=Blockly.JavaScript.valueToCode(e,\"IF\"+l,Blockly.JavaScript.ORDER_NONE)||\"false\",i=Blockly.JavaScript.statementToCode(e,\"DO\"+l);o+=(0<l?\" else \":\"\")+\"if (\"+t+\") {\\n\"+i+\"}\",++l}while(e.getInput(\"IF\"+l));return e.getInput(\"ELSE\")&&(o+=\" else {\\n\"+(i=Blockly.JavaScript.statementToCode(e,\"ELSE\"))+\"}\"),o+\"\\n\"},Blockly.JavaScript.controls_ifelse=Blockly.JavaScript.controls_if,Blockly.JavaScript.logic_compare=function(e){var l={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[e.getFieldValue(\"OP\")],o=\"==\"==l||\"!=\"==l?Blockly.JavaScript.ORDER_EQUALITY:Blockly.JavaScript.ORDER_RELATIONAL;return[(Blockly.JavaScript.valueToCode(e,\"A\",o)||\"0\")+\" \"+l+\" \"+(e=Blockly.JavaScript.valueToCode(e,\"B\",o)||\"0\"),o]},Blockly.JavaScript.logic_operation=function(e){var l=\"AND\"==e.getFieldValue(\"OP\")?\"&&\":\"||\",o=\"&&\"==l?Blockly.JavaScript.ORDER_LOGICAL_AND:Blockly.JavaScript.ORDER_LOGICAL_OR,t=Blockly.JavaScript.valueToCode(e,\"A\",o);if(e=Blockly.JavaScript.valueToCode(e,\"B\",o),t||e){var i=\"&&\"==l?\"true\":\"false\";t||(t=i),e||(e=i)}else e=t=\"false\";return[t+\" \"+l+\" \"+e,o]},Blockly.JavaScript.logic_negate=function(e){var l=Blockly.JavaScript.ORDER_LOGICAL_NOT;return[\"!\"+(Blockly.JavaScript.valueToCode(e,\"BOOL\",l)||\"true\"),l]},Blockly.JavaScript.logic_boolean=function(e){return[\"TRUE\"==e.getFieldValue(\"BOOL\")?\"true\":\"false\",Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.logic_null=function(e){return[\"null\",Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.logic_ternary=function(e){return[(Blockly.JavaScript.valueToCode(e,\"IF\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"false\")+\" ? \"+(Blockly.JavaScript.valueToCode(e,\"THEN\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"null\")+\" : \"+(e=Blockly.JavaScript.valueToCode(e,\"ELSE\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"null\"),Blockly.JavaScript.ORDER_CONDITIONAL]},Blockly.JavaScript.loops={},Blockly.JavaScript.controls_repeat_ext=function(e){var l=e.getField(\"TIMES\")?String(Number(e.getFieldValue(\"TIMES\"))):Blockly.JavaScript.valueToCode(e,\"TIMES\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",o=Blockly.JavaScript.statementToCode(e,\"DO\");o=Blockly.JavaScript.addLoopTrap(o,e.id),e=\"\";var t=Blockly.JavaScript.variableDB_.getDistinctName(\"count\",Blockly.Variables.NAME_TYPE),i=l;return l.match(/^\\w+$/)||Blockly.isNumber(l)||(e+=\"var \"+(i=Blockly.JavaScript.variableDB_.getDistinctName(\"repeat_end\",Blockly.Variables.NAME_TYPE))+\" = \"+l+\";\\n\"),e+\"for (var \"+t+\" = 0; \"+t+\" < \"+i+\"; \"+t+\"++) {\\n\"+o+\"}\\n\"},Blockly.JavaScript.controls_repeat=Blockly.JavaScript.controls_repeat_ext,Blockly.JavaScript.controls_whileUntil=function(e){var l=\"UNTIL\"==e.getFieldValue(\"MODE\"),o=Blockly.JavaScript.valueToCode(e,\"BOOL\",l?Blockly.JavaScript.ORDER_LOGICAL_NOT:Blockly.JavaScript.ORDER_NONE)||\"false\",t=Blockly.JavaScript.statementToCode(e,\"DO\");return l&&(o=\"!\"+o),\"while (\"+o+\") {\\n\"+(t=Blockly.JavaScript.addLoopTrap(t,e.id))+\"}\\n\"},Blockly.JavaScript.controls_for=function(e){var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),o=Blockly.JavaScript.valueToCode(e,\"FROM\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",t=Blockly.JavaScript.valueToCode(e,\"TO\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",i=Blockly.JavaScript.valueToCode(e,\"BY\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"1\",n=Blockly.JavaScript.statementToCode(e,\"DO\");if(n=Blockly.JavaScript.addLoopTrap(n,e.id),Blockly.isNumber(o)&&Blockly.isNumber(t)&&Blockly.isNumber(i)){var a=parseFloat(o)<=parseFloat(t);e=\"for (\"+l+\" = \"+o+\"; \"+l+(a?\" <= \":\" >= \")+t+\"; \"+l,e=(1==(l=Math.abs(parseFloat(i)))?e+(a?\"++\":\"--\"):e+(a?\" += \":\" -= \")+l)+\") {\\n\"+n+\"}\\n\"}else e=\"\",a=o,o.match(/^\\w+$/)||Blockly.isNumber(o)||(e+=\"var \"+(a=Blockly.JavaScript.variableDB_.getDistinctName(l+\"_start\",Blockly.Variables.NAME_TYPE))+\" = \"+o+\";\\n\"),o=t,t.match(/^\\w+$/)||Blockly.isNumber(t)||(e+=\"var \"+(o=Blockly.JavaScript.variableDB_.getDistinctName(l+\"_end\",Blockly.Variables.NAME_TYPE))+\" = \"+t+\";\\n\"),e+=\"var \"+(t=Blockly.JavaScript.variableDB_.getDistinctName(l+\"_inc\",Blockly.Variables.NAME_TYPE))+\" = \",e=(e=Blockly.isNumber(i)?e+(Math.abs(i)+\";\\n\"):e+\"Math.abs(\"+i+\");\\n\")+\"if (\"+a+\" > \"+o+\") {\\n\"+(Blockly.JavaScript.INDENT+t)+\" = -\"+t+\";\\n\",e+=\"}\\n\",e+=\"for (\"+l+\" = \"+a+\"; \"+t+\" >= 0 ? \"+l+\" <= \"+o+\" : \"+l+\" >= \"+o+\"; \"+l+\" += \"+t+\") {\\n\"+n+\"}\\n\";return e},Blockly.JavaScript.controls_forEach=function(e){var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),o=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"[]\",t=Blockly.JavaScript.statementToCode(e,\"DO\");t=Blockly.JavaScript.addLoopTrap(t,e.id),e=\"\";var i=o;return o.match(/^\\w+$/)||(e+=\"var \"+(i=Blockly.JavaScript.variableDB_.getDistinctName(l+\"_list\",Blockly.Variables.NAME_TYPE))+\" = \"+o+\";\\n\"),e+\"for (var \"+(o=Blockly.JavaScript.variableDB_.getDistinctName(l+\"_index\",Blockly.Variables.NAME_TYPE))+\" in \"+i+\") {\\n\"+(t=Blockly.JavaScript.INDENT+l+\" = \"+i+\"[\"+o+\"];\\n\"+t)+\"}\\n\"},Blockly.JavaScript.controls_flow_statements=function(e){switch(e.getFieldValue(\"FLOW\")){case\"BREAK\":return\"break;\\n\";case\"CONTINUE\":return\"continue;\\n\"}throw Error(\"Unknown flow statement.\")},Blockly.JavaScript.math={},Blockly.JavaScript.math_number=function(e){return[e=parseFloat(e.getFieldValue(\"NUM\")),0<=e?Blockly.JavaScript.ORDER_ATOMIC:Blockly.JavaScript.ORDER_UNARY_NEGATION]},Blockly.JavaScript.math_arithmetic=function(e){var l={ADD:[\" + \",Blockly.JavaScript.ORDER_ADDITION],MINUS:[\" - \",Blockly.JavaScript.ORDER_SUBTRACTION],MULTIPLY:[\" * \",Blockly.JavaScript.ORDER_MULTIPLICATION],DIVIDE:[\" / \",Blockly.JavaScript.ORDER_DIVISION],POWER:[null,Blockly.JavaScript.ORDER_COMMA]}[e.getFieldValue(\"OP\")],o=l[0];l=l[1];var t=Blockly.JavaScript.valueToCode(e,\"A\",l)||\"0\";return e=Blockly.JavaScript.valueToCode(e,\"B\",l)||\"0\",o?[t+o+e,l]:[\"Math.pow(\"+t+\", \"+e+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.math_single=function(e){var l=e.getFieldValue(\"OP\");if(\"NEG\"==l)return\"-\"==(e=Blockly.JavaScript.valueToCode(e,\"NUM\",Blockly.JavaScript.ORDER_UNARY_NEGATION)||\"0\")[0]&&(e=\" \"+e),[\"-\"+e,Blockly.JavaScript.ORDER_UNARY_NEGATION];switch(e=\"SIN\"==l||\"COS\"==l||\"TAN\"==l?Blockly.JavaScript.valueToCode(e,\"NUM\",Blockly.JavaScript.ORDER_DIVISION)||\"0\":Blockly.JavaScript.valueToCode(e,\"NUM\",Blockly.JavaScript.ORDER_NONE)||\"0\",l){case\"ABS\":var o=\"Math.abs(\"+e+\")\";break;case\"ROOT\":o=\"Math.sqrt(\"+e+\")\";break;case\"LN\":o=\"Math.log(\"+e+\")\";break;case\"EXP\":o=\"Math.exp(\"+e+\")\";break;case\"POW10\":o=\"Math.pow(10,\"+e+\")\";break;case\"ROUND\":o=\"Math.round(\"+e+\")\";break;case\"ROUNDUP\":o=\"Math.ceil(\"+e+\")\";break;case\"ROUNDDOWN\":o=\"Math.floor(\"+e+\")\";break;case\"SIN\":o=\"Math.sin(\"+e+\" / 180 * Math.PI)\";break;case\"COS\":o=\"Math.cos(\"+e+\" / 180 * Math.PI)\";break;case\"TAN\":o=\"Math.tan(\"+e+\" / 180 * Math.PI)\"}if(o)return[o,Blockly.JavaScript.ORDER_FUNCTION_CALL];switch(l){case\"LOG10\":o=\"Math.log(\"+e+\") / Math.log(10)\";break;case\"ASIN\":o=\"Math.asin(\"+e+\") / Math.PI * 180\";break;case\"ACOS\":o=\"Math.acos(\"+e+\") / Math.PI * 180\";break;case\"ATAN\":o=\"Math.atan(\"+e+\") / Math.PI * 180\";break;default:throw Error(\"Unknown math operator: \"+l)}return[o,Blockly.JavaScript.ORDER_DIVISION]},Blockly.JavaScript.math_constant=function(e){return{PI:[\"Math.PI\",Blockly.JavaScript.ORDER_MEMBER],E:[\"Math.E\",Blockly.JavaScript.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + Math.sqrt(5)) / 2\",Blockly.JavaScript.ORDER_DIVISION],SQRT2:[\"Math.SQRT2\",Blockly.JavaScript.ORDER_MEMBER],SQRT1_2:[\"Math.SQRT1_2\",Blockly.JavaScript.ORDER_MEMBER],INFINITY:[\"Infinity\",Blockly.JavaScript.ORDER_ATOMIC]}[e.getFieldValue(\"CONSTANT\")]},Blockly.JavaScript.math_number_property=function(e){var l=Blockly.JavaScript.valueToCode(e,\"NUMBER_TO_CHECK\",Blockly.JavaScript.ORDER_MODULUS)||\"0\",o=e.getFieldValue(\"PROPERTY\");if(\"PRIME\"==o)return[Blockly.JavaScript.provideFunction_(\"mathIsPrime\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(n) {\",\"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\"  if (n == 2 || n == 3) {\",\"    return true;\",\"  }\",\"  // False if n is NaN, negative, is 1, or not whole.\",\"  // And false if n is divisible by 2 or 3.\",\"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\",\"    return false;\",\"  }\",\"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\",\"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\",\"      return false;\",\"    }\",\"  }\",\"  return true;\",\"}\"])+\"(\"+l+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL];switch(o){case\"EVEN\":var t=l+\" % 2 == 0\";break;case\"ODD\":t=l+\" % 2 == 1\";break;case\"WHOLE\":t=l+\" % 1 == 0\";break;case\"POSITIVE\":t=l+\" > 0\";break;case\"NEGATIVE\":t=l+\" < 0\";break;case\"DIVISIBLE_BY\":t=l+\" % \"+(e=Blockly.JavaScript.valueToCode(e,\"DIVISOR\",Blockly.JavaScript.ORDER_MODULUS)||\"0\")+\" == 0\"}return[t,Blockly.JavaScript.ORDER_EQUALITY]},Blockly.JavaScript.math_change=function(e){var l=Blockly.JavaScript.valueToCode(e,\"DELTA\",Blockly.JavaScript.ORDER_ADDITION)||\"0\";return(e=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE))+\" = (typeof \"+e+\" == 'number' ? \"+e+\" : 0) + \"+l+\";\\n\"},Blockly.JavaScript.math_round=Blockly.JavaScript.math_single,Blockly.JavaScript.math_trig=Blockly.JavaScript.math_single,Blockly.JavaScript.math_on_list=function(e){var l=e.getFieldValue(\"OP\");switch(l){case\"SUM\":e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\",e+=\".reduce(function(x, y) {return x + y;})\";break;case\"MIN\":e=\"Math.min.apply(null, \"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_COMMA)||\"[]\")+\")\";break;case\"MAX\":e=\"Math.max.apply(null, \"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_COMMA)||\"[]\")+\")\";break;case\"AVERAGE\":e=(l=Blockly.JavaScript.provideFunction_(\"mathMean\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\",\"}\"]))+\"(\"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\")+\")\";break;case\"MEDIAN\":e=(l=Blockly.JavaScript.provideFunction_(\"mathMedian\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  var localList = myList.filter(function (x) {return typeof x == 'number';});\",\"  if (!localList.length) return null;\",\"  localList.sort(function(a, b) {return b - a;});\",\"  if (localList.length % 2 == 0) {\",\"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\",\"  } else {\",\"    return localList[(localList.length - 1) / 2];\",\"  }\",\"}\"]))+\"(\"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\")+\")\";break;case\"MODE\":e=(l=Blockly.JavaScript.provideFunction_(\"mathModes\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(values) {\",\"  var modes = [];\",\"  var counts = [];\",\"  var maxCount = 0;\",\"  for (var i = 0; i < values.length; i++) {\",\"    var value = values[i];\",\"    var found = false;\",\"    var thisCount;\",\"    for (var j = 0; j < counts.length; j++) {\",\"      if (counts[j][0] === value) {\",\"        thisCount = ++counts[j][1];\",\"        found = true;\",\"        break;\",\"      }\",\"    }\",\"    if (!found) {\",\"      counts.push([value, 1]);\",\"      thisCount = 1;\",\"    }\",\"    maxCount = Math.max(thisCount, maxCount);\",\"  }\",\"  for (var j = 0; j < counts.length; j++) {\",\"    if (counts[j][1] == maxCount) {\",\"        modes.push(counts[j][0]);\",\"    }\",\"  }\",\"  return modes;\",\"}\"]))+\"(\"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\")+\")\";break;case\"STD_DEV\":e=(l=Blockly.JavaScript.provideFunction_(\"mathStandardDeviation\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(numbers) {\",\"  var n = numbers.length;\",\"  if (!n) return null;\",\"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\",\"  var variance = 0;\",\"  for (var j = 0; j < n; j++) {\",\"    variance += Math.pow(numbers[j] - mean, 2);\",\"  }\",\"  variance = variance / n;\",\"  return Math.sqrt(variance);\",\"}\"]))+\"(\"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\")+\")\";break;case\"RANDOM\":e=(l=Blockly.JavaScript.provideFunction_(\"mathRandomList\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(list) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  return list[x];\",\"}\"]))+\"(\"+(e=Blockly.JavaScript.valueToCode(e,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\")+\")\";break;default:throw Error(\"Unknown operator: \"+l)}return[e,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.math_modulo=function(e){return[(Blockly.JavaScript.valueToCode(e,\"DIVIDEND\",Blockly.JavaScript.ORDER_MODULUS)||\"0\")+\" % \"+(e=Blockly.JavaScript.valueToCode(e,\"DIVISOR\",Blockly.JavaScript.ORDER_MODULUS)||\"0\"),Blockly.JavaScript.ORDER_MODULUS]},Blockly.JavaScript.math_constrain=function(e){return[\"Math.min(Math.max(\"+(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_COMMA)||\"0\")+\", \"+(Blockly.JavaScript.valueToCode(e,\"LOW\",Blockly.JavaScript.ORDER_COMMA)||\"0\")+\"), \"+(e=Blockly.JavaScript.valueToCode(e,\"HIGH\",Blockly.JavaScript.ORDER_COMMA)||\"Infinity\")+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.math_random_int=function(e){var l=Blockly.JavaScript.valueToCode(e,\"FROM\",Blockly.JavaScript.ORDER_COMMA)||\"0\";return e=Blockly.JavaScript.valueToCode(e,\"TO\",Blockly.JavaScript.ORDER_COMMA)||\"0\",[Blockly.JavaScript.provideFunction_(\"mathRandomInt\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(a, b) {\",\"  if (a > b) {\",\"    // Swap a and b to ensure a is smaller.\",\"    var c = a;\",\"    a = b;\",\"    b = c;\",\"  }\",\"  return Math.floor(Math.random() * (b - a + 1) + a);\",\"}\"])+\"(\"+l+\", \"+e+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.math_random_float=function(e){return[\"Math.random()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.math_atan2=function(e){var l=Blockly.JavaScript.valueToCode(e,\"X\",Blockly.JavaScript.ORDER_COMMA)||\"0\";return[\"Math.atan2(\"+(Blockly.JavaScript.valueToCode(e,\"Y\",Blockly.JavaScript.ORDER_COMMA)||\"0\")+\", \"+l+\") / Math.PI * 180\",Blockly.JavaScript.ORDER_DIVISION]},Blockly.JavaScript.procedures={},Blockly.JavaScript.procedures_defreturn=function(e){var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=Blockly.JavaScript.statementToCode(e,\"STACK\");if(Blockly.JavaScript.STATEMENT_PREFIX){var t=e.id.replace(/\\$/g,\"$$$$\");o=Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g,\"'\"+t+\"'\"),Blockly.JavaScript.INDENT)+o}Blockly.JavaScript.INFINITE_LOOP_TRAP&&(o=Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g,\"'\"+e.id+\"'\")+o),(t=Blockly.JavaScript.valueToCode(e,\"RETURN\",Blockly.JavaScript.ORDER_NONE)||\"\")&&(t=Blockly.JavaScript.INDENT+\"return \"+t+\";\\n\");for(var i=[],n=0;n<e.arguments_.length;n++)i[n]=Blockly.JavaScript.variableDB_.getName(e.arguments_[n],Blockly.Variables.NAME_TYPE);return o=\"function \"+l+\"(\"+i.join(\", \")+\") {\\n\"+o+t+\"}\",o=Blockly.JavaScript.scrub_(e,o),Blockly.JavaScript.definitions_[\"%\"+l]=o,null},Blockly.JavaScript.procedures_defnoreturn=Blockly.JavaScript.procedures_defreturn,Blockly.JavaScript.procedures_callreturn=function(e){for(var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=[],t=0;t<e.arguments_.length;t++)o[t]=Blockly.JavaScript.valueToCode(e,\"ARG\"+t,Blockly.JavaScript.ORDER_COMMA)||\"null\";return[l+\"(\"+o.join(\", \")+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.procedures_callnoreturn=function(e){for(var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=[],t=0;t<e.arguments_.length;t++)o[t]=Blockly.JavaScript.valueToCode(e,\"ARG\"+t,Blockly.JavaScript.ORDER_COMMA)||\"null\";return l+\"(\"+o.join(\", \")+\");\\n\"},Blockly.JavaScript.procedures_ifreturn=function(e){var l=\"if (\"+(Blockly.JavaScript.valueToCode(e,\"CONDITION\",Blockly.JavaScript.ORDER_NONE)||\"false\")+\") {\\n\";return e.hasReturnValue_?(e=Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_NONE)||\"null\",l+=Blockly.JavaScript.INDENT+\"return \"+e+\";\\n\"):l+=Blockly.JavaScript.INDENT+\"return;\\n\",l+\"}\\n\"},Blockly.JavaScript.texts={},Blockly.JavaScript.text=function(e){return[Blockly.JavaScript.quote_(e.getFieldValue(\"TEXT\")),Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.text.forceString_=function(e){return Blockly.JavaScript.text.forceString_.strRegExp.test(e)?e:\"String(\"+e+\")\"},Blockly.JavaScript.text.forceString_.strRegExp=/^\\s*'([^']|\\\\')*'\\s*$/,Blockly.JavaScript.text_join=function(e){switch(e.itemCount_){case 0:return[\"''\",Blockly.JavaScript.ORDER_ATOMIC];case 1:return e=Blockly.JavaScript.valueToCode(e,\"ADD0\",Blockly.JavaScript.ORDER_NONE)||\"''\",[e=Blockly.JavaScript.text.forceString_(e),Blockly.JavaScript.ORDER_FUNCTION_CALL];case 2:var l=Blockly.JavaScript.valueToCode(e,\"ADD0\",Blockly.JavaScript.ORDER_NONE)||\"''\";return e=Blockly.JavaScript.valueToCode(e,\"ADD1\",Blockly.JavaScript.ORDER_NONE)||\"''\",[e=Blockly.JavaScript.text.forceString_(l)+\" + \"+Blockly.JavaScript.text.forceString_(e),Blockly.JavaScript.ORDER_ADDITION];default:l=Array(e.itemCount_);for(var o=0;o<e.itemCount_;o++)l[o]=Blockly.JavaScript.valueToCode(e,\"ADD\"+o,Blockly.JavaScript.ORDER_COMMA)||\"''\";return[e=\"[\"+l.join(\",\")+\"].join('')\",Blockly.JavaScript.ORDER_FUNCTION_CALL]}},Blockly.JavaScript.text_append=function(e){var l=Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return e=Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\",l+\" += \"+Blockly.JavaScript.text.forceString_(e)+\";\\n\"},Blockly.JavaScript.text_length=function(e){return[(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"''\")+\".length\",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.text_isEmpty=function(e){return[\"!\"+(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".length\",Blockly.JavaScript.ORDER_LOGICAL_NOT]},Blockly.JavaScript.text_indexOf=function(e){var l=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",o=Blockly.JavaScript.valueToCode(e,\"FIND\",Blockly.JavaScript.ORDER_NONE)||\"''\";return l=(Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".\"+l+\"(\"+o+\")\",e.workspace.options.oneBasedIndex?[l+\" + 1\",Blockly.JavaScript.ORDER_ADDITION]:[l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.text_charAt=function(e){var l=e.getFieldValue(\"WHERE\")||\"FROM_START\",o=Blockly.JavaScript.valueToCode(e,\"VALUE\",\"RANDOM\"==l?Blockly.JavaScript.ORDER_NONE:Blockly.JavaScript.ORDER_MEMBER)||\"''\";switch(l){case\"FIRST\":return[o+\".charAt(0)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case\"LAST\":return[o+\".slice(-1)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case\"FROM_START\":return[o+\".charAt(\"+(e=Blockly.JavaScript.getAdjusted(e,\"AT\"))+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case\"FROM_END\":return[o+\".slice(\"+(e=Blockly.JavaScript.getAdjusted(e,\"AT\",1,!0))+\").charAt(0)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case\"RANDOM\":return[Blockly.JavaScript.provideFunction_(\"textRandomLetter\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(text) {\",\"  var x = Math.floor(Math.random() * text.length);\",\"  return text[x];\",\"}\"])+\"(\"+o+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]}throw Error(\"Unhandled option (text_charAt).\")},Blockly.JavaScript.text.getIndex_=function(e,l,o){return\"FIRST\"==l?\"0\":\"FROM_END\"==l?e+\".length - 1 - \"+o:\"LAST\"==l?e+\".length - 1\":o},Blockly.JavaScript.text_getSubstring=function(e){var l=Blockly.JavaScript.valueToCode(e,\"STRING\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"''\",o=e.getFieldValue(\"WHERE1\"),t=e.getFieldValue(\"WHERE2\");if(\"FIRST\"!=o||\"LAST\"!=t)if(l.match(/^'?\\w+'?$/)||\"FROM_END\"!=o&&\"LAST\"!=o&&\"FROM_END\"!=t&&\"LAST\"!=t){switch(o){case\"FROM_START\":var i=Blockly.JavaScript.getAdjusted(e,\"AT1\");break;case\"FROM_END\":i=l+\".length - \"+(i=Blockly.JavaScript.getAdjusted(e,\"AT1\",1,!1,Blockly.JavaScript.ORDER_SUBTRACTION));break;case\"FIRST\":i=\"0\";break;default:throw Error(\"Unhandled option (text_getSubstring).\")}switch(t){case\"FROM_START\":e=Blockly.JavaScript.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":e=l+\".length - \"+(e=Blockly.JavaScript.getAdjusted(e,\"AT2\",0,!1,Blockly.JavaScript.ORDER_SUBTRACTION));break;case\"LAST\":e=l+\".length\";break;default:throw Error(\"Unhandled option (text_getSubstring).\")}l=l+\".slice(\"+i+\", \"+e+\")\"}else{i=Blockly.JavaScript.getAdjusted(e,\"AT1\"),e=Blockly.JavaScript.getAdjusted(e,\"AT2\");var n=Blockly.JavaScript.text.getIndex_,a={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};l=Blockly.JavaScript.provideFunction_(\"subsequence\"+a[o]+a[t],[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==o||\"FROM_START\"==o?\", at1\":\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", at2\":\"\")+\") {\",\"  var start = \"+n(\"sequence\",o,\"at1\")+\";\",\"  var end = \"+n(\"sequence\",t,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+l+(\"FROM_END\"==o||\"FROM_START\"==o?\", \"+i:\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", \"+e:\"\")+\")\"}return[l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.text_changeCase=function(e){var l={UPPERCASE:\".toUpperCase()\",LOWERCASE:\".toLowerCase()\",TITLECASE:null}[e.getFieldValue(\"CASE\")];return e=Blockly.JavaScript.valueToCode(e,\"TEXT\",l?Blockly.JavaScript.ORDER_MEMBER:Blockly.JavaScript.ORDER_NONE)||\"''\",[l?e+l:Blockly.JavaScript.provideFunction_(\"textToTitleCase\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(str) {\",\"  return str.replace(/\\\\S+/g,\",\"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\",\"}\"])+\"(\"+e+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.text_trim=function(e){var l={LEFT:\".replace(/^[\\\\s\\\\xa0]+/, '')\",RIGHT:\".replace(/[\\\\s\\\\xa0]+$/, '')\",BOTH:\".trim()\"}[e.getFieldValue(\"MODE\")];return[(Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.text_print=function(e){return\"window.alert(\"+(Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.JavaScript.text_prompt_ext=function(e){var l=\"window.prompt(\"+(e.getField(\"TEXT\")?Blockly.JavaScript.quote_(e.getFieldValue(\"TEXT\")):Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\")+\")\";return\"NUMBER\"==e.getFieldValue(\"TYPE\")&&(l=\"parseFloat(\"+l+\")\"),[l,Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.text_prompt=Blockly.JavaScript.text_prompt_ext,Blockly.JavaScript.text_count=function(e){var l=Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\";return e=Blockly.JavaScript.valueToCode(e,\"SUB\",Blockly.JavaScript.ORDER_NONE)||\"''\",[Blockly.JavaScript.provideFunction_(\"textCount\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle) {\",\"  if (needle.length === 0) {\",\"    return haystack.length + 1;\",\"  } else {\",\"    return haystack.split(needle).length - 1;\",\"  }\",\"}\"])+\"(\"+l+\", \"+e+\")\",Blockly.JavaScript.ORDER_SUBTRACTION]},Blockly.JavaScript.text_replace=function(e){var l=Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\",o=Blockly.JavaScript.valueToCode(e,\"FROM\",Blockly.JavaScript.ORDER_NONE)||\"''\";return e=Blockly.JavaScript.valueToCode(e,\"TO\",Blockly.JavaScript.ORDER_NONE)||\"''\",[Blockly.JavaScript.provideFunction_(\"textReplace\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle, replacement) {\",'  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")','                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\"  return haystack.replace(new RegExp(needle, 'g'), replacement);\",\"}\"])+\"(\"+l+\", \"+o+\", \"+e+\")\",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.text_reverse=function(e){return[(Blockly.JavaScript.valueToCode(e,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".split('').reverse().join('')\",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.variables={},Blockly.JavaScript.variables_get=function(e){return[Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),Blockly.JavaScript.ORDER_ATOMIC]},Blockly.JavaScript.variables_set=function(e){var l=Blockly.JavaScript.valueToCode(e,\"VALUE\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\";return Blockly.JavaScript.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE)+\" = \"+l+\";\\n\"},Blockly.JavaScript.variablesDynamic={},Blockly.JavaScript.variables_get_dynamic=Blockly.JavaScript.variables_get,Blockly.JavaScript.variables_set_dynamic=Blockly.JavaScript.variables_set},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Msg.es\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ADD_COMMENT=\"Añadir comentario\",Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE='No se puede eliminar la variable \"%1\" porque es parte de la definición de la función \"%2\"',Blockly.Msg.CHANGE_VALUE_TITLE=\"Cambiar el valor:\",Blockly.Msg.CLEAN_UP=\"Limpiar los bloques\",Blockly.Msg.COLLAPSED_WARNINGS_WARNING=\"Collapsed blocks contain warnings.\",Blockly.Msg.COLLAPSE_ALL=\"Contraer bloques\",Blockly.Msg.COLLAPSE_BLOCK=\"Contraer bloque\",Blockly.Msg.COLOUR_BLEND_COLOUR1=\"color 1\",Blockly.Msg.COLOUR_BLEND_COLOUR2=\"color 2\",Blockly.Msg.COLOUR_BLEND_HELPURL=\"https://meyerweb.com/eric/tools/color-blend/#:::rgbp\",Blockly.Msg.COLOUR_BLEND_RATIO=\"proporción\",Blockly.Msg.COLOUR_BLEND_TITLE=\"combinar\",Blockly.Msg.COLOUR_BLEND_TOOLTIP=\"Combina dos colores con una proporción determinada (0,0–1,0).\",Blockly.Msg.COLOUR_PICKER_HELPURL=\"https://es.wikipedia.org/wiki/Color\",Blockly.Msg.COLOUR_PICKER_TOOLTIP=\"Elige un color de la paleta.\",Blockly.Msg.COLOUR_RANDOM_HELPURL=\"http://randomcolour.com\",Blockly.Msg.COLOUR_RANDOM_TITLE=\"color aleatorio\",Blockly.Msg.COLOUR_RANDOM_TOOLTIP=\"Elige un color al azar.\",Blockly.Msg.COLOUR_RGB_BLUE=\"azul\",Blockly.Msg.COLOUR_RGB_GREEN=\"verde\",Blockly.Msg.COLOUR_RGB_HELPURL=\"https://www.december.com/html/spec/colorpercompact.html\",Blockly.Msg.COLOUR_RGB_RED=\"rojo\",Blockly.Msg.COLOUR_RGB_TITLE=\"colorear con\",Blockly.Msg.COLOUR_RGB_TOOLTIP=\"Crea un color con cantidades específicas de rojo, verde y azul. Todos los valores deben encontrarse entre 0 y 100.\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL=\"https://github.com/google/blockly/wiki/Loops#loop-termination-blocks\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK=\"romper el bucle\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE=\"continuar con la siguiente iteración del bucle\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK=\"Romper el bucle que lo contiene.\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE=\"Saltar el resto de este bucle, y continuar con la siguiente iteración.\",Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING=\"Atención: este bloque puede usarse solamente dentro de un bucle.\",Blockly.Msg.CONTROLS_FOREACH_HELPURL=\"https://es.wikipedia.org/wiki/Foreach\",Blockly.Msg.CONTROLS_FOREACH_TITLE=\"para cada elemento %1 en la lista %2\",Blockly.Msg.CONTROLS_FOREACH_TOOLTIP=\"Para cada elemento en una lista, establecer la variable '%1' al elemento y luego hacer algunas declaraciones.\",Blockly.Msg.CONTROLS_FOR_HELPURL=\"https://github.com/google/blockly/wiki/Loops#count-with\",Blockly.Msg.CONTROLS_FOR_TITLE=\"contar con %1 desde %2 hasta %3 de a %4\",Blockly.Msg.CONTROLS_FOR_TOOLTIP='Hacer que la variable \"%1\" tome los valores desde el número de inicio hasta el número final, contando con el intervalo especificado, y hacer los bloques especificados.',Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP=\"Agregar una condición a este bloque.\",Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP=\"Agregar una condición general final a este bloque.\",Blockly.Msg.CONTROLS_IF_HELPURL=\"https://github.com/google/blockly/wiki/IfElse\",Blockly.Msg.CONTROLS_IF_IF_TOOLTIP=\"Agregar, eliminar o reordenar las secciones para reconfigurar este bloque.\",Blockly.Msg.CONTROLS_IF_MSG_ELSE=\"sino\",Blockly.Msg.CONTROLS_IF_MSG_ELSEIF=\"sino si\",Blockly.Msg.CONTROLS_IF_MSG_IF=\"si\",Blockly.Msg.CONTROLS_IF_TOOLTIP_1=\"Si un valor es verdadero, entonces hacer algunas declaraciones.\",Blockly.Msg.CONTROLS_IF_TOOLTIP_2=\"Si un valor es verdadero, entonces hacer el primer bloque de declaraciones.  De lo contrario, hacer el segundo bloque de declaraciones.\",Blockly.Msg.CONTROLS_IF_TOOLTIP_3=\"Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones.\",Blockly.Msg.CONTROLS_IF_TOOLTIP_4=\"Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones. Si ninguno de los valores son verdaderos, hacer el último bloque de declaraciones.\",Blockly.Msg.CONTROLS_REPEAT_HELPURL=\"https://es.wikipedia.org/wiki/Bucle_for\",Blockly.Msg.CONTROLS_REPEAT_INPUT_DO=\"hacer\",Blockly.Msg.CONTROLS_REPEAT_TITLE=\"repetir %1 veces\",Blockly.Msg.CONTROLS_REPEAT_TOOLTIP=\"Hacer algunas declaraciones varias veces.\",Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL=\"https://github.com/google/blockly/wiki/Loops#repeat\",Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL=\"repetir hasta\",Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE=\"repetir mientras\",Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL=\"Mientras un valor sea falso, entonces hacer algunas declaraciones.\",Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE=\"Mientras un valor sea verdadero, entonces hacer algunas declaraciones.\",Blockly.Msg.DELETE_ALL_BLOCKS=\"¿Eliminar todos los %1 bloques?\",Blockly.Msg.DELETE_BLOCK=\"Eliminar bloque\",Blockly.Msg.DELETE_VARIABLE='Borrar la variable \"%1\"',Blockly.Msg.DELETE_VARIABLE_CONFIRMATION='¿Borrar %1 usos de la variable \"%2\"?',Blockly.Msg.DELETE_X_BLOCKS=\"Eliminar %1 bloques\",Blockly.Msg.DISABLE_BLOCK=\"Desactivar bloque\",Blockly.Msg.DUPLICATE_BLOCK=\"Duplicar\",Blockly.Msg.DUPLICATE_COMMENT=\"Duplicar comentario\",Blockly.Msg.ENABLE_BLOCK=\"Activar bloque\",Blockly.Msg.EXPAND_ALL=\"Expandir bloques\",Blockly.Msg.EXPAND_BLOCK=\"Expandir bloque\",Blockly.Msg.EXTERNAL_INPUTS=\"Entradas externas\",Blockly.Msg.HELP=\"Ayuda\",Blockly.Msg.INLINE_INPUTS=\"Entradas en línea\",Blockly.Msg.IOS_CANCEL=\"Cancelar\",Blockly.Msg.IOS_ERROR=\"Error\",Blockly.Msg.IOS_OK=\"Aceptar\",Blockly.Msg.IOS_PROCEDURES_ADD_INPUT=\"+ Añadir entrada\",Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS=\"Permitir declaraciones\",Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR=\"Esta función tiene entradas duplicadas.\",Blockly.Msg.IOS_PROCEDURES_INPUTS=\"ENTRADAS\",Blockly.Msg.IOS_VARIABLES_ADD_BUTTON=\"Añadir\",Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE=\"+ Añadir variable\",Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON=\"Borrar\",Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR=\"No puedes usar un nombre de variable vacío.\",Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON=\"Renombrar\",Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME=\"Nombre de la variable\",Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL=\"https://github.com/google/blockly/wiki/Lists#create-empty-list\",Blockly.Msg.LISTS_CREATE_EMPTY_TITLE=\"crear lista vacía\",Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP=\"Devuelve una lista, de longitud 0, sin ningún dato\",Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD=\"lista\",Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP=\"Agregar, eliminar o reorganizar las secciones para reconfigurar este bloque de lista.\",Blockly.Msg.LISTS_CREATE_WITH_HELPURL=\"https://github.com/google/blockly/wiki/Lists#create-list-with\",Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH=\"crear lista con\",Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP=\"Agregar un elemento a la lista.\",Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP=\"Crear una lista con cualquier número de elementos.\",Blockly.Msg.LISTS_GET_INDEX_FIRST=\"primero\",Blockly.Msg.LISTS_GET_INDEX_FROM_END=\"# del final\",Blockly.Msg.LISTS_GET_INDEX_FROM_START=\"#\",Blockly.Msg.LISTS_GET_INDEX_GET=\"obtener\",Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE=\"obtener y eliminar\",Blockly.Msg.LISTS_GET_INDEX_LAST=\"último\",Blockly.Msg.LISTS_GET_INDEX_RANDOM=\"aleatorio\",Blockly.Msg.LISTS_GET_INDEX_REMOVE=\"eliminar\",Blockly.Msg.LISTS_GET_INDEX_TAIL=\"\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST=\"Devuelve el primer elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM=\"Devuelve el elemento en la posición especificada en una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST=\"Devuelve el último elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM=\"Devuelve un elemento aleatorio en una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST=\"Elimina y devuelve el primer elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM=\"Elimina y devuelve el elemento en la posición especificada en una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST=\"Elimina y devuelve el último elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM=\"Elimina y devuelve un elemento aleatorio en una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST=\"Elimina el primer elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM=\"Elimina el elemento en la posición especificada en una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST=\"Elimina el último elemento de una lista.\",Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM=\"Elimina un elemento aleatorio en una lista.\",Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END=\"hasta # del final\",Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START=\"hasta #\",Blockly.Msg.LISTS_GET_SUBLIST_END_LAST=\"hasta el último\",Blockly.Msg.LISTS_GET_SUBLIST_HELPURL=\"https://github.com/google/blockly/wiki/Lists#getting-a-sublist\",Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST=\"obtener sublista desde el primero\",Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END=\"obtener sublista desde # del final\",Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START=\"obtener sublista desde #\",Blockly.Msg.LISTS_GET_SUBLIST_TAIL=\"\",Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP=\"Crea una copia de la parte especificada de una lista.\",Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP=\"%1 es el último elemento.\",Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP=\"%1 es el primer elemento.\",Blockly.Msg.LISTS_INDEX_OF_FIRST=\"encontrar la primera aparición del elemento\",Blockly.Msg.LISTS_INDEX_OF_HELPURL=\"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list\",Blockly.Msg.LISTS_INDEX_OF_LAST=\"encontrar la última aparición del elemento\",Blockly.Msg.LISTS_INDEX_OF_TOOLTIP=\"Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve %1 si el elemento no se encuentra.\",Blockly.Msg.LISTS_INLIST=\"en la lista\",Blockly.Msg.LISTS_ISEMPTY_HELPURL=\"https://github.com/google/blockly/wiki/Lists#is-empty\",Blockly.Msg.LISTS_ISEMPTY_TITLE=\"%1 está vacía\",Blockly.Msg.LISTS_ISEMPTY_TOOLTIP=\"Devuelve verdadero si la lista está vacía.\",Blockly.Msg.LISTS_LENGTH_HELPURL=\"https://github.com/google/blockly/wiki/Lists#length-of\",Blockly.Msg.LISTS_LENGTH_TITLE=\"longitud de %1\",Blockly.Msg.LISTS_LENGTH_TOOLTIP=\"Devuelve la longitud de una lista.\",Blockly.Msg.LISTS_REPEAT_HELPURL=\"https://github.com/google/blockly/wiki/Lists#create-list-with\",Blockly.Msg.LISTS_REPEAT_TITLE=\"crear lista con el elemento %1 repetido %2 veces\",Blockly.Msg.LISTS_REPEAT_TOOLTIP=\"Crea una lista que consta de un valor dado repetido el número de veces especificado.\",Blockly.Msg.LISTS_REVERSE_HELPURL=\"https://github.com/google/blockly/wiki/Lists#reversing-a-list\",Blockly.Msg.LISTS_REVERSE_MESSAGE0=\"invertir %1\",Blockly.Msg.LISTS_REVERSE_TOOLTIP=\"Invertir una copia de una lista.\",Blockly.Msg.LISTS_SET_INDEX_HELPURL=\"https://github.com/google/blockly/wiki/Lists#in-list--set\",Blockly.Msg.LISTS_SET_INDEX_INPUT_TO=\"como\",Blockly.Msg.LISTS_SET_INDEX_INSERT=\"insertar en\",Blockly.Msg.LISTS_SET_INDEX_SET=\"establecer\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST=\"Inserta el elemento al inicio de una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM=\"Inserta el elemento en la posición especificada en una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST=\"Añade el elemento al final de una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM=\"Inserta el elemento aleatoriamente en una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST=\"Establece el primer elemento de una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM=\"Establece el elemento en la posición especificada en una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST=\"Establece el último elemento de una lista.\",Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM=\"Establece un elemento aleatorio en una lista.\",Blockly.Msg.LISTS_SORT_HELPURL=\"https://github.com/google/blockly/wiki/Lists#sorting-a-list\",Blockly.Msg.LISTS_SORT_ORDER_ASCENDING=\"ascendente\",Blockly.Msg.LISTS_SORT_ORDER_DESCENDING=\"descendente\",Blockly.Msg.LISTS_SORT_TITLE=\"orden %1 %2 %3\",Blockly.Msg.LISTS_SORT_TOOLTIP=\"Ordenar una copia de una lista.\",Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE=\"alfabético, ignorar mayúscula/minúscula\",Blockly.Msg.LISTS_SORT_TYPE_NUMERIC=\"numérico\",Blockly.Msg.LISTS_SORT_TYPE_TEXT=\"alfabético\",Blockly.Msg.LISTS_SPLIT_HELPURL=\"https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists\",Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT=\"hacer lista a partir de texto\",Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST=\"hacer texto a partir de lista\",Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN=\"Unir una lista de textos en un solo texto, separado por un delimitador.\",Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT=\"Dividir el texto en una lista de textos, separando en cada delimitador.\",Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER=\"con delimitador\",Blockly.Msg.LOGIC_BOOLEAN_FALSE=\"falso\",Blockly.Msg.LOGIC_BOOLEAN_HELPURL=\"https://github.com/google/blockly/wiki/Logic#values\",Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP=\"Devuelve verdadero o falso.\",Blockly.Msg.LOGIC_BOOLEAN_TRUE=\"verdadero\",Blockly.Msg.LOGIC_COMPARE_HELPURL=\"https://es.wikipedia.org/wiki/Desigualdad_matemática\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ=\"Devuelve verdadero si ambas entradas son iguales.\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT=\"Devuelve verdadero si la primera entrada es mayor que la segunda entrada.\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE=\"Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT=\"Devuelve verdadero si la primera entrada es menor que la segunda entrada.\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE=\"Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.\",Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ=\"Devuelve verdadero si ambas entradas son distintas.\",Blockly.Msg.LOGIC_NEGATE_HELPURL=\"https://github.com/google/blockly/wiki/Logic#not\",Blockly.Msg.LOGIC_NEGATE_TITLE=\"no %1\",Blockly.Msg.LOGIC_NEGATE_TOOLTIP=\"Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.\",Blockly.Msg.LOGIC_NULL=\"nulo\",Blockly.Msg.LOGIC_NULL_HELPURL=\"https://en.wikipedia.org/wiki/Nullable_type\",Blockly.Msg.LOGIC_NULL_TOOLTIP=\"Devuelve nulo.\",Blockly.Msg.LOGIC_OPERATION_AND=\"y\",Blockly.Msg.LOGIC_OPERATION_HELPURL=\"https://github.com/google/blockly/wiki/Logic#logical-operations\",Blockly.Msg.LOGIC_OPERATION_OR=\"o\",Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND=\"Devuelve verdadero si ambas entradas son verdaderas.\",Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR=\"Devuelve verdadero si al menos una de las entradas es verdadera.\",Blockly.Msg.LOGIC_TERNARY_CONDITION=\"prueba\",Blockly.Msg.LOGIC_TERNARY_HELPURL=\"https://en.wikipedia.org/wiki/%3F:\",Blockly.Msg.LOGIC_TERNARY_IF_FALSE=\"si es falso\",Blockly.Msg.LOGIC_TERNARY_IF_TRUE=\"si es verdadero\",Blockly.Msg.LOGIC_TERNARY_TOOLTIP='Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".',Blockly.Msg.MATH_ADDITION_SYMBOL=\"+\",Blockly.Msg.MATH_ARITHMETIC_HELPURL=\"https://es.wikipedia.org/wiki/Aritmética\",Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD=\"Devuelve la suma de ambos números.\",Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE=\"Devuelve el cociente de ambos números.\",Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS=\"Devuelve la diferencia de ambos números.\",Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY=\"Devuelve el producto de ambos números.\",Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER=\"Devuelve el primer número elevado a la potencia del segundo.\",Blockly.Msg.MATH_ATAN2_HELPURL=\"https://en.wikipedia.org/wiki/Atan2\",Blockly.Msg.MATH_ATAN2_TITLE=\"atan2 of X:%1 Y:%2\",Blockly.Msg.MATH_ATAN2_TOOLTIP=\"Return the arctangent of point (X, Y) in degrees from -180 to 180.\",Blockly.Msg.MATH_CHANGE_HELPURL=\"https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter\",Blockly.Msg.MATH_CHANGE_TITLE=\"añadir %2 a %1\",Blockly.Msg.MATH_CHANGE_TOOLTIP=\"Añadir un número a la variable «%1».\",Blockly.Msg.MATH_CONSTANT_HELPURL=\"https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas\",Blockly.Msg.MATH_CONSTANT_TOOLTIP=\"Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).\",Blockly.Msg.MATH_CONSTRAIN_HELPURL=\"https://en.wikipedia.org/wiki/Clamping_(graphics)\",Blockly.Msg.MATH_CONSTRAIN_TITLE=\"limitar %1 entre %2 y %3\",Blockly.Msg.MATH_CONSTRAIN_TOOLTIP=\"Limitar un número entre los límites especificados (inclusive).\",Blockly.Msg.MATH_DIVISION_SYMBOL=\"÷\",Blockly.Msg.MATH_IS_DIVISIBLE_BY=\"es divisible por\",Blockly.Msg.MATH_IS_EVEN=\"es par\",Blockly.Msg.MATH_IS_NEGATIVE=\"es negativo\",Blockly.Msg.MATH_IS_ODD=\"es impar\",Blockly.Msg.MATH_IS_POSITIVE=\"es positivo\",Blockly.Msg.MATH_IS_PRIME=\"es primo\",Blockly.Msg.MATH_IS_TOOLTIP=\"Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.\",Blockly.Msg.MATH_IS_WHOLE=\"es entero\",Blockly.Msg.MATH_MODULO_HELPURL=\"https://en.wikipedia.org/wiki/Modulo_operation\",Blockly.Msg.MATH_MODULO_TITLE=\"resto de %1 ÷ %2\",Blockly.Msg.MATH_MODULO_TOOLTIP=\"Devuelve el resto al dividir los dos números.\",Blockly.Msg.MATH_MULTIPLICATION_SYMBOL=\"×\",Blockly.Msg.MATH_NUMBER_HELPURL=\"https://es.wikipedia.org/wiki/Número\",Blockly.Msg.MATH_NUMBER_TOOLTIP=\"Un número.\",Blockly.Msg.MATH_ONLIST_HELPURL=\"\",Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE=\"promedio de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_MAX=\"máximo de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN=\"mediana de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_MIN=\"mínimo de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_MODE=\"modas de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM=\"elemento aleatorio de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV=\"desviación estándar de la lista\",Blockly.Msg.MATH_ONLIST_OPERATOR_SUM=\"suma de la lista\",Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE=\"Devuelve el promedio (media aritmética) de los valores numéricos en la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX=\"Devuelve el número más grande en la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN=\"Devuelve la mediana en la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN=\"Devuelve el número más pequeño en la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE=\"Devuelve una lista de los elementos más comunes en la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM=\"Devuelve un elemento aleatorio de la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV=\"Devuelve la desviación estándar de la lista.\",Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM=\"Devuelve la suma de todos los números en la lista.\",Blockly.Msg.MATH_POWER_SYMBOL=\"^\",Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL=\"https://es.wikipedia.org/wiki/Generador_de_números_aleatorios\",Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM=\"fracción aleatoria\",Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP=\"Devuelve una fracción aleatoria entre 0,0 (ambos inclusive) y 1.0 (exclusivo).\",Blockly.Msg.MATH_RANDOM_INT_HELPURL=\"https://es.wikipedia.org/wiki/Generador_de_números_aleatorios\",Blockly.Msg.MATH_RANDOM_INT_TITLE=\"entero aleatorio de %1 a %2\",Blockly.Msg.MATH_RANDOM_INT_TOOLTIP=\"Devuelve un entero aleatorio entre los dos límites especificados, inclusive.\",Blockly.Msg.MATH_ROUND_HELPURL=\"https://es.wikipedia.org/wiki/Redondeo\",Blockly.Msg.MATH_ROUND_OPERATOR_ROUND=\"redondear\",Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN=\"redondear a la baja\",Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP=\"redondear al alza\",Blockly.Msg.MATH_ROUND_TOOLTIP=\"Redondear un número al alza o a la baja.\",Blockly.Msg.MATH_SINGLE_HELPURL=\"https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada\",Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE=\"absoluto\",Blockly.Msg.MATH_SINGLE_OP_ROOT=\"raíz cuadrada\",Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS=\"Devuelve el valor absoluto de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP=\"Devuelve e a la potencia de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_LN=\"Devuelve el logaritmo natural de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10=\"Devuelve el logaritmo base 10 de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG=\"Devuelve la negación de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10=\"Devuelve 10 a la potencia de un número.\",Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT=\"Devuelve la raíz cuadrada de un número.\",Blockly.Msg.MATH_SUBTRACTION_SYMBOL=\"-\",Blockly.Msg.MATH_TRIG_ACOS=\"acos\",Blockly.Msg.MATH_TRIG_ASIN=\"asin\",Blockly.Msg.MATH_TRIG_ATAN=\"atan\",Blockly.Msg.MATH_TRIG_COS=\"cos\",Blockly.Msg.MATH_TRIG_HELPURL=\"https://es.wikipedia.org/wiki/Función_trigonométrica\",Blockly.Msg.MATH_TRIG_SIN=\"sin\",Blockly.Msg.MATH_TRIG_TAN=\"tan\",Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS=\"Devuelve el arcocoseno de un número.\",Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN=\"Devuelve el arcoseno de un número.\",Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN=\"Devuelve el arcotangente de un número.\",Blockly.Msg.MATH_TRIG_TOOLTIP_COS=\"Devuelve el coseno de un grado (no radián).\",Blockly.Msg.MATH_TRIG_TOOLTIP_SIN=\"Devuelve el seno de un grado (no radián).\",Blockly.Msg.MATH_TRIG_TOOLTIP_TAN=\"Devuelve la tangente de un grado (no radián).\",Blockly.Msg.NEW_COLOUR_VARIABLE=\"Crear una variable de color...\",Blockly.Msg.NEW_NUMBER_VARIABLE=\"Crear una variable numérica...\",Blockly.Msg.NEW_STRING_VARIABLE=\"Create una variable de texto...\",Blockly.Msg.NEW_VARIABLE=\"Crear variable…\",Blockly.Msg.NEW_VARIABLE_TITLE=\"Nombre de variable nueva:\",Blockly.Msg.NEW_VARIABLE_TYPE_TITLE=\"New variable type:\",Blockly.Msg.ORDINAL_NUMBER_SUFFIX=\"\",Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS=\"permitir declaraciones\",Blockly.Msg.PROCEDURES_BEFORE_PARAMS=\"con:\",Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL=\"https://es.wikipedia.org/wiki/Subrutina\",Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP=\"Ejecuta la función definida por el usuario '%1'.\",Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL=\"https://es.wikipedia.org/wiki/Subrutina\",Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP=\"Ejecuta la función definida por el usuario '%1' y usa su salida.\",Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS=\"con:\",Blockly.Msg.PROCEDURES_CREATE_DO=\"Crear '%1'\",Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT=\"Describe esta función...\",Blockly.Msg.PROCEDURES_DEFNORETURN_DO=\"\",Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL=\"https://en.wikipedia.org/wiki/Subroutine\",Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE=\"hacer algo\",Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE=\"para\",Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP=\"Crea una función sin salida.\",Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL=\"https://en.wikipedia.org/wiki/Subroutine\",Blockly.Msg.PROCEDURES_DEFRETURN_RETURN=\"devuelve\",Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP=\"Crea una función con una salida.\",Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING=\"Advertencia: Esta función tiene parámetros duplicados.\",Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF=\"Destacar definición de la función\",Blockly.Msg.PROCEDURES_IFRETURN_HELPURL=\"http://c2.com/cgi/wiki?GuardClause\",Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP=\"Si un valor es verdadero, entonces devuelve un segundo valor.\",Blockly.Msg.PROCEDURES_IFRETURN_WARNING=\"Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.\",Blockly.Msg.PROCEDURES_MUTATORARG_TITLE=\"nombre de entrada:\",Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP=\"Añadir una entrada a la función.\",Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE=\"entradas\",Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP=\"Añadir, eliminar o reordenar entradas para esta función.\",Blockly.Msg.REDO=\"Rehacer\",Blockly.Msg.REMOVE_COMMENT=\"Eliminar comentario\",Blockly.Msg.RENAME_VARIABLE=\"Renombrar la variable…\",Blockly.Msg.RENAME_VARIABLE_TITLE=\"Renombrar todas las variables «%1» a:\",Blockly.Msg.TEXT_APPEND_HELPURL=\"https://github.com/google/blockly/wiki/Text#text-modification\",Blockly.Msg.TEXT_APPEND_TITLE=\"a %1 añade el texto %2\",Blockly.Msg.TEXT_APPEND_TOOLTIP=\"Añadir texto a la variable '%1'.\",Blockly.Msg.TEXT_CHANGECASE_HELPURL=\"https://github.com/google/blockly/wiki/Text#adjusting-text-case\",Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE=\"a minúsculas\",Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE=\"a Mayúsculas Cada Palabra\",Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE=\"a MAYÚSCULAS\",Blockly.Msg.TEXT_CHANGECASE_TOOLTIP=\"Devuelve una copia del texto en un tamaño diferente.\",Blockly.Msg.TEXT_CHARAT_FIRST=\"obtener la primera letra\",Blockly.Msg.TEXT_CHARAT_FROM_END=\"obtener la letra # del final\",Blockly.Msg.TEXT_CHARAT_FROM_START=\"obtener la letra #\",Blockly.Msg.TEXT_CHARAT_HELPURL=\"https://github.com/google/blockly/wiki/Text#extracting-text\",Blockly.Msg.TEXT_CHARAT_LAST=\"obtener la última letra\",Blockly.Msg.TEXT_CHARAT_RANDOM=\"obtener letra aleatoria\",Blockly.Msg.TEXT_CHARAT_TAIL=\"\",Blockly.Msg.TEXT_CHARAT_TITLE=\"en el texto %1 %2\",Blockly.Msg.TEXT_CHARAT_TOOLTIP=\"Devuelve la letra en la posición especificada.\",Blockly.Msg.TEXT_COUNT_HELPURL=\"https://github.com/google/blockly/wiki/Text#counting-substrings\",Blockly.Msg.TEXT_COUNT_MESSAGE0=\"contar %1 en %2\",Blockly.Msg.TEXT_COUNT_TOOLTIP=\"Cuantas veces aparece un texto dentro de otro texto.\",Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP=\"Agregar un elemento al texto.\",Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN=\"unir\",Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP=\"Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.\",Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END=\"hasta la letra # del final\",Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START=\"hasta la letra #\",Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST=\"hasta la última letra\",Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL=\"https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text\",Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT=\"en el texto\",Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST=\"obtener subcadena desde la primera letra\",Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END=\"obtener subcadena desde la letra # del final\",Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START=\"obtener subcadena desde la letra #\",Blockly.Msg.TEXT_GET_SUBSTRING_TAIL=\"\",Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP=\"Devuelve una porción determinada del texto.\",Blockly.Msg.TEXT_INDEXOF_HELPURL=\"https://github.com/google/blockly/wiki/Text#finding-text\",Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST=\"encontrar la primera aparición del texto\",Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST=\"encontrar la última aparición del texto\",Blockly.Msg.TEXT_INDEXOF_TITLE=\"en el texto %1 %2 %3\",Blockly.Msg.TEXT_INDEXOF_TOOLTIP=\"Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve %1 si el texto no se encuentra.\",Blockly.Msg.TEXT_ISEMPTY_HELPURL=\"https://github.com/google/blockly/wiki/Text#checking-for-empty-text\",Blockly.Msg.TEXT_ISEMPTY_TITLE=\"%1 está vacío\",Blockly.Msg.TEXT_ISEMPTY_TOOLTIP=\"Devuelve verdadero si el texto proporcionado está vacío.\",Blockly.Msg.TEXT_JOIN_HELPURL=\"https://github.com/google/blockly/wiki/Text#text-creation\",Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH=\"crear texto con\",Blockly.Msg.TEXT_JOIN_TOOLTIP=\"Crear un fragmento de texto al unir cualquier número de elementos.\",Blockly.Msg.TEXT_LENGTH_HELPURL=\"https://github.com/google/blockly/wiki/Text#text-modification\",Blockly.Msg.TEXT_LENGTH_TITLE=\"longitud de %1\",Blockly.Msg.TEXT_LENGTH_TOOLTIP=\"Devuelve el número de letras (espacios incluidos) del texto proporcionado.\",Blockly.Msg.TEXT_PRINT_HELPURL=\"https://github.com/google/blockly/wiki/Text#printing-text\",Blockly.Msg.TEXT_PRINT_TITLE=\"imprimir %1\",Blockly.Msg.TEXT_PRINT_TOOLTIP=\"Imprimir el texto, número u otro valor especificado.\",Blockly.Msg.TEXT_PROMPT_HELPURL=\"https://github.com/google/blockly/wiki/Text#getting-input-from-the-user\",Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER=\"Solicitar al usuario un número.\",Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT=\"Solicitar al usuario un texto.\",Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER=\"solicitar número con el mensaje\",Blockly.Msg.TEXT_PROMPT_TYPE_TEXT=\"solicitar texto con el mensaje\",Blockly.Msg.TEXT_REPLACE_HELPURL=\"https://github.com/google/blockly/wiki/Text#replacing-substrings\",Blockly.Msg.TEXT_REPLACE_MESSAGE0=\"reemplazar %1 con %2 en %3\",Blockly.Msg.TEXT_REPLACE_TOOLTIP=\"Reemplazar todas las veces que un texto dentro de otro texto.\",Blockly.Msg.TEXT_REVERSE_HELPURL=\"https://github.com/google/blockly/wiki/Text#reversing-text\",Blockly.Msg.TEXT_REVERSE_MESSAGE0=\"invertir %1\",Blockly.Msg.TEXT_REVERSE_TOOLTIP=\"Invierte el orden de los caracteres en el texto.\",Blockly.Msg.TEXT_TEXT_HELPURL=\"https://es.wikipedia.org/wiki/Cadena_de_caracteres\",Blockly.Msg.TEXT_TEXT_TOOLTIP=\"Una letra, palabra o línea de texto.\",Blockly.Msg.TEXT_TRIM_HELPURL=\"https://github.com/google/blockly/wiki/Text#trimming-removing-spaces\",Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH=\"quitar espacios de ambos lados de\",Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT=\"quitar espacios iniciales de\",Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT=\"quitar espacios finales de\",Blockly.Msg.TEXT_TRIM_TOOLTIP=\"Devuelve una copia del texto sin los espacios de uno o ambos extremos.\",Blockly.Msg.TODAY=\"Hoy\",Blockly.Msg.UNDO=\"Deshacer\",Blockly.Msg.VARIABLES_DEFAULT_NAME=\"elemento\",Blockly.Msg.VARIABLES_GET_CREATE_SET=\"Crear 'establecer %1'\",Blockly.Msg.VARIABLES_GET_HELPURL=\"https://github.com/google/blockly/wiki/Variables#get\",Blockly.Msg.VARIABLES_GET_TOOLTIP=\"Devuelve el valor de esta variable.\",Blockly.Msg.VARIABLES_SET=\"establecer %1 a %2\",Blockly.Msg.VARIABLES_SET_CREATE_GET=\"Crear 'obtener %1'\",Blockly.Msg.VARIABLES_SET_HELPURL=\"https://github.com/google/blockly/wiki/Variables#set\",Blockly.Msg.VARIABLES_SET_TOOLTIP=\"Establece esta variable para que sea igual a la entrada.\",Blockly.Msg.VARIABLE_ALREADY_EXISTS='Ya existe una variable llamada \"%1\".',Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE=\"Ya existe una variable nombrada '%1' para otra variable del tipo: '%2'.\",Blockly.Msg.WORKSPACE_COMMENT_DEFAULT_TEXT=\"Di algo…\",Blockly.Msg.CONTROLS_FOREACH_INPUT_DO=Blockly.Msg.CONTROLS_REPEAT_INPUT_DO,Blockly.Msg.CONTROLS_FOR_INPUT_DO=Blockly.Msg.CONTROLS_REPEAT_INPUT_DO,Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF=Blockly.Msg.CONTROLS_IF_MSG_ELSEIF,Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE=Blockly.Msg.CONTROLS_IF_MSG_ELSE,Blockly.Msg.CONTROLS_IF_IF_TITLE_IF=Blockly.Msg.CONTROLS_IF_MSG_IF,Blockly.Msg.CONTROLS_IF_MSG_THEN=Blockly.Msg.CONTROLS_REPEAT_INPUT_DO,Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO=Blockly.Msg.CONTROLS_REPEAT_INPUT_DO,Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE=Blockly.Msg.VARIABLES_DEFAULT_NAME,Blockly.Msg.LISTS_GET_INDEX_HELPURL=Blockly.Msg.LISTS_INDEX_OF_HELPURL,Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST=Blockly.Msg.LISTS_INLIST,Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST=Blockly.Msg.LISTS_INLIST,Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST=Blockly.Msg.LISTS_INLIST,Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST=Blockly.Msg.LISTS_INLIST,Blockly.Msg.MATH_CHANGE_TITLE_ITEM=Blockly.Msg.VARIABLES_DEFAULT_NAME,Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT=Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT,Blockly.Msg.PROCEDURES_DEFRETURN_DO=Blockly.Msg.PROCEDURES_DEFNORETURN_DO,Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE,Blockly.Msg.PROCEDURES_DEFRETURN_TITLE=Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE,Blockly.Msg.TEXT_APPEND_VARIABLE=Blockly.Msg.VARIABLES_DEFAULT_NAME,Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM=Blockly.Msg.VARIABLES_DEFAULT_NAME,Blockly.Msg.MATH_HUE=\"230\",Blockly.Msg.LOOPS_HUE=\"120\",Blockly.Msg.LISTS_HUE=\"260\",Blockly.Msg.LOGIC_HUE=\"210\",Blockly.Msg.VARIABLES_HUE=\"330\",Blockly.Msg.TEXTS_HUE=\"160\",Blockly.Msg.PROCEDURES_HUE=\"290\",Blockly.Msg.COLOUR_HUE=\"20\",Blockly.Msg.VARIABLES_DYNAMIC_HUE=\"310\"},function(e,l){},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Msg.es\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.TITLE2=\" > editor de programación visual basado en web para arduino\",Blockly.Msg.CAT_ARDUINO_BASE=\"Entrada / Salida\",Blockly.Msg.CAT_SERVO=\"Servo\",Blockly.Msg.CAT_GROVE=\"Grove\",Blockly.Msg.CAT_GROVE_ANALOG=\"Grove Analog\",Blockly.Msg.CAT_GROVE_LCD=\"Grove LCD\",Blockly.Msg.CAT_GROVE_MOTOR=\"Grove Motor\",Blockly.Msg.FIELDDROPDOWN=[[\"ALTO\",\"HIGH\"],[\"BAJO\",\"LOW\"]],Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_HELPURL=\"http://arduino.cc/en/Reference/DigitalWrite\",Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_INPUT=\"Poner el LED integrado en estado \",Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_TOOLTIP=\"Apague o encienda el LED en la placa Arduino\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT1=\"Colocar el PIN Digital\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT2=\"en estado lógico\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_TOOLTIP=\"Escribir estado númerico 0 o 1 a una salida especifica\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_HELPURL=\"http://arduino.cc/en/Reference/DigitalWrite\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_INPUT=\"el estado lógico del PIN#\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_TOOLTIP=\"Leer el estado lógico 0 o 1 de un PIN digital\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_HELPURL=\"http://arduino.cc/en/Reference/DigitalRead\",Blockly.Msg.ARDUINO_INOUT_ONOFF_HELPURL=\"http://arduino.cc/en/Reference/Constants\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT1=\"Escribir en el PIN Analógico\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT2=\"el valor de\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_TOOLTIP=\"Enviar un valor entre 0 y 255 a un PIN analógico\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_INPUT=\"valor leido en el PIN Analógico\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_TOOLTIP=\"Devuelve un valor entre 0 y 1023\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_HELPURL=\"http://arduino.cc/en/Reference/AnalogRead\",Blockly.Msg.ARDUINO_BASE_DELAY_DELAY_TIME=\"Esperar (en milisegundos)\",Blockly.Msg.ARDUINO_BASE_DELAY_TOOLTIP=\"Especifique el tiempo de espera en milisegundos\",Blockly.Msg.ARDUINO_BASE_DELAY_HELPURL=\"http://arduino.cc/en/Reference/delay\",Blockly.Msg.ARDUINO_BASE_ANGLE=\"angulo: \",Blockly.Msg.ARDUINO_BASE_ANGLE_TOOLTIP=\"angulo entre 0~180°\",Blockly.Msg.ARDUINO_BASE_ANGLE_HELPURL=\"\",Blockly.Msg.ARDUINO_TONE_INPUT1=\"Emitir sonido en el PIN\",Blockly.Msg.ARDUINO_TONE_INPUT2=\"con frecuencia(Hz) de\",Blockly.Msg.ARDUINO_TONE_TOOLTIP=\"Emite sonido en el PIN especificado\",Blockly.Msg.ARDUINO_TONE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_NOTONE_INPUT=\"Detener sonido en el PIN\",Blockly.Msg.ARDUINO_NOTONE_TOOLTIP=\"Quita el sonido del PIN especificado\",Blockly.Msg.ARDUINO_NOTONE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_SERIAL_PRINT_CONTENT=\"Enviar datos al puerto serial:\",Blockly.Msg.ARDUINO_SERIAL_PRINT_TOOLTIP=\"Envía datos a través del puerto serie para la vigilancia por parte del monitor en ASCII\",Blockly.Msg.ARDUINO_SERIAL_PRINT_HELPURL=\"http://www.arduino.cc/en/Serial/Print\"},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Msg.colors\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ARDUINO_BASE_HUE=\"#007481\",Blockly.Msg.GROVE_HUE=\"#018770\",Blockly.Msg.SERVO_HUE=\"#343434\"},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.arduino_base\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.arduino_base_inout_buildin_led={init:function(){this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_HELPURL),this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_INPUT).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_TOOLTIP),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_write={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT2).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_highlow={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"BOOL\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ONOFF_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_write={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownPWM),\"PIN\"),this.appendValueInput(\"PWM\",\"Number\").appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_delay={init:function(){this.appendValueInput(\"DELAY_TIME\",\"Number\").appendField(Blockly.Msg.ARDUINO_BASE_DELAY_DELAY_TIME).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_BASE_DELAY_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_DELAY_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_angle={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_BASE_ANGLE).appendField(new Blockly.FieldAngle(90),\"ANGLE\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_BASE_ANGLE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_ANGLE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_date={init:function(){this.appendDummyInput().appendField(\"date:\").appendField(\"DATE\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Date entrie as yyyy-mm-dd\"),this.setHelpUrl(\"\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_map={init:function(){this.appendValueInput(\"NUM\",\"Number\").appendField(\"Mapear \").setCheck(\"Number\"),this.appendValueInput(\"DMAX\",\"Number\").appendField(\"valor a [0-\").setCheck(\"Number\"),this.appendDummyInput().appendField(\"]\"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(\"Re-maps a number from [0-1024] to another.\"),this.setHelpUrl(\"https://www.arduino.cc/reference/en/language/functions/math/map/\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_tone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_TONE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"NUM\",\"Number\").appendField(Blockly.Msg.ARDUINO_TONE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_TONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_TONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_notone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_NOTONE_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_NOTONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_NOTONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_serial_print={init:function(){this.appendValueInput(\"CONTENT\",\"String\").appendField(Blockly.Msg.ARDUINO_SERIAL_PRINT_CONTENT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_SERIAL_PRINT_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_SERIAL_PRINT_HELPURL),this.setStyle(\"arduino_blocks\")}}},function(e,l){\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ngoog.provide(\"Blockly.Constants.grove\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.grove_led={init:function(){this.appendDummyInput().appendField(\"LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Red_LED_s.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"green LED\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Red_LED/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_button={init:function(){this.appendDummyInput().appendField(\"Button\").appendField(new Blockly.FieldImage(\"./blocks/grove/Button.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Basic digital input\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Button/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rotary_angle={init:function(){this.appendDummyInput().appendField(\"Rotary Angle\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove-Rotary_Angle_Sensor-P-.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Analog output between 0 and Vcc\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Rotary_Angle_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_tilt_switch={init:function(){this.appendDummyInput().appendField(\"Tilt Switch\").appendField(new Blockly.FieldImage(\"./blocks/grove/Tilt1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"When the switch is level it is open, and when tilted, the switch closes.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Tilt_Switch/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_piezo_buzzer={init:function(){this.appendDummyInput().appendField(\"Piezo Buzzer\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_Buzzer.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Emit a tone when the output is high\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Buzzer/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_relay={init:function(){this.appendDummyInput().appendField(\"Relay\").appendField(new Blockly.FieldImage(\"./blocks/grove/Twig-Relay.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Relay/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_temperature_sensor={init:function(){this.appendDummyInput().appendField(\"Temperature Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Temperature1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return number of ambient temperature in ℃\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Temperature_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_print={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"TEXT1\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line1\"),this.appendValueInput(\"TEXT2\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line2\"),this.appendValueInput(\"DELAY_TIME\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Delay\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"print text on an 16 character by 2 line LCD.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_power={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Power\").appendField(new Blockly.FieldDropdown([[\"ON\",\"ON\"],[\"OFF\",\"OFF\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_effect={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Effect\").appendField(new Blockly.FieldDropdown([[\"Scroll Left\",\"LEFT\"],[\"Scroll Right\",\"RIGHT\"],[\"Scroll Auto\",\"AUTO\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_sound_sensor={init:function(){this.appendDummyInput().appendField(\"Sound Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/sound_sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Detect the sound strength of the environment\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Sound_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_pir_motion_sensor={init:function(){this.appendDummyInput().appendField(\"PIR Motion Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_-_PIR_Motion_Sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"When anyone moves in it's detecting range, the sensor outputs HIGH.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-PIR_Motion_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_line_finder={init:function(){this.appendDummyInput().appendField(\"Line Finder\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grovelinefinder1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Output digital signal so the robot can reliably follow a black line on a white background\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Line_Finder/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_ultrasonic_ranger={init:function(){this.appendDummyInput().appendField(\"Ultrasonic Ranger\").appendField(new Blockly.FieldImage(\"./blocks/grove/Ultrasonic.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"unit\").appendField(new Blockly.FieldDropdown([[\"cm\",\"cm\"],[\"inch\",\"inch\"]]),\"UNIT\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Non-contact distance measurement module\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_motor_shield={init:function(){this.appendDummyInput().appendField(\"Motor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Smotoshield2.jpg\",64,64)).appendField(new Blockly.FieldDropdown([[\"Stop\",\"stop\"],[\"Forward\",\"forward\"],[\"Right\",\"right\"],[\"Left\",\"left\"],[\"Backward\",\"backward\"]]),\"DIRECTION\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Drive two brushed DC motors\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Motor_Shield/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_thumb_joystick={init:function(){this.appendDummyInput().appendField(\"Thumb Joystick\").appendField(new Blockly.FieldImage(\"./blocks/grove/Bgjoy1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\").appendField(\"axis\").appendField(new Blockly.FieldDropdown([[\"x\",\"x\"],[\"y\",\"y\"]]),\"AXIS\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"output two analog values(200~800) representing two directions\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Thumb_Joystick/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led={init:function(){this.appendDummyInput().appendField(\"Chainable RGB LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Chanbalelednb1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\"),this.setMutator(new Blockly.Mutator([\"grove_rgb_led_item\"])),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"256 color LED, currently Chainable feature is not support\"),this.itemCount_=1,this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Chainable_RGB_LED/\"),this.setStyle(\"grove_blocks\")},mutationToDom:function(){var e=document.createElement(\"mutation\");e.setAttribute(\"items\",this.itemCount_);for(var l=0;l<this.itemCount_;l++){var o=this.getFieldValue(\"RGB0\");e.setAttribute(\"RGB\"+l,o)}return e},domToMutation:function(e){for(var l=0;l<this.itemCount_;l++)this.removeInput(\"COLOR\"+l);this.itemCount_=window.parseInt(e.getAttribute(\"items\"),10);for(l=0;l<this.itemCount_;l++){var o=window.parseInt(e.getAttribute(\"RGB\"+l),\"#00ff00\");this.appendDummyInput(\"COLOR\"+l).setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(l+1)).appendField(new Blockly.FieldColour(o),\"RGB\"+l)}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")},decompose:function(e){var l=e.newBlock(\"grove_rgb_led_container\");l.initSvg();for(var o=l.getInput(\"STACK\").connection,t=0;t<this.itemCount_;t++){var i=e.newBlock(\"grove_rgb_led_item\");i.initSvg(),o.connect(i.previousConnection),o=i.nextConnection}return l},compose:function(e){if(0==this.itemCount_)this.removeInput(\"COLOR0\");else for(var l=this.itemCount_-1;l>=0;l--)this.removeInput(\"COLOR\"+l);this.itemCount_=0;for(var o=e.getInputTargetBlock(\"STACK\");o;){var t=this.getFieldValue(\"RGB\"+this.itemCount_);null==t&&(t=\"00ff00\");var i=this.appendDummyInput(\"COLOR\"+this.itemCount_);i.setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(this.itemCount_+1)).appendField(new Blockly.FieldColour(t),\"RGB\"+this.itemCount_),o.valueConnection_&&i.connection.connect(o.valueConnection_),this.itemCount_++,o=o.nextConnection&&o.nextConnection.targetBlock()}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")}},Blockly.Blocks.grove_rgb_led_container={init:function(){this.appendDummyInput().appendField(\"Container\"),this.appendStatementInput(\"STACK\"),this.setTooltip(\"Add, remove items to reconfigure this chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led_item={init:function(){this.appendDummyInput().appendField(\"Item\"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(\"Add an item to the chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_bluetooth_slave={init:function(){this.appendDummyInput().appendField(\"Bluetooth Slave\").appendField(new Blockly.FieldImage(\"http://www.seeedstudio.com/wiki/File:Twigbt00.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Name\").appendField(new Blockly.FieldTextInput(\"blocklyduino\"),\"NAME\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Pincode\").appendField(new Blockly.FieldTextInput(\"0000\"),\"PINCODE\"),this.appendStatementInput(\"RCV\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Receive\"),this.appendStatementInput(\"SNT\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Send\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Bluetooth V2.0+EDR slave. Support single slave per board\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_Bluetooth/\"),this.setStyle(\"grove_blocks\")}}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.servo\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Constants.servo.HUE=\"#334E68\",Blockly.Blocks.servo_move={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_SERVO_DRIVE).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"DEGREE\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.ROBOTOIS_SERVO_LABEL),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"move between 0~180 degree\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setColour(Blockly.Constants.servo.HUE),this.setTooltip(Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP)}},Blockly.Blocks.servo_read_degrees={init:function(){this.appendDummyInput().appendField(\"Servo\").appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Read Degrees\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return that degree with the last servo move.\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setStyle(\"servo_blocks\")}}},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Msg.robotois\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ROBOTOIS_RUN_SETUP=\"Inicializar:\",Blockly.Msg.ROBOTOIS_RUN_LOOP=\"Ejecutar:\",Blockly.Msg.ROBOTOIS_RUN_TIP=\"Define la inicialización de Arduino y el programa a ejecutar.\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT=\"Motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP=\"Velocidad del motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT=\"Motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP=\"Velocidad del motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE=\"Mover motores\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE=\"Mover servo\",Blockly.Msg.ROBOTOIS_SERVO_LABEL=\"Grados (0~180)\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_ULTRASONIC=\"Leer el sensor de distancia usando los pines #\",Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP=\"Usar el sensor de distancia\",Blockly.Msg.ROBOTOIS_LINE_SENSOR=\"Leer el sensor de linea usando el pin #\",Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP=\"Leer el sensor de linea\"},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.require(\"Blockly.Blocks\"),Blockly.Blocks.arduino_program={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_RUN_SETUP),this.appendStatementInput(\"SETUP_FUNC\"),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_RUN_LOOP),this.appendStatementInput(\"LOOP_FUNC\"),this.setInputsInline(!1),this.setColour(\"#3EBD93\"),this.setTooltip(Blockly.Msg.ROBOTOIS_RUN_TIP),this.setHelpUrl(\"https://arduino.cc/en/Reference/Loop\"),this.contextMenu=!1},getArduinoLoopsInstance:function(){return!0}}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.lineSensor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.lineSensor.HUE=\"#8888FC\",Blockly.Blocks.lineSensor_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/lineSensor\"),this.setColour(Blockly.Blocks.lineSensor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_LINE_SENSOR),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"INPUT_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"INPUT_PIN\",\"digitalPins\")}}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.ultrasonic\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.ultrasonic.HUE=\"#8888FC\",Blockly.Blocks.ultrasonic_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/ultrasonic\"),this.setColour(Blockly.Blocks.ultrasonic.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_ULTRASONIC),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"TIGGER_PIN\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"ECHO_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"TIGGER_PIN\",\"digitalPins\"),Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"ECHO_PIN\",\"digitalPins\")}}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.motor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.motor.HUE=\"#334E68\",Blockly.Blocks.motor_right={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/motor\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP)}},Blockly.Blocks.motor_left={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_LEFT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP)}},Blockly.Blocks.motor_drive={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_LEFT\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_RIGHT\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP)}}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino\"),goog.require(\"Blockly.Generator\"),Blockly.Arduino=new Blockly.Generator(\"Arduino\"),Blockly.Arduino.addReservedWords(\"setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts\"),Blockly.Arduino.ORDER_ATOMIC=0,Blockly.Arduino.ORDER_UNARY_POSTFIX=1,Blockly.Arduino.ORDER_UNARY_PREFIX=2,Blockly.Arduino.ORDER_MULTIPLICATIVE=3,Blockly.Arduino.ORDER_ADDITIVE=4,Blockly.Arduino.ORDER_SHIFT=5,Blockly.Arduino.ORDER_RELATIONAL=6,Blockly.Arduino.ORDER_EQUALITY=7,Blockly.Arduino.ORDER_BITWISE_AND=8,Blockly.Arduino.ORDER_BITWISE_XOR=9,Blockly.Arduino.ORDER_BITWISE_OR=10,Blockly.Arduino.ORDER_LOGICAL_AND=11,Blockly.Arduino.ORDER_LOGICAL_OR=12,Blockly.Arduino.ORDER_CONDITIONAL=13,Blockly.Arduino.ORDER_ASSIGNMENT=14,Blockly.Arduino.ORDER_NONE=99,Blockly.Arduino.ORDER_ADDITION=Blockly.Arduino.ORDER_SUBTRACTION=Blockly.Arduino.ORDER_ADDITIVE,Blockly.Arduino.ORDER_MULTIPLICATION=Blockly.Arduino.ORDER_DIVISION=Blockly.Arduino.ORDER_MULTIPLICATIVE,Blockly.Arduino.ORDER_COMMA=Blockly.Arduino.ORDER_NONE,Blockly.Arduino.ORDER_FUNCTION_CALL=Blockly.Arduino.ORDER_UNARY_POSTFIX,Blockly.Arduino.ORDER_OVERRIDES=[[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_LOGICAL_NOT,Blockly.Arduino.ORDER_LOGICAL_NOT],[Blockly.Arduino.ORDER_MULTIPLICATION,Blockly.Arduino.ORDER_MULTIPLICATION],[Blockly.Arduino.ORDER_ADDITION,Blockly.Arduino.ORDER_ADDITION],[Blockly.Arduino.ORDER_LOGICAL_AND,Blockly.Arduino.ORDER_LOGICAL_AND],[Blockly.Arduino.ORDER_LOGICAL_OR,Blockly.Arduino.ORDER_LOGICAL_OR]],Blockly.Arduino.init=function(e){Blockly.Arduino.definitions_=Object.create(null),Blockly.Arduino.setups_=Object.create(null),Blockly.Arduino.functionNames_=Object.create(null),Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_),Blockly.Arduino.variableDB_.setVariableMap(e.getVariableMap());for(var l=[],o=Blockly.Variables.allDeveloperVariables(e),t=0;t<o.length;t++)l.push(\"int \"+Blockly.Arduino.variableDB_.getName(o[t],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+\";\\n\");var i=Blockly.Variables.allUsedVarModels(e);for(t=0;t<i.length;t++)l.push(Blockly.Arduino.variableDB_.getName(i[t].getId(),Blockly.Variables.NAME_TYPE));Blockly.Arduino.definitions_.variables=l.join(\"\\n\"),l.length&&(Blockly.Arduino.definitions_.variables=\"int \"+l.join(\", \")+\";\\n\")},Blockly.Arduino.finish=function(e){e=\"void loop() \\n{\\n\"+(e=(e=\"  \"+e.replace(/\\n/g,\"\\n  \")).replace(/\\n\\s+$/,\"\\n\"))+\"\\n}\";var l=[],o=[];for(var t in Blockly.Arduino.definitions_){var i=Blockly.Arduino.definitions_[t];i.match(/^#include/)?l.push(i):o.push(i)}var n=[];for(var t in Blockly.Arduino.setups_)n.push(Blockly.Arduino.setups_[t]);return delete Blockly.Arduino.definitions_,delete Blockly.Arduino.functionNames_,Blockly.Arduino.variableDB_.reset(),(l.join(\"\\n\")+\"\\n\\n\"+o.join(\"\\n\")+\"\\nvoid setup() \\n{\\n  \"+n.join(\"\\n  \")+\"\\n}\\n\\n\").replace(/\\n\\n+/g,\"\\n\\n\").replace(/\\n*$/,\"\\n\\n\\n\")+e},Blockly.Arduino.scrubNakedValue=function(e){return e+\";\\n\"},Blockly.Arduino.quote_=function(e){return'\"'+(e=e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\").replace(/\\$/g,\"\\\\$\").replace(/'/g,\"\\\\'\"))+'\"'},Blockly.Arduino.scrub_=function(e,l){if(null===l)return\"\";var o=\"\";if(!e.outputConnection||!e.outputConnection.targetConnection){(i=e.getCommentText())&&(o+=Blockly.Arduino.prefixLines(i,\"// \")+\"\\n\");for(var t=0;t<e.inputList.length;t++)if(e.inputList[t].type==Blockly.INPUT_VALUE){var i,n=e.inputList[t].connection.targetBlock();if(n)(i=Blockly.Arduino.allNestedComments(n))&&(o+=Blockly.Arduino.prefixLines(i,\"// \"))}}var a=e.nextConnection&&e.nextConnection.targetBlock();return o+l+Blockly.Arduino.blockToCode(a)}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.colour\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.colour_picker=function(e){return[\"'\"+e.getFieldValue(\"COLOUR\")+\"'\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.colour_random=function(e){return[Blockly.Arduino.provideFunction_(\"colourRandom\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"() {\",\"  var num = Math.floor(Math.random() * Math.pow(2, 24));\",\"  return '#' + ('00000' + num.toString(16)).substr(-6);\",\"}\"])+\"()\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_rgb=function(e){var l=Blockly.Arduino.valueToCode(e,\"RED\",Blockly.Arduino.ORDER_COMMA)||0,o=Blockly.Arduino.valueToCode(e,\"GREEN\",Blockly.Arduino.ORDER_COMMA)||0,t=Blockly.Arduino.valueToCode(e,\"BLUE\",Blockly.Arduino.ORDER_COMMA)||0;return[Blockly.Arduino.provideFunction_(\"colourRgb\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b) {\",\"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\",\"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\",\"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\",\"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\",\"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\",\"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+l+\", \"+o+\", \"+t+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_blend=function(e){var l=Blockly.Arduino.valueToCode(e,\"COLOUR1\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",o=Blockly.Arduino.valueToCode(e,\"COLOUR2\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",t=Blockly.Arduino.valueToCode(e,\"RATIO\",Blockly.Arduino.ORDER_COMMA)||.5;return[Blockly.Arduino.provideFunction_(\"colourBlend\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(c1, c2, ratio) {\",\"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\",\"  var r1 = parseInt(c1.substring(1, 3), 16);\",\"  var g1 = parseInt(c1.substring(3, 5), 16);\",\"  var b1 = parseInt(c1.substring(5, 7), 16);\",\"  var r2 = parseInt(c2.substring(1, 3), 16);\",\"  var g2 = parseInt(c2.substring(3, 5), 16);\",\"  var b2 = parseInt(c2.substring(5, 7), 16);\",\"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\",\"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\",\"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\",\"  r = ('0' + (r || 0).toString(16)).slice(-2);\",\"  g = ('0' + (g || 0).toString(16)).slice(-2);\",\"  b = ('0' + (b || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+l+\", \"+o+\", \"+t+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.lists\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lists_create_empty=function(e){return[\"[]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_create_with=function(e){for(var l=new Array(e.itemCount_),o=0;o<e.itemCount_;o++)l[o]=Blockly.Arduino.valueToCode(e,\"ADD\"+o,Blockly.Arduino.ORDER_COMMA)||\"null\";return[\"[\"+l.join(\", \")+\"]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_repeat=function(e){return[Blockly.Arduino.provideFunction_(\"listsRepeat\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(value, n) {\",\"  var array = [];\",\"  for (var i = 0; i < n; i++) {\",\"    array[i] = value;\",\"  }\",\"  return array;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"ITEM\",Blockly.Arduino.ORDER_COMMA)||\"null\")+\", \"+(Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_length=function(e){return[(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.lists_isEmpty=function(e){return[\"!\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.lists_indexOf=function(e){var l=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",o=Blockly.Arduino.valueToCode(e,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",t=(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".\"+l+\"(\"+o+\")\";return e.workspace.options.oneBasedIndex?[t+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[t,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_getIndex=function(e){var l=e.getFieldValue(\"MODE\")||\"GET\",o=e.getFieldValue(\"WHERE\")||\"FROM_START\",t=\"RANDOM\"==o?Blockly.Arduino.ORDER_COMMA:Blockly.Arduino.ORDER_MEMBER,i=Blockly.Arduino.valueToCode(e,\"VALUE\",t)||\"[]\";switch(o){case\"FIRST\":if(\"GET\"==l)return[a=i+\"[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[a=i+\".shift()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==l)return i+\".shift();\\n\";break;case\"LAST\":if(\"GET\"==l)return[a=i+\".slice(-1)[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[a=i+\".pop()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==l)return i+\".pop();\\n\";break;case\"FROM_START\":var n=Blockly.Arduino.getAdjusted(e,\"AT\");if(\"GET\"==l)return[a=i+\"[\"+n+\"]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==l)return[a=i+\".splice(\"+n+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return i+\".splice(\"+n+\", 1);\\n\";break;case\"FROM_END\":var a;n=Blockly.Arduino.getAdjusted(e,\"AT\",1,!0);if(\"GET\"==l)return[a=i+\".slice(\"+n+\")[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"GET_REMOVE\"==l)return[a=i+\".splice(\"+n+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return i+\".splice(\"+n+\", 1);\";break;case\"RANDOM\":if(a=Blockly.Arduino.provideFunction_(\"listsGetRandomItem\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list, remove) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  if (remove) {\",\"    return list.splice(x, 1)[0];\",\"  } else {\",\"    return list[x];\",\"  }\",\"}\"])+\"(\"+i+\", \"+(\"GET\"!=l)+\")\",\"GET\"==l||\"GET_REMOVE\"==l)return[a,Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==l)return a+\";\\n\"}throw\"Unhandled combination (lists_getIndex).\"},Blockly.Arduino.lists_setIndex=function(e){var l=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",o=e.getFieldValue(\"MODE\")||\"GET\",t=e.getFieldValue(\"WHERE\")||\"FROM_START\",i=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"null\";function n(){if(l.match(/^\\w+$/))return\"\";var e=Blockly.Arduino.variableDB_.getDistinctName(\"tmpList\",Blockly.Variables.NAME_TYPE),o=\"var \"+e+\" = \"+l+\";\\n\";return l=e,o}switch(t){case\"FIRST\":if(\"SET\"==o)return l+\"[0] = \"+i+\";\\n\";if(\"INSERT\"==o)return l+\".unshift(\"+i+\");\\n\";break;case\"LAST\":if(\"SET\"==o){var a=n();return a+=l+\"[\"+l+\".length - 1] = \"+i+\";\\n\"}if(\"INSERT\"==o)return l+\".push(\"+i+\");\\n\";break;case\"FROM_START\":var r=Blockly.Arduino.getAdjusted(e,\"AT\");if(\"SET\"==o)return l+\"[\"+r+\"] = \"+i+\";\\n\";if(\"INSERT\"==o)return l+\".splice(\"+r+\", 0, \"+i+\");\\n\";break;case\"FROM_END\":r=Blockly.Arduino.getAdjusted(e,\"AT\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION),a=n();if(\"SET\"==o)return a+=l+\"[\"+l+\".length - \"+r+\"] = \"+i+\";\\n\";if(\"INSERT\"==o)return a+=l+\".splice(\"+l+\".length - \"+r+\", 0, \"+i+\");\\n\";break;case\"RANDOM\":a=n();var c=Blockly.Arduino.variableDB_.getDistinctName(\"tmpX\",Blockly.Variables.NAME_TYPE);if(a+=\"var \"+c+\" = Math.floor(Math.random() * \"+l+\".length);\\n\",\"SET\"==o)return a+=l+\"[\"+c+\"] = \"+i+\";\\n\";if(\"INSERT\"==o)return a+=l+\".splice(\"+c+\", 0, \"+i+\");\\n\"}throw\"Unhandled combination (lists_setIndex).\"},Blockly.Arduino.lists.getIndex_=function(e,l,o){return\"FIRST\"==l?\"0\":\"FROM_END\"==l?e+\".length - 1 - \"+o:\"LAST\"==l?e+\".length - 1\":o},Blockly.Arduino.lists_getSublist=function(e){var l=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",o=e.getFieldValue(\"WHERE1\"),t=e.getFieldValue(\"WHERE2\");if(\"FIRST\"==o&&\"LAST\"==t)var i=l+\".slice(0)\";else if(l.match(/^\\w+$/)||\"FROM_END\"!=o&&\"FROM_START\"==t){switch(o){case\"FROM_START\":var n=Blockly.Arduino.getAdjusted(e,\"AT1\");break;case\"FROM_END\":n=l+\".length - \"+(n=Blockly.Arduino.getAdjusted(e,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":n=\"0\";break;default:throw\"Unhandled option (lists_getSublist).\"}switch(t){case\"FROM_START\":var a=Blockly.Arduino.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":a=l+\".length - \"+(a=Blockly.Arduino.getAdjusted(e,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":a=l+\".length\";break;default:throw\"Unhandled option (lists_getSublist).\"}i=l+\".slice(\"+n+\", \"+a+\")\"}else{n=Blockly.Arduino.getAdjusted(e,\"AT1\"),a=Blockly.Arduino.getAdjusted(e,\"AT2\");var r=Blockly.Arduino.lists.getIndex_,c={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};i=Blockly.Arduino.provideFunction_(\"subsequence\"+c[o]+c[t],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==o||\"FROM_START\"==o?\", at1\":\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", at2\":\"\")+\") {\",\"  var start = \"+r(\"sequence\",o,\"at1\")+\";\",\"  var end = \"+r(\"sequence\",t,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+l+(\"FROM_END\"==o||\"FROM_START\"==o?\", \"+n:\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", \"+a:\"\")+\")\"}return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_sort=function(e){var l=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\",o=\"1\"===e.getFieldValue(\"DIRECTION\")?1:-1,t=e.getFieldValue(\"TYPE\");return[l+\".slice().sort(\"+Blockly.Arduino.provideFunction_(\"listsGetSortCompare\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(type, direction) {\",\"  var compareFuncs = {\",'    \"NUMERIC\": function(a, b) {',\"        return parseFloat(a) - parseFloat(b); },\",'    \"TEXT\": function(a, b) {',\"        return a.toString() > b.toString() ? 1 : -1; },\",'    \"IGNORE_CASE\": function(a, b) {',\"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\",\"  };\",\"  var compare = compareFuncs[type];\",\"  return function(a, b) { return compare(a, b) * direction; }\",\"}\"])+'(\"'+t+'\", '+o+\"))\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_split=function(e){var l=Blockly.Arduino.valueToCode(e,\"INPUT\",Blockly.Arduino.ORDER_MEMBER),o=Blockly.Arduino.valueToCode(e,\"DELIM\",Blockly.Arduino.ORDER_NONE)||\"''\",t=e.getFieldValue(\"MODE\");if(\"SPLIT\"==t){l||(l=\"''\");var i=\"split\"}else{if(\"JOIN\"!=t)throw\"Unknown mode: \"+t;l||(l=\"[]\");i=\"join\"}return[l+\".\"+i+\"(\"+o+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_reverse=function(e){return[(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\")+\".slice().reverse()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.logic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_if=function(e){var l=0,o=\"\";do{o+=(l>0?\" else \":\"\")+\"if (\"+(Blockly.Arduino.valueToCode(e,\"IF\"+l,Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\"+Blockly.Arduino.statementToCode(e,\"DO\"+l)+\"}\",++l}while(e.getInput(\"IF\"+l));return e.getInput(\"ELSE\")&&(o+=\" else {\\n\"+Blockly.Arduino.statementToCode(e,\"ELSE\")+\"}\"),o+\"\\n\"},Blockly.Arduino.controls_ifelse=Blockly.Arduino.controls_if,Blockly.Arduino.logic_compare=function(e){var l={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[e.getFieldValue(\"OP\")],o=\"==\"==l||\"!=\"==l?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL;return[(Blockly.Arduino.valueToCode(e,\"A\",o)||\"0\")+\" \"+l+\" \"+(Blockly.Arduino.valueToCode(e,\"B\",o)||\"0\"),o]},Blockly.Arduino.logic_operation=function(e){var l=\"AND\"==e.getFieldValue(\"OP\")?\"&&\":\"||\",o=\"&&\"==l?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,t=Blockly.Arduino.valueToCode(e,\"A\",o),i=Blockly.Arduino.valueToCode(e,\"B\",o);if(t||i){var n=\"&&\"==l?\"true\":\"false\";t||(t=n),i||(i=n)}else t=\"false\",i=\"false\";return[t+\" \"+l+\" \"+i,o]},Blockly.Arduino.logic_negate=function(e){var l=Blockly.Arduino.ORDER_LOGICAL_NOT;return[\"!\"+(Blockly.Arduino.valueToCode(e,\"BOOL\",l)||\"true\"),l]},Blockly.Arduino.logic_boolean=function(e){return[\"TRUE\"==e.getFieldValue(\"BOOL\")?\"true\":\"false\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_null=function(e){return[\"null\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_ternary=function(e){return[(Blockly.Arduino.valueToCode(e,\"IF\",Blockly.Arduino.ORDER_CONDITIONAL)||\"false\")+\" ? \"+(Blockly.Arduino.valueToCode(e,\"THEN\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\")+\" : \"+(Blockly.Arduino.valueToCode(e,\"ELSE\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\"),Blockly.Arduino.ORDER_CONDITIONAL]}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.loops\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_repeat_ext=function(e){if(e.getField(\"TIMES\"))var l=String(Number(e.getFieldValue(\"TIMES\")));else l=Blockly.Arduino.valueToCode(e,\"TIMES\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";var o=Blockly.Arduino.statementToCode(e,\"DO\");o=Blockly.Arduino.addLoopTrap(o,e.id);var t=\"\",i=Blockly.Arduino.variableDB_.getDistinctName(\"count\",Blockly.Variables.NAME_TYPE),n=l;l.match(/^\\w+$/)||Blockly.isNumber(l)||(t+=\"int \"+(n=Blockly.Arduino.variableDB_.getDistinctName(\"repeat_end\",Blockly.Variables.NAME_TYPE))+\" = \"+l+\";\\n\");return t+=\"for (int \"+i+\" = 0; \"+i+\" < \"+n+\"; \"+i+\"++) {\\n\"+o+\"}\\n\"},Blockly.Arduino.controls_repeat=Blockly.Arduino.controls_repeat_ext,Blockly.Arduino.controls_whileUntil=function(e){var l=\"UNTIL\"==e.getFieldValue(\"MODE\"),o=Blockly.Arduino.valueToCode(e,\"BOOL\",l?Blockly.Arduino.ORDER_LOGICAL_NOT:Blockly.Arduino.ORDER_NONE)||\"false\",t=Blockly.Arduino.statementToCode(e,\"DO\");return l&&(o=\"!\"+o),\"while (\"+o+\") {\\n\"+(t=Blockly.Arduino.addLoopTrap(t,e.id))+\"}\\n\"},Blockly.Arduino.controls_for=function(e){var l,o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),t=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",i=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",n=Blockly.Arduino.valueToCode(e,\"BY\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"1\",a=Blockly.Arduino.statementToCode(e,\"DO\");if(a=Blockly.Arduino.addLoopTrap(a,e.id),Blockly.isNumber(t)&&Blockly.isNumber(i)&&Blockly.isNumber(n)){var r=parseFloat(t)<=parseFloat(i);l=\"for (\"+o+\" = \"+t+\"; \"+o+(r?\" <= \":\" >= \")+i+\"; \"+o;var c=Math.abs(parseFloat(n));l+=1==c?r?\"++\":\"--\":(r?\" += \":\" -= \")+c,l+=\") {\\n\"+a+\"}\\n\"}else{l=\"\";var s=t;t.match(/^\\w+$/)||Blockly.isNumber(t)||(l+=\"var \"+(s=Blockly.Arduino.variableDB_.getDistinctName(o+\"_start\",Blockly.Variables.NAME_TYPE))+\" = \"+t+\";\\n\");var u=i;if(!i.match(/^\\w+$/)&&!Blockly.isNumber(i))l+=\"var \"+(u=Blockly.Arduino.variableDB_.getDistinctName(o+\"_end\",Blockly.Variables.NAME_TYPE))+\" = \"+i+\";\\n\";var _=Blockly.Arduino.variableDB_.getDistinctName(o+\"_inc\",Blockly.Variables.NAME_TYPE);l+=\"var \"+_+\" = \",Blockly.isNumber(n)?l+=Math.abs(n)+\";\\n\":l+=\"Math.abs(\"+n+\");\\n\",l+=\"if (\"+s+\" > \"+u+\") {\\n\",l+=Blockly.Arduino.INDENT+_+\" = -\"+_+\";\\n\",l+=\"}\\n\",l+=\"for (\"+o+\" = \"+s+\"; \"+_+\" >= 0 ? \"+o+\" <= \"+u+\" : \"+o+\" >= \"+u+\"; \"+o+\" += \"+_+\") {\\n\"+a+\"}\\n\"}return l},Blockly.Arduino.controls_forEach=function(e){var l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),o=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"[]\",t=Blockly.Arduino.statementToCode(e,\"DO\");t=Blockly.Arduino.addLoopTrap(t,e.id);var i=\"\",n=o;o.match(/^\\w+$/)||(i+=\"var \"+(n=Blockly.Arduino.variableDB_.getDistinctName(l+\"_list\",Blockly.Variables.NAME_TYPE))+\" = \"+o+\";\\n\");var a=Blockly.Arduino.variableDB_.getDistinctName(l+\"_index\",Blockly.Variables.NAME_TYPE);return i+=\"for (var \"+a+\" in \"+n+\") {\\n\"+(t=Blockly.Arduino.INDENT+l+\" = \"+n+\"[\"+a+\"];\\n\"+t)+\"}\\n\"},Blockly.Arduino.controls_flow_statements=function(e){switch(e.getFieldValue(\"FLOW\")){case\"BREAK\":return\"break;\\n\";case\"CONTINUE\":return\"continue;\\n\"}throw\"Unknown flow statement.\"}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.math\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.math_number=function(e){var l=parseFloat(e.getFieldValue(\"NUM\"));return[l,l>=0?Blockly.Arduino.ORDER_ATOMIC:Blockly.Arduino.ORDER_UNARY_NEGATION]},Blockly.Arduino.math_arithmetic=function(e){var l={ADD:[\" + \",Blockly.Arduino.ORDER_ADDITION],MINUS:[\" - \",Blockly.Arduino.ORDER_SUBTRACTION],MULTIPLY:[\" * \",Blockly.Arduino.ORDER_MULTIPLICATION],DIVIDE:[\" / \",Blockly.Arduino.ORDER_DIVISION],POWER:[null,Blockly.Arduino.ORDER_COMMA]}[e.getFieldValue(\"OP\")],o=l[0],t=l[1],i=Blockly.Arduino.valueToCode(e,\"A\",t)||\"0\",n=Blockly.Arduino.valueToCode(e,\"B\",t)||\"0\";return o?[i+o+n,t]:[\"Math.pow(\"+i+\", \"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_single=function(e){var l,o,t=e.getFieldValue(\"OP\");if(\"NEG\"==t)return\"-\"==(o=Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_UNARY_NEGATION)||\"0\")[0]&&(o=\" \"+o),[l=\"-\"+o,Blockly.Arduino.ORDER_UNARY_NEGATION];switch(o=\"SIN\"==t||\"COS\"==t||\"TAN\"==t?Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_DIVISION)||\"0\":Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_NONE)||\"0\",t){case\"ABS\":l=\"Math.abs(\"+o+\")\";break;case\"ROOT\":l=\"Math.sqrt(\"+o+\")\";break;case\"LN\":l=\"Math.log(\"+o+\")\";break;case\"EXP\":l=\"Math.exp(\"+o+\")\";break;case\"POW10\":l=\"Math.pow(10,\"+o+\")\";break;case\"ROUND\":l=\"Math.round(\"+o+\")\";break;case\"ROUNDUP\":l=\"Math.ceil(\"+o+\")\";break;case\"ROUNDDOWN\":l=\"Math.floor(\"+o+\")\";break;case\"SIN\":l=\"Math.sin(\"+o+\" / 180 * Math.PI)\";break;case\"COS\":l=\"Math.cos(\"+o+\" / 180 * Math.PI)\";break;case\"TAN\":l=\"Math.tan(\"+o+\" / 180 * Math.PI)\"}if(l)return[l,Blockly.Arduino.ORDER_FUNCTION_CALL];switch(t){case\"LOG10\":l=\"Math.log(\"+o+\") / Math.log(10)\";break;case\"ASIN\":l=\"Math.asin(\"+o+\") / Math.PI * 180\";break;case\"ACOS\":l=\"Math.acos(\"+o+\") / Math.PI * 180\";break;case\"ATAN\":l=\"Math.atan(\"+o+\") / Math.PI * 180\";break;default:throw\"Unknown math operator: \"+t}return[l,Blockly.Arduino.ORDER_DIVISION]},Blockly.Arduino.math_constant=function(e){return{PI:[\"Math.PI\",Blockly.Arduino.ORDER_MEMBER],E:[\"Math.E\",Blockly.Arduino.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + Math.sqrt(5)) / 2\",Blockly.Arduino.ORDER_DIVISION],SQRT2:[\"Math.SQRT2\",Blockly.Arduino.ORDER_MEMBER],SQRT1_2:[\"Math.SQRT1_2\",Blockly.Arduino.ORDER_MEMBER],INFINITY:[\"Infinity\",Blockly.Arduino.ORDER_ATOMIC]}[e.getFieldValue(\"CONSTANT\")]},Blockly.Arduino.math_number_property=function(e){var l,o=Blockly.Arduino.valueToCode(e,\"NUMBER_TO_CHECK\",Blockly.Arduino.ORDER_MODULUS)||\"0\",t=e.getFieldValue(\"PROPERTY\");if(\"PRIME\"==t)return[l=Blockly.Arduino.provideFunction_(\"mathIsPrime\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(n) {\",\"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\"  if (n == 2 || n == 3) {\",\"    return true;\",\"  }\",\"  // False if n is NaN, negative, is 1, or not whole.\",\"  // And false if n is divisible by 2 or 3.\",\"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\",\"    return false;\",\"  }\",\"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\",\"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\",\"      return false;\",\"    }\",\"  }\",\"  return true;\",\"}\"])+\"(\"+o+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];switch(t){case\"EVEN\":l=o+\" % 2 == 0\";break;case\"ODD\":l=o+\" % 2 == 1\";break;case\"WHOLE\":l=o+\" % 1 == 0\";break;case\"POSITIVE\":l=o+\" > 0\";break;case\"NEGATIVE\":l=o+\" < 0\";break;case\"DIVISIBLE_BY\":l=o+\" % \"+(Blockly.Arduino.valueToCode(e,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" == 0\"}return[l,Blockly.Arduino.ORDER_EQUALITY]},Blockly.Arduino.math_change=function(e){var l=Blockly.Arduino.valueToCode(e,\"DELTA\",Blockly.Arduino.ORDER_ADDITION)||\"0\",o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return o+\" = (typeof \"+o+\" == 'number' ? \"+o+\" : 0) + \"+l+\";\\n\"},Blockly.Arduino.math_round=Blockly.Arduino.math_single,Blockly.Arduino.math_trig=Blockly.Arduino.math_single,Blockly.Arduino.math_on_list=function(e){var l,o=e.getFieldValue(\"OP\");switch(o){case\"SUM\":l=(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".reduce(function(x, y) {return x + y;})\";break;case\"MIN\":l=\"Math.min.apply(null, \"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"MAX\":l=\"Math.max.apply(null, \"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"AVERAGE\":l=Blockly.Arduino.provideFunction_(\"mathMean\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MEDIAN\":l=Blockly.Arduino.provideFunction_(\"mathMedian\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  var localList = myList.filter(function (x) {return typeof x == 'number';});\",\"  if (!localList.length) return null;\",\"  localList.sort(function(a, b) {return b - a;});\",\"  if (localList.length % 2 == 0) {\",\"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\",\"  } else {\",\"    return localList[(localList.length - 1) / 2];\",\"  }\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MODE\":l=Blockly.Arduino.provideFunction_(\"mathModes\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(values) {\",\"  var modes = [];\",\"  var counts = [];\",\"  var maxCount = 0;\",\"  for (var i = 0; i < values.length; i++) {\",\"    var value = values[i];\",\"    var found = false;\",\"    var thisCount;\",\"    for (var j = 0; j < counts.length; j++) {\",\"      if (counts[j][0] === value) {\",\"        thisCount = ++counts[j][1];\",\"        found = true;\",\"        break;\",\"      }\",\"    }\",\"    if (!found) {\",\"      counts.push([value, 1]);\",\"      thisCount = 1;\",\"    }\",\"    maxCount = Math.max(thisCount, maxCount);\",\"  }\",\"  for (var j = 0; j < counts.length; j++) {\",\"    if (counts[j][1] == maxCount) {\",\"        modes.push(counts[j][0]);\",\"    }\",\"  }\",\"  return modes;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"STD_DEV\":l=Blockly.Arduino.provideFunction_(\"mathStandardDeviation\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(numbers) {\",\"  var n = numbers.length;\",\"  if (!n) return null;\",\"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\",\"  var variance = 0;\",\"  for (var j = 0; j < n; j++) {\",\"    variance += Math.pow(numbers[j] - mean, 2);\",\"  }\",\"  variance = variance / n;\",\"  return Math.sqrt(variance);\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"RANDOM\":l=Blockly.Arduino.provideFunction_(\"mathRandomList\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  return list[x];\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;default:throw\"Unknown operator: \"+o}return[l,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_modulo=function(e){return[(Blockly.Arduino.valueToCode(e,\"DIVIDEND\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" % \"+(Blockly.Arduino.valueToCode(e,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\"),Blockly.Arduino.ORDER_MODULUS]},Blockly.Arduino.math_constrain=function(e){return[\"Math.min(Math.max(\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\", \"+(Blockly.Arduino.valueToCode(e,\"LOW\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\"), \"+(Blockly.Arduino.valueToCode(e,\"HIGH\",Blockly.Arduino.ORDER_COMMA)||\"Infinity\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_int=function(e){var l=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_COMMA)||\"0\",o=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_COMMA)||\"0\";return[Blockly.Arduino.provideFunction_(\"mathRandomInt\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(a, b) {\",\"  if (a > b) {\",\"    // Swap a and b to ensure a is smaller.\",\"    var c = a;\",\"    a = b;\",\"    b = c;\",\"  }\",\"  return Math.floor(Math.random() * (b - a + 1) + a);\",\"}\"])+\"(\"+l+\", \"+o+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_float=function(e){return[\"Math.random()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.procedures\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.procedures_defreturn=function(e){var l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=Blockly.Arduino.statementToCode(e,\"STACK\");if(Blockly.Arduino.STATEMENT_PREFIX){var t=e.id.replace(/\\$/g,\"$$$$\");o=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,\"'\"+t+\"'\"),Blockly.Arduino.INDENT)+o}Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,\"'\"+e.id+\"'\")+o);var i=Blockly.Arduino.valueToCode(e,\"RETURN\",Blockly.Arduino.ORDER_NONE)||\"\";i&&(i=Blockly.Arduino.INDENT+\"return \"+i+\";\\n\");for(var n=i?\"int\":\"void\",a=[],r=0;r<e.arguments_.length;r++)a[r]=\"int \"+Blockly.Arduino.variableDB_.getName(e.arguments_[r],Blockly.Variables.NAME_TYPE);var c=n+\" \"+l+\"(\"+a.join(\", \")+\") {\\n\"+o+i+\"}\\n\";return c=Blockly.Arduino.scrub_(e,c),Blockly.Arduino.definitions_[\"%\"+l]=c,null},Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn,Blockly.Arduino.procedures_callreturn=function(e){for(var l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=[],t=0;t<e.arguments_.length;t++)o[t]=Blockly.Arduino.valueToCode(e,\"ARG\"+t,Blockly.Arduino.ORDER_COMMA)||\"null\";return[l+\"(\"+o.join(\", \")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.procedures_callnoreturn=function(e){for(var l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),o=[],t=0;t<e.arguments_.length;t++)o[t]=Blockly.Arduino.valueToCode(e,\"ARG\"+t,Blockly.Arduino.ORDER_COMMA)||\"null\";return l+\"(\"+o.join(\", \")+\");\\n\"},Blockly.Arduino.procedures_ifreturn=function(e){var l=\"if (\"+(Blockly.Arduino.valueToCode(e,\"CONDITION\",Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\";if(e.hasReturnValue_){var o=Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_NONE)||\"null\";l+=Blockly.Arduino.INDENT+\"return \"+o+\";\\n\"}else l+=Blockly.Arduino.INDENT+\"return;\\n\";return l+=\"}\\n\"}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.texts\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.text=function(e){return[Blockly.Arduino.quote_(e.getFieldValue(\"TEXT\")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.text_join=function(e){switch(e.itemCount_){case 0:return[\"''\",Blockly.Arduino.ORDER_ATOMIC];case 1:return[\"String(\"+(Blockly.Arduino.valueToCode(e,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case 2:return[\"String(\"+(Blockly.Arduino.valueToCode(e,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\") + String(\"+(Blockly.Arduino.valueToCode(e,\"ADD1\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_ADDITION];default:for(var l=new Array(e.itemCount_),o=0;o<e.itemCount_;o++)l[o]=Blockly.Arduino.valueToCode(e,\"ADD\"+o,Blockly.Arduino.ORDER_COMMA)||\"''\";return[\"[\"+l.join(\",\")+\"].join('')\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},Blockly.Arduino.text_append=function(e){var l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return l+\" = String(\"+l+\") + String(\"+(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_length=function(e){return[(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_isEmpty=function(e){return[\"!\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.text_indexOf=function(e){var l=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",o=Blockly.Arduino.valueToCode(e,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",t=(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".\"+l+\"(\"+o+\")\";return e.workspace.options.oneBasedIndex?[t+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[t,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_charAt=function(e){var l=e.getFieldValue(\"WHERE\")||\"FROM_START\",o=\"RANDOM\"==l?Blockly.Arduino.ORDER_NONE:Blockly.Arduino.ORDER_MEMBER,t=Blockly.Arduino.valueToCode(e,\"VALUE\",o)||\"''\";switch(l){case\"FIRST\":return[t+\".charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"LAST\":return[t+\".slice(-1)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_START\":return[t+\".charAt(\"+Blockly.Arduino.getAdjusted(e,\"AT\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_END\":return[t+\".slice(\"+Blockly.Arduino.getAdjusted(e,\"AT\",1,!0)+\").charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"RANDOM\":return[Blockly.Arduino.provideFunction_(\"textRandomLetter\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(text) {\",\"  var x = Math.floor(Math.random() * text.length);\",\"  return text[x];\",\"}\"])+\"(\"+t+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}throw\"Unhandled option (text_charAt).\"},Blockly.Arduino.text.getIndex_=function(e,l,o){return\"FIRST\"==l?\"0\":\"FROM_END\"==l?e+\".length - 1 - \"+o:\"LAST\"==l?e+\".length - 1\":o},Blockly.Arduino.text_getSubstring=function(e){var l=Blockly.Arduino.valueToCode(e,\"STRING\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\",o=e.getFieldValue(\"WHERE1\"),t=e.getFieldValue(\"WHERE2\");if(\"FIRST\"==o&&\"LAST\"==t)var i=l;else if(l.match(/^'?\\w+'?$/)||\"FROM_END\"!=o&&\"LAST\"!=o&&\"FROM_END\"!=t&&\"LAST\"!=t){switch(o){case\"FROM_START\":var n=Blockly.Arduino.getAdjusted(e,\"AT1\");break;case\"FROM_END\":n=l+\".length - \"+(n=Blockly.Arduino.getAdjusted(e,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":n=\"0\";break;default:throw\"Unhandled option (text_getSubstring).\"}switch(t){case\"FROM_START\":var a=Blockly.Arduino.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":a=l+\".length - \"+(a=Blockly.Arduino.getAdjusted(e,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":a=l+\".length\";break;default:throw\"Unhandled option (text_getSubstring).\"}i=l+\".slice(\"+n+\", \"+a+\")\"}else{n=Blockly.Arduino.getAdjusted(e,\"AT1\"),a=Blockly.Arduino.getAdjusted(e,\"AT2\");var r=Blockly.Arduino.text.getIndex_,c={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};i=Blockly.Arduino.provideFunction_(\"subsequence\"+c[o]+c[t],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==o||\"FROM_START\"==o?\", at1\":\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", at2\":\"\")+\") {\",\"  var start = \"+r(\"sequence\",o,\"at1\")+\";\",\"  var end = \"+r(\"sequence\",t,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+l+(\"FROM_END\"==o||\"FROM_START\"==o?\", \"+n:\"\")+(\"FROM_END\"==t||\"FROM_START\"==t?\", \"+a:\"\")+\")\"}return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_changeCase=function(e){var l={UPPERCASE:\".toUpperCase()\",LOWERCASE:\".toLowerCase()\",TITLECASE:null}[e.getFieldValue(\"CASE\")],o=l?Blockly.Arduino.ORDER_MEMBER:Blockly.Arduino.ORDER_NONE,t=Blockly.Arduino.valueToCode(e,\"TEXT\",o)||\"''\";if(l)var i=t+l;else i=Blockly.Arduino.provideFunction_(\"textToTitleCase\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(str) {\",\"  return str.replace(/\\\\S+/g,\",\"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\",\"}\"])+\"(\"+t+\")\";return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_trim=function(e){var l={LEFT:\".replace(/^[\\\\s\\\\xa0]+/, '')\",RIGHT:\".replace(/[\\\\s\\\\xa0]+$/, '')\",BOTH:\".trim()\"}[e.getFieldValue(\"MODE\")];return[(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+l,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_print=function(e){return\"window.alert(\"+(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_prompt_ext=function(e){if(e.getField(\"TEXT\"))var l=Blockly.Arduino.quote_(e.getFieldValue(\"TEXT\"));else l=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\";var o=\"window.prompt(\"+l+\")\";return\"NUMBER\"==e.getFieldValue(\"TYPE\")&&(o=\"parseFloat(\"+o+\")\"),[o,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_prompt=Blockly.Arduino.text_prompt_ext,Blockly.Arduino.text_count=function(e){var l=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",o=Blockly.Arduino.valueToCode(e,\"SUB\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textCount\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle) {\",\"  if (needle.length === 0) {\",\"    return haystack.length + 1;\",\"  } else {\",\"    return haystack.split(needle).length - 1;\",\"  }\",\"}\"])+\"(\"+l+\", \"+o+\")\",Blockly.Arduino.ORDER_SUBTRACTION]},Blockly.Arduino.text_replace=function(e){var l=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",o=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_NONE)||\"''\",t=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textReplace\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle, replacement) {\",'  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")','                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\"  return haystack.replace(new RegExp(needle, 'g'), replacement);\",\"}\"])+\"(\"+l+\", \"+o+\", \"+t+\")\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_reverse=function(e){return[(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".split('').reverse().join('')\",Blockly.Arduino.ORDER_MEMBER]}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variables\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.variables_get=function(e){return[Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.variables_set=function(e){var l=Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";return Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE)+\" = \"+l+\";\\n\"}},function(e,l,o){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2018 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variablesDynamic\"),goog.require(\"Blockly.Arduino\"),goog.require(\"Blockly.Arduino.variables\"),Blockly.Arduino.variables_get_dynamic=Blockly.Arduino.variables_get,Blockly.Arduino.variables_set_dynamic=Blockly.Arduino.variables_set},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Arduino.arduino_base\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_base_inout_buildin_led=function(e){var l=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_.setup_output_13=\"pinMode(13, OUTPUT);\",\"digitalWrite(13, \"+l+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_write=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_output_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"digitalWrite(\"+l+\", \"+o+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_read=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", INPUT);\",[\"digitalRead(\"+l+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_highlow=function(e){return[\"HIGH\"==e.getFieldValue(\"BOOL\")?\"HIGH\":\"LOW\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_analog_write=function(e){return\"analogWrite(\"+e.getFieldValue(\"PIN\")+\", \"+Blockly.Arduino.valueToCode(this,\"PWM\",Blockly.Arduino.ORDER_ATOMIC)+\");\\n\"},Blockly.Arduino.arduino_base_inout_analog_read=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_delay=function(e){return\"delay(\"+(Blockly.Arduino.valueToCode(this,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\")+\");\\n\"},Blockly.Arduino.arduino_base_angle=function(e){return[this.getFieldValue(\"ANGLE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_date=function(e){return[this.getFieldValue(\"DATE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_map=function(e){return[\"map(\"+Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_NONE)+\", 0, 1024, 0, \"+Blockly.Arduino.valueToCode(this,\"DMAX\",Blockly.Arduino.ORDER_ATOMIC)+\")\",Blockly.Arduino.ORDER_NONE]},Blockly.Arduino.arduino_base_inout_tone=function(e){var l=e.getFieldValue(\"PIN\"),o=Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_[\"setup_output\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"tone(\"+l+\", \"+o+\");\\n\"},Blockly.Arduino.arduino_base_inout_notone=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_output\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"noTone(\"+l+\");\\n\"},Blockly.Arduino.arduino_base_serial_print=function(e){var l=Blockly.Arduino.valueToCode(this,\"CONTENT\",Blockly.Arduino.ORDER_ATOMIC)||\"0\";return Blockly.Arduino.setups_[\"setup_serial_\"+profile.default.serial]=\"Serial.begin(9600);\\n\",\"Serial.println(\"+l+\");\\n\"}},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Arduino.grove\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.grove_led=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_green_led_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"digitalWrite(\"+l+\",\"+o+\");\\n\"},Blockly.Arduino.grove_button=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_button_\"+l]=\"pinMode(\"+l+\", INPUT);\",[\"digitalRead(\"+l+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rotary_angle=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_tilt_switch=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_tilt_switch_\"+l]=\"pinMode(\"+l+\", INPUT);\",[\"digitalRead(\"+l+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_piezo_buzzer=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_piezo_buzzer_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"digitalWrite(\"+l+\",\"+o+\");\\n\"},Blockly.Arduino.grove_relay=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_relay_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",\"digitalWrite(\"+l+\",\"+o+\");\\n\"},Blockly.Arduino.grove_temperature_sensor=function(e){var l=e.getFieldValue(\"PIN\");return[\"round((1/(log((float)(1023-analogRead(\"+l+\"))*10000/analogRead(\"+l+\"))/10000)/3975+1/298.15)-273.15)\",Blockly.Arduino.ORDER_ATOMIC]};var t=function(e){var l=e;l=parseInt(l)?parseInt(e)+1:\"A\"+(parseInt(l.slice(1,l.length))+1);for(var o=profile.default.dropdownDigital.length,t=!0,i=0;i<o;i++)profile.default.dropdownDigital[i][1]==l&&(t=!1);return t?(alert(\"Grove Sensor needs PIN#+1 port, current setting is out of bound.\"),null):l};function i(e){return parseInt(a(e).substring(2,4),16)}function n(e){return parseInt(a(e).substring(4,6),16)}function a(e){return\"#\"==e.charAt(0)?e.substring(1,7):e}Blockly.Arduino.grove_serial_lcd_print=function(e){var l=e.getFieldValue(\"PIN\"),o=Blockly.Arduino.valueToCode(e,\"TEXT1\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",i=Blockly.Arduino.valueToCode(e,\"TEXT2\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",n=Blockly.Arduino.valueToCode(e,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\";Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var a=t(l);Blockly.Arduino.definitions_[\"var_lcd_\"+l]=\"SerialLCD slcd_\"+l+\"(\"+l+\",\"+a+\");\\n\",Blockly.Arduino.setups_[\"setup_lcd_\"+l]=\"slcd_\"+l+\".begin();\\n\";var r=\"slcd_\"+l+\".backlight();\\n\";return r+=\"slcd_\"+l+\".setCursor(0,0);\\n\",r+=\"slcd_\"+l+\".print(\"+o+\");\\n\",r+=\"slcd_\"+l+\".setCursor(0,1);\\n\",r+=\"slcd_\"+l+\".print(\"+i+\");\\n\",r+=\"delay(\"+n+\");\\n\"},Blockly.Arduino.grove_serial_lcd_power=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var i=t(l);Blockly.Arduino.definitions_[\"var_lcd\"+l]=\"SerialLCD slcd_\"+l+\"(\"+l+\",\"+i+\");\\n\";var n=\"slcd_\"+l;return n+=\"ON\"===o?\".Power();\\n\":\".noPower();\\n\"},Blockly.Arduino.grove_serial_lcd_effect=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var i=t(l);Blockly.Arduino.definitions_[\"var_lcd\"+l]=\"SerialLCD slcd_\"+l+\"(\"+l+\",\"+i+\");\\n\";var n=\"slcd_\"+l;return n+=\"LEFT\"===o?\".scrollDisplayLeft();\\n\":\"RIGHT\"===o?\".scrollDisplayRight();\\n\":\".autoscroll();\\n\"},Blockly.Arduino.grove_sound_sensor=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_pir_motion_sensor=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", INPUT);\",[\"digitalRead(\"+l+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_line_finder=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", INPUT);\",[\"digitalRead(\"+l+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_ultrasonic_ranger=function(e){var l=e.getFieldValue(\"PIN\"),o=e.getFieldValue(\"UNIT\");return Blockly.Arduino.definitions_.define_ultrasonic=\"#include <Ultrasonic.h>\\n\",Blockly.Arduino.definitions_[\"var_ultrasonic\"+l]=\"Ultrasonic ultrasonic_\"+l+\"(\"+l+\");\",[\"cm\"===o?\"ultrasonic_\"+l+\".MeasureInCentimeters()\":\"ultrasonic_\"+l+\".MeasureInInches()\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_motor_shield=function(e){var l=e.getFieldValue(\"DIRECTION\");Blockly.Arduino.setups_.setup_motor=\"pinMode(8,OUTPUT);//I1\\n  pinMode(11,OUTPUT);//I2\\n  pinMode(9,OUTPUT);//speedPinA\\n  pinMode(12,OUTPUT);//I3\\n  pinMode(13,OUTPUT);//i4\\n  pinMode(10,OUTPUT);//speedPinB\\n\";var o=\"\";return\"forward\"===l?(Blockly.Arduino.definitions_.define_forward=\"void forward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\",o=\"forward();\\n\"):\"right\"===l?(Blockly.Arduino.definitions_.define_right=\"void right()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\\n\",o=\"right();\\n\"):\"left\"===l?(Blockly.Arduino.definitions_.define_left=\"void left()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",o=\"left();\\n\"):\"backward\"===l?(Blockly.Arduino.definitions_.define_backward=\"void backward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",o=\"backward();\\n\"):\"stop\"===l&&(Blockly.Arduino.definitions_.define_stop=\"void stop()\\n{\\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. block should be done to avid damaging the motor.\\ndigitalWrite(10,LOW);\\ndelay(1000);\\n}\\n\\n\",o=\"stop();\\n\"),o},Blockly.Arduino.grove_thumb_joystick=function(e){var l=e.getFieldValue(\"PIN\");return[\"analogRead(\"+(\"y\"===e.getFieldValue(\"AXIS\")?t(l):l)+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rgb_led=function(e){var l=e.getFieldValue(\"PIN\"),o=t(l);Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",Blockly.Arduino.setups_[\"setup_input_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",Blockly.Arduino.definitions_.define_uint8=\"#define uint8 unsigned char\",Blockly.Arduino.definitions_.define_uint16=\"#define uint16 unsigned int\",Blockly.Arduino.definitions_.define_uint32=\"#define uint32 unsigned long int\",Blockly.Arduino.definitions_[\"define_clkproduce_\"+l]=\"void ClkProduce_\"+l+\"(void)\\n{\\n  digitalWrite(\"+l+\", LOW);\\n  delayMicroseconds(20);\\n  digitalWrite(\"+l+\", HIGH);\\n  delayMicroseconds(20);\\n}\\n\",Blockly.Arduino.definitions_[\"define_send32zero_\"+l]=\"void Send32Zero_\"+l+\"(void)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    digitalWrite(\"+o+\", LOW);\\n    ClkProduce_\"+l+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_.define_taskanticode=\"uint8 TakeAntiCode(uint8 dat)\\n{\\n  uint8 tmp = 0;\\n  if ((dat & 0x80) == 0)\\n  {\\n    tmp |= 0x02;\\n  }\\n  \\n  if ((dat & 0x40) == 0)\\n  {\\n    tmp |= 0x01;\\n  }\\n  return tmp;\\n}\\n\",Blockly.Arduino.definitions_[\"define_datasend_\"+l]=\"// gray data\\nvoid DatSend_\"+l+\"(uint32 dx)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    if ((dx & 0x80000000) != 0)\\n    {\\n      digitalWrite(\"+o+\", HIGH);\\n    }\\n    else\\n    {\\n      digitalWrite(\"+o+\", LOW);\\n    }\\n  dx <<= 1;\\n  ClkProduce_\"+l+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_[\"define_datadealwithsend_\"+l]=\"// data processing\\nvoid DataDealWithAndSend_\"+l+\"(uint8 r, uint8 g, uint8 b)\\n{\\n  uint32 dx = 0;\\n  dx |= (uint32)0x03 << 30;             // highest two bits 1，flag bits\\n  dx |= (uint32)TakeAntiCode(b) << 28;\\n  dx |= (uint32)TakeAntiCode(g) << 26;\\n  dx |= (uint32)TakeAntiCode(r) << 24;\\n\\n  dx |= (uint32)b << 16;\\n  dx |= (uint32)g << 8;\\n  dx |= r;\\n\\n  DatSend_\"+l+\"(dx);\\n}\\n\";var r=\"Send32Zero_\"+l+\"(); // begin\\n\";if(0==e.itemCount_)return\"\";for(var c=0;c<e.itemCount_;c++){var s=e.getFieldValue(\"RGB\"+c);r+=\"DataDealWithAndSend_\"+l+\"(\"+parseInt(a(s).substring(0,2),16)+\", \"+i(s)+\", \"+n(s)+\"); // first node data\\n\"}return r+=\"Send32Zero_\"+l+\"();  // send to update data\\n\"},Blockly.Arduino.grove_bluetooth_slave=function(e){var l=e.getFieldValue(\"PIN\"),o=t(l),i=e.getFieldValue(\"NAME\"),n=(e.getFieldValue(\"PINCODE\"),Blockly.Arduino.statementToCode(e,\"RCV\")),a=Blockly.Arduino.statementToCode(e,\"SNT\");return Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\",Blockly.Arduino.definitions_[\"var_bluetooth_\"+l]=\"SoftwareSerial blueToothSerial_\"+l+\"(\"+l+\",\"+o+\");\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+l]=\"Serial.begin(9600);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+l]+=\"  pinMode(\"+l+\", INPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+l]+=\"  pinMode(\"+o+\", OUTPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+l]+=\"  setupBlueToothConnection_\"+l+\"();\\n\",Blockly.Arduino.definitions_[\"define_setupBlueToothConnection_\"+l]=\"void setupBlueToothConnection_\"+l+\"()\\n{\\n  blueToothSerial_\"+l+\".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\\n  blueToothSerial_\"+l+'.print(\"\\\\r\\\\n+STWMOD=0\\\\r\\\\n\"); //set the bluetooth work in slave mode\\n  blueToothSerial_'+l+'.print(\"\\\\r\\\\n+STNA='+i+'\\\\r\\\\n\"); //set the bluetooth name as \"'+i+'\"\\n  blueToothSerial_'+l+'.print(\"\\\\r\\\\n+STPIN=0000\\\\r\\\\n\");//Set SLAVE pincode\"0000\"\\n  blueToothSerial_'+l+'.print(\"\\\\r\\\\n+STOAUT=1\\\\r\\\\n\"); // Permit Paired device to connect me\\n  blueToothSerial_'+l+'.print(\"\\\\r\\\\n+STAUTO=0\\\\r\\\\n\"); // Auto-connection should be forbidden here\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+l+'.print(\"\\\\r\\\\n+INQ=1\\\\r\\\\n\"); //make the slave bluetooth inquirable \\n  Serial.println(\"The slave bluetooth is inquirable!\");\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+l+\".flush();\\n}\\n\",\"char recvChar_\"+l+\";\\nwhile(1) {\\n  if(blueToothSerial_\"+l+\".available()) {//check if there is any data sent from the remote bluetooth shield\\n    recvChar_\"+l+\" = blueToothSerial_\"+l+\".read();\\n    Serial.print(recvChar_\"+l+\");\\n\"+n+\"  }\\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\\n    recvChar_\"+l+\" = Serial.read();\\n    blueToothSerial_\"+l+\".print(recvChar_\"+l+\");\\n\"+a+\"  }\\n}\\n\"}},function(e,l,o){\"use strict\";goog.provide(\"Blockly.Arduino.servo\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.servo_move=function(e){var l=e.getFieldValue(\"PIN\"),o=Blockly.Arduino.valueToCode(e,\"DEGREE\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+l]=\"Servo servo_\"+l+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+l]=\"servo_\"+l+\".attach(\"+l+\");\\n\",\"servo_\"+l+\".write(\"+o+\");\\n\"},Blockly.Arduino.servo_read_degrees=function(e){var l=e.getFieldValue(\"PIN\");return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+l]=\"Servo servo_\"+l+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+l]=\"servo_\"+l+\".attach(\"+l+\");\\n\",[\"servo_\"+l+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.program\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_program=function(e){var l=Blockly.Arduino.statementToCode(e,\"SETUP_FUNC\");return l&&(Blockly.Arduino.setups_.userSetupCode=l),function(e,l){var o=e.getInputTargetBlock(l),t=Blockly.Arduino.blockToCode(o);if(!goog.isString(t))throw'Expecting code from statement block \"'+o.type+'\".';return t}(e,\"LOOP_FUNC\")}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.lineSensor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lineSensor_read=function(e){var l=e.getFieldValue(\"INPUT_PIN\"),o=\"lineSensor_\"+l;return Blockly.Arduino.definitions_.lineSensor='#include \"DigitalIO.h\"',Blockly.Arduino.definitions_[o]=\"DigitalIO \"+o+\"(\"+l+\", INPUT);\",[o+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.motor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.motor_right=function(e){var l=e.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors='#include \"Motors.h\"',Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorRight(\"+l+\");\\n\"},Blockly.Arduino.motor_left=function(e){var l=e.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors='#include \"Motors.h\"',Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorLeft(\"+l+\");\\n\"},Blockly.Arduino.motor_drive=function(e){var l=e.getFieldValue(\"MOTOR_SPEED_LEFT\"),o=e.getFieldValue(\"MOTOR_SPEED_RIGHT\");return Blockly.Arduino.definitions_.motors='#include \"Motors.h\"',Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"drive(\"+l+\", \"+o+\");\\n\"}},function(e,l,o){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.ultrasonic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.ultrasonic_read=function(e){var l=e.getFieldValue(\"TIGGER_PIN\"),o=e.getFieldValue(\"ECHO_PIN\"),t=\"usonic_\"+l+\"_\"+o;return Blockly.Arduino.definitions_.ultrasonic='#include \"Ultrasonic.h\"',Blockly.Arduino.definitions_[t]=\"Ultrasonic \"+t+\"(\"+l+\", \"+o+\");\",[t+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}}]);","extractedComments":[]}