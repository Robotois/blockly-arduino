{"code":"!function(e){var o={};function l(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=o,l.d=function(e,o,n){l.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},l.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},l.t=function(e,o){if(1&o&&(e=l(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var t in e)l.d(n,t,function(o){return e[o]}.bind(null,t));return n},l.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(o,\"a\",o),o},l.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},l.p=\"\",l(l.s=0)}([function(e,o,l){\"use strict\";l.r(o);l(1),l(2),l(3),l(4),l(5),l(6),l(7),l(8),l(9),l(10),l(11),l(12),l(13),l(14),l(15),l(16),l(17),l(18),l(19),l(20),l(21),l(22),l(23),l(24),l(25),l(26),l(27),l(28),l(29)},function(e,o){},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Msg.en\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.TITLE2=\" > web-based visual programming editor for arduino\",Blockly.Msg.CAT_ARDUINO_BASE=\"Input / Output\",Blockly.Msg.CAT_SERVO=\"Servo\",Blockly.Msg.CAT_GROVE=\"Grove\",Blockly.Msg.CAT_GROVE_ANALOG=\"Grove Analog\",Blockly.Msg.CAT_GROVE_LCD=\"Grove LCD\",Blockly.Msg.CAT_GROVE_MOTOR=\"Grove Motor\",Blockly.Msg.FIELDDROPDOWN=[[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]],Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_HELPURL=\"http://arduino.cc/en/Reference/DigitalWrite\",Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_INPUT=\"put the LEDs on the card to logic\",Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_TOOLTIP=\"off or turn on the LED on the Arduino board\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT1=\"put the pin Digital\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT2=\"to logic state\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_TOOLTIP=\"write a 0 or 1 state numeric on a specific output\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_HELPURL=\"http://arduino.cc/en/Reference/DigitalWrite\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_INPUT=\"the logic state of PIN#\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_TOOLTIP=\"reading the digital state 0 or 1 of the digital pin\",Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_HELPURL=\"http://arduino.cc/en/Reference/DigitalRead\",Blockly.Msg.ARDUINO_INOUT_ONOFF_HELPURL=\"http://arduino.cc/en/Reference/Constants\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT1=\"write about Analog pin\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT2=\"value\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_TOOLTIP=\"send a value between 0 and 255 on a specific output\",Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_INPUT=\"read value on the analog input\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_TOOLTIP=\"returns a value between 0 and 1023\",Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_HELPURL=\"http://arduino.cc/en/Reference/AnalogRead\",Blockly.Msg.ARDUINO_BASE_DELAY_DELAY_TIME=\"delay (in ms)\",Blockly.Msg.ARDUINO_BASE_DELAY_TOOLTIP=\"specify the pause time in milliseconds\",Blockly.Msg.ARDUINO_BASE_DELAY_HELPURL=\"http://arduino.cc/en/Reference/delay\",Blockly.Msg.ARDUINO_BASE_ANGLE=\"angle: \",Blockly.Msg.ARDUINO_BASE_ANGLE_TOOLTIP=\"angle between 0~180Â°\",Blockly.Msg.ARDUINO_BASE_ANGLE_HELPURL=\"\",Blockly.Msg.ARDUINO_TONE_INPUT1=\"emits sound on the pin\",Blockly.Msg.ARDUINO_TONE_INPUT2=\"on frequency (Hz)\",Blockly.Msg.ARDUINO_TONE_TOOLTIP=\"emits sound on the selected pin\",Blockly.Msg.ARDUINO_TONE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_NOTONE_INPUT=\"stop sound on the pin\",Blockly.Msg.ARDUINO_NOTONE_TOOLTIP=\"mutes the sound on the selected pin\",Blockly.Msg.ARDUINO_NOTONE_HELPURL=\"http://arduino.cc/en/Reference/AnalogWrite\",Blockly.Msg.ARDUINO_SERIAL_PRINT_CONTENT=\"send the data to the serial port:\",Blockly.Msg.ARDUINO_SERIAL_PRINT_TOOLTIP=\"sends data over the serial port for sruvaillance by the monitor in ASCII\",Blockly.Msg.ARDUINO_SERIAL_PRINT_HELPURL=\"http://www.arduino.cc/en/Serial/Print\"},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Msg.colors\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ARDUINO_BASE_HUE=\"#007481\",Blockly.Msg.GROVE_HUE=\"#018770\",Blockly.Msg.SERVO_HUE=\"#343434\"},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.arduino_base\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.arduino_base_inout_buildin_led={init:function(){this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_HELPURL),this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_INPUT).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_TOOLTIP),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_write={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage(\"./images/digital.jpg\",64,64)).appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT2).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_highlow={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"BOOL\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ONOFF_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_write={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage(\"./images/pwm.png\",64,64)).appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownPWM),\"PIN\"),this.appendValueInput(\"PWM\",\"Number\").appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_delay={init:function(){this.appendValueInput(\"DELAY_TIME\",\"Number\").appendField(Blockly.Msg.ARDUINO_BASE_DELAY_DELAY_TIME).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_BASE_DELAY_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_DELAY_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_angle={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_BASE_ANGLE).appendField(new Blockly.FieldAngle(90),\"ANGLE\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_BASE_ANGLE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_ANGLE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_date={init:function(){this.appendDummyInput().appendField(\"date:\").appendField(\"DATE\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Date entrie as yyyy-mm-dd\"),this.setHelpUrl(\"\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_map={init:function(){this.appendValueInput(\"NUM\",\"Number\").appendField(\"Map \").setCheck(\"Number\"),this.appendValueInput(\"DMAX\",\"Number\").appendField(\"value to [0-\").setCheck(\"Number\"),this.appendDummyInput().appendField(\"]\"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(\"Re-maps a number from [0-1024] to another.\"),this.setHelpUrl(\"https://www.arduino.cc/reference/en/language/functions/math/map/\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_tone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_TONE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"NUM\",\"Number\").appendField(Blockly.Msg.ARDUINO_TONE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_TONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_TONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_notone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_NOTONE_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_NOTONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_NOTONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_serial_print={init:function(){this.appendValueInput(\"CONTENT\",\"String\").appendField(Blockly.Msg.ARDUINO_SERIAL_PRINT_CONTENT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_SERIAL_PRINT_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_SERIAL_PRINT_HELPURL),this.setStyle(\"arduino_blocks\")}}},function(e,o){\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ngoog.provide(\"Blockly.Constants.grove\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.grove_led={init:function(){this.appendDummyInput().appendField(\"LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Red_LED_s.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"green LED\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Red_LED/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_button={init:function(){this.appendDummyInput().appendField(\"Button\").appendField(new Blockly.FieldImage(\"./blocks/grove/Button.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Basic digital input\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Button/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rotary_angle={init:function(){this.appendDummyInput().appendField(\"Rotary Angle\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove-Rotary_Angle_Sensor-P-.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Analog output between 0 and Vcc\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Rotary_Angle_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_tilt_switch={init:function(){this.appendDummyInput().appendField(\"Tilt Switch\").appendField(new Blockly.FieldImage(\"./blocks/grove/Tilt1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"When the switch is level it is open, and when tilted, the switch closes.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Tilt_Switch/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_piezo_buzzer={init:function(){this.appendDummyInput().appendField(\"Piezo Buzzer\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_Buzzer.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Emit a tone when the output is high\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Buzzer/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_relay={init:function(){this.appendDummyInput().appendField(\"Relay\").appendField(new Blockly.FieldImage(\"./blocks/grove/Twig-Relay.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Relay/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_temperature_sensor={init:function(){this.appendDummyInput().appendField(\"Temperature Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Temperature1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return number of ambient temperature in â\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Temperature_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_print={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"TEXT1\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line1\"),this.appendValueInput(\"TEXT2\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line2\"),this.appendValueInput(\"DELAY_TIME\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Delay\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"print text on an 16 character by 2 line LCD.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_power={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Power\").appendField(new Blockly.FieldDropdown([[\"ON\",\"ON\"],[\"OFF\",\"OFF\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_effect={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Effect\").appendField(new Blockly.FieldDropdown([[\"Scroll Left\",\"LEFT\"],[\"Scroll Right\",\"RIGHT\"],[\"Scroll Auto\",\"AUTO\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_sound_sensor={init:function(){this.appendDummyInput().appendField(\"Sound Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/sound_sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Detect the sound strength of the environment\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Sound_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_pir_motion_sensor={init:function(){this.appendDummyInput().appendField(\"PIR Motion Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_-_PIR_Motion_Sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"When anyone moves in it's detecting range, the sensor outputs HIGH.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-PIR_Motion_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_line_finder={init:function(){this.appendDummyInput().appendField(\"Line Finder\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grovelinefinder1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Output digital signal so the robot can reliably follow a black line on a white background\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Line_Finder/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_ultrasonic_ranger={init:function(){this.appendDummyInput().appendField(\"Ultrasonic Ranger\").appendField(new Blockly.FieldImage(\"./blocks/grove/Ultrasonic.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"unit\").appendField(new Blockly.FieldDropdown([[\"cm\",\"cm\"],[\"inch\",\"inch\"]]),\"UNIT\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Non-contact distance measurement module\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_motor_shield={init:function(){this.appendDummyInput().appendField(\"Motor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Smotoshield2.jpg\",64,64)).appendField(new Blockly.FieldDropdown([[\"Stop\",\"stop\"],[\"Forward\",\"forward\"],[\"Right\",\"right\"],[\"Left\",\"left\"],[\"Backward\",\"backward\"]]),\"DIRECTION\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Drive two brushed DC motors\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Motor_Shield/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_thumb_joystick={init:function(){this.appendDummyInput().appendField(\"Thumb Joystick\").appendField(new Blockly.FieldImage(\"./blocks/grove/Bgjoy1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\").appendField(\"axis\").appendField(new Blockly.FieldDropdown([[\"x\",\"x\"],[\"y\",\"y\"]]),\"AXIS\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"output two analog values(200~800) representing two directions\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Thumb_Joystick/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led={init:function(){this.appendDummyInput().appendField(\"Chainable RGB LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Chanbalelednb1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\"),this.setMutator(new Blockly.Mutator([\"grove_rgb_led_item\"])),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"256 color LED, currently Chainable feature is not support\"),this.itemCount_=1,this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Chainable_RGB_LED/\"),this.setStyle(\"grove_blocks\")},mutationToDom:function(){var e=document.createElement(\"mutation\");e.setAttribute(\"items\",this.itemCount_);for(var o=0;o<this.itemCount_;o++){var l=this.getFieldValue(\"RGB0\");e.setAttribute(\"RGB\"+o,l)}return e},domToMutation:function(e){for(var o=0;o<this.itemCount_;o++)this.removeInput(\"COLOR\"+o);this.itemCount_=window.parseInt(e.getAttribute(\"items\"),10);for(o=0;o<this.itemCount_;o++){var l=window.parseInt(e.getAttribute(\"RGB\"+o),\"#00ff00\");this.appendDummyInput(\"COLOR\"+o).setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(o+1)).appendField(new Blockly.FieldColour(l),\"RGB\"+o)}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")},decompose:function(e){var o=e.newBlock(\"grove_rgb_led_container\");o.initSvg();for(var l=o.getInput(\"STACK\").connection,n=0;n<this.itemCount_;n++){var t=e.newBlock(\"grove_rgb_led_item\");t.initSvg(),l.connect(t.previousConnection),l=t.nextConnection}return o},compose:function(e){if(0==this.itemCount_)this.removeInput(\"COLOR0\");else for(var o=this.itemCount_-1;o>=0;o--)this.removeInput(\"COLOR\"+o);this.itemCount_=0;for(var l=e.getInputTargetBlock(\"STACK\");l;){var n=this.getFieldValue(\"RGB\"+this.itemCount_);null==n&&(n=\"00ff00\");var t=this.appendDummyInput(\"COLOR\"+this.itemCount_);t.setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(this.itemCount_+1)).appendField(new Blockly.FieldColour(n),\"RGB\"+this.itemCount_),l.valueConnection_&&t.connection.connect(l.valueConnection_),this.itemCount_++,l=l.nextConnection&&l.nextConnection.targetBlock()}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")}},Blockly.Blocks.grove_rgb_led_container={init:function(){this.appendDummyInput().appendField(\"Container\"),this.appendStatementInput(\"STACK\"),this.setTooltip(\"Add, remove items to reconfigure this chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led_item={init:function(){this.appendDummyInput().appendField(\"Item\"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(\"Add an item to the chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_bluetooth_slave={init:function(){this.appendDummyInput().appendField(\"Bluetooth Slave\").appendField(new Blockly.FieldImage(\"http://www.seeedstudio.com/wiki/File:Twigbt00.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Name\").appendField(new Blockly.FieldTextInput(\"blocklyduino\"),\"NAME\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Pincode\").appendField(new Blockly.FieldTextInput(\"0000\"),\"PINCODE\"),this.appendStatementInput(\"RCV\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Receive\"),this.appendStatementInput(\"SNT\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Send\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Bluetooth V2.0+EDR slave. Support single slave per board\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_Bluetooth/\"),this.setStyle(\"grove_blocks\")}}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.servo\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Constants.servo.HUE=\"#334E68\",Blockly.Blocks.servo_move={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_SERVO_DRIVE).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"DEGREE\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.ROBOTOIS_SERVO_LABEL),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"move between 0~180 degree\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setColour(Blockly.Constants.servo.HUE),this.setTooltip(Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP)}},Blockly.Blocks.servo_read_degrees={init:function(){this.appendDummyInput().appendField(\"Servo\").appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Read Degrees\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return that degree with the last servo move.\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setStyle(\"servo_blocks\")}}},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Msg.robotois\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ROBOTOIS_RUN_SETUP=\"Inicializar:\",Blockly.Msg.ROBOTOIS_RUN_LOOP=\"Ejecutar:\",Blockly.Msg.ROBOTOIS_RUN_TIP=\"Define la inicializaciÃ³n de Arduino y el programa a ejecutar.\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT=\"Motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP=\"Velocidad del motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT=\"Motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP=\"Velocidad del motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE=\"Mover motores\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE=\"Mover servo\",Blockly.Msg.ROBOTOIS_SERVO_LABEL=\"Grados (0~180)\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_ULTRASONIC=\"Leer el sensor de distancia usando los pines #\",Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP=\"Usar el sensor de distancia\",Blockly.Msg.ROBOTOIS_LINE_SENSOR=\"Leer el sensor de linea usando el pin #\",Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP=\"Leer el sensor de linea\"},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.require(\"Blockly.Blocks\"),Blockly.Blocks.arduino_program={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_RUN_SETUP),this.appendStatementInput(\"SETUP_FUNC\"),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_RUN_LOOP),this.appendStatementInput(\"LOOP_FUNC\"),this.setInputsInline(!1),this.setColour(\"#3EBD93\"),this.setTooltip(Blockly.Msg.ROBOTOIS_RUN_TIP),this.setHelpUrl(\"https://arduino.cc/en/Reference/Loop\"),this.contextMenu=!1},getArduinoLoopsInstance:function(){return!0}}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.lineSensor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.lineSensor.HUE=\"#8888FC\",Blockly.Blocks.lineSensor_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/lineSensor\"),this.setColour(Blockly.Blocks.lineSensor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_LINE_SENSOR),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"INPUT_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"INPUT_PIN\",\"digitalPins\")}}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.ultrasonic\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.ultrasonic.HUE=\"#8888FC\",Blockly.Blocks.ultrasonic_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/ultrasonic\"),this.setColour(Blockly.Blocks.ultrasonic.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_ULTRASONIC),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"TIGGER_PIN\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"ECHO_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"TIGGER_PIN\",\"digitalPins\"),Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"ECHO_PIN\",\"digitalPins\")}}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.motor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.motor.HUE=\"#334E68\",Blockly.Blocks.motor_right={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/motor\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP)}},Blockly.Blocks.motor_left={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_LEFT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP)}},Blockly.Blocks.motor_drive={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_LEFT\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_RIGHT\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP)}}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino\"),goog.require(\"Blockly.Generator\"),Blockly.Arduino=new Blockly.Generator(\"Arduino\"),Blockly.Arduino.addReservedWords(\"setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts\"),Blockly.Arduino.ORDER_ATOMIC=0,Blockly.Arduino.ORDER_UNARY_POSTFIX=1,Blockly.Arduino.ORDER_UNARY_PREFIX=2,Blockly.Arduino.ORDER_MULTIPLICATIVE=3,Blockly.Arduino.ORDER_ADDITIVE=4,Blockly.Arduino.ORDER_SHIFT=5,Blockly.Arduino.ORDER_RELATIONAL=6,Blockly.Arduino.ORDER_EQUALITY=7,Blockly.Arduino.ORDER_BITWISE_AND=8,Blockly.Arduino.ORDER_BITWISE_XOR=9,Blockly.Arduino.ORDER_BITWISE_OR=10,Blockly.Arduino.ORDER_LOGICAL_AND=11,Blockly.Arduino.ORDER_LOGICAL_OR=12,Blockly.Arduino.ORDER_CONDITIONAL=13,Blockly.Arduino.ORDER_ASSIGNMENT=14,Blockly.Arduino.ORDER_NONE=99,Blockly.Arduino.ORDER_OVERRIDES=[[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_LOGICAL_NOT,Blockly.Arduino.ORDER_LOGICAL_NOT],[Blockly.Arduino.ORDER_MULTIPLICATION,Blockly.Arduino.ORDER_MULTIPLICATION],[Blockly.Arduino.ORDER_ADDITION,Blockly.Arduino.ORDER_ADDITION],[Blockly.Arduino.ORDER_LOGICAL_AND,Blockly.Arduino.ORDER_LOGICAL_AND],[Blockly.Arduino.ORDER_LOGICAL_OR,Blockly.Arduino.ORDER_LOGICAL_OR]],Blockly.Arduino.init=function(e){Blockly.Arduino.definitions_=Object.create(null),Blockly.Arduino.setups_=Object.create(null),Blockly.Arduino.functionNames_=Object.create(null),Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_),Blockly.Arduino.variableDB_.setVariableMap(e.getVariableMap());for(var o=[],l=Blockly.Variables.allDeveloperVariables(e),n=0;n<l.length;n++)o.push(\"int \"+Blockly.Arduino.variableDB_.getName(l[n],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+\";\\n\");var t=Blockly.Variables.allUsedVarModels(e);for(n=0;n<t.length;n++)o.push(Blockly.Arduino.variableDB_.getName(t[n].getId(),Blockly.Variables.NAME_TYPE));Blockly.Arduino.definitions_.variables=o.join(\"\\n\"),o.length&&(Blockly.Arduino.definitions_.variables=\"int \"+o.join(\", \")+\";\\n\")},Blockly.Arduino.finish=function(e){e=\"void loop() \\n{\\n\"+(e=(e=\"  \"+e.replace(/\\n/g,\"\\n  \")).replace(/\\n\\s+$/,\"\\n\"))+\"\\n}\";var o=[],l=[];for(var n in Blockly.Arduino.definitions_){var t=Blockly.Arduino.definitions_[n];t.match(/^#include/)?o.push(t):l.push(t)}var i=[];for(var n in Blockly.Arduino.setups_)i.push(Blockly.Arduino.setups_[n]);return delete Blockly.Arduino.definitions_,delete Blockly.Arduino.functionNames_,Blockly.Arduino.variableDB_.reset(),(o.join(\"\\n\")+\"\\n\\n\"+l.join(\"\\n\")+\"\\nvoid setup() \\n{\\n  \"+i.join(\"\\n  \")+\"\\n}\\n\\n\").replace(/\\n\\n+/g,\"\\n\\n\").replace(/\\n*$/,\"\\n\\n\\n\")+e},Blockly.Arduino.scrubNakedValue=function(e){return e+\";\\n\"},Blockly.Arduino.quote_=function(e){return'\"'+(e=e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\").replace(/\\$/g,\"\\\\$\").replace(/'/g,\"\\\\'\"))+'\"'},Blockly.Arduino.scrub_=function(e,o){if(null===o)return\"\";var l=\"\";if(!e.outputConnection||!e.outputConnection.targetConnection){(t=e.getCommentText())&&(l+=Blockly.Arduino.prefixLines(t,\"// \")+\"\\n\");for(var n=0;n<e.inputList.length;n++)if(e.inputList[n].type==Blockly.INPUT_VALUE){var t,i=e.inputList[n].connection.targetBlock();if(i)(t=Blockly.Arduino.allNestedComments(i))&&(l+=Blockly.Arduino.prefixLines(t,\"// \"))}}var r=e.nextConnection&&e.nextConnection.targetBlock();return l+o+Blockly.Arduino.blockToCode(r)}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.colour\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.colour_picker=function(e){return[\"'\"+e.getFieldValue(\"COLOUR\")+\"'\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.colour_random=function(e){return[Blockly.Arduino.provideFunction_(\"colourRandom\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"() {\",\"  var num = Math.floor(Math.random() * Math.pow(2, 24));\",\"  return '#' + ('00000' + num.toString(16)).substr(-6);\",\"}\"])+\"()\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_rgb=function(e){var o=Blockly.Arduino.valueToCode(e,\"RED\",Blockly.Arduino.ORDER_COMMA)||0,l=Blockly.Arduino.valueToCode(e,\"GREEN\",Blockly.Arduino.ORDER_COMMA)||0,n=Blockly.Arduino.valueToCode(e,\"BLUE\",Blockly.Arduino.ORDER_COMMA)||0;return[Blockly.Arduino.provideFunction_(\"colourRgb\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b) {\",\"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\",\"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\",\"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\",\"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\",\"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\",\"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+o+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_blend=function(e){var o=Blockly.Arduino.valueToCode(e,\"COLOUR1\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",l=Blockly.Arduino.valueToCode(e,\"COLOUR2\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",n=Blockly.Arduino.valueToCode(e,\"RATIO\",Blockly.Arduino.ORDER_COMMA)||.5;return[Blockly.Arduino.provideFunction_(\"colourBlend\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(c1, c2, ratio) {\",\"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\",\"  var r1 = parseInt(c1.substring(1, 3), 16);\",\"  var g1 = parseInt(c1.substring(3, 5), 16);\",\"  var b1 = parseInt(c1.substring(5, 7), 16);\",\"  var r2 = parseInt(c2.substring(1, 3), 16);\",\"  var g2 = parseInt(c2.substring(3, 5), 16);\",\"  var b2 = parseInt(c2.substring(5, 7), 16);\",\"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\",\"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\",\"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\",\"  r = ('0' + (r || 0).toString(16)).slice(-2);\",\"  g = ('0' + (g || 0).toString(16)).slice(-2);\",\"  b = ('0' + (b || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+o+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.lists\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lists_create_empty=function(e){return[\"[]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_create_with=function(e){for(var o=new Array(e.itemCount_),l=0;l<e.itemCount_;l++)o[l]=Blockly.Arduino.valueToCode(e,\"ADD\"+l,Blockly.Arduino.ORDER_COMMA)||\"null\";return[\"[\"+o.join(\", \")+\"]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_repeat=function(e){return[Blockly.Arduino.provideFunction_(\"listsRepeat\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(value, n) {\",\"  var array = [];\",\"  for (var i = 0; i < n; i++) {\",\"    array[i] = value;\",\"  }\",\"  return array;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"ITEM\",Blockly.Arduino.ORDER_COMMA)||\"null\")+\", \"+(Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_length=function(e){return[(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.lists_isEmpty=function(e){return[\"!\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.lists_indexOf=function(e){var o=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",l=Blockly.Arduino.valueToCode(e,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",n=(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".\"+o+\"(\"+l+\")\";return e.workspace.options.oneBasedIndex?[n+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[n,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_getIndex=function(e){var o=e.getFieldValue(\"MODE\")||\"GET\",l=e.getFieldValue(\"WHERE\")||\"FROM_START\",n=\"RANDOM\"==l?Blockly.Arduino.ORDER_COMMA:Blockly.Arduino.ORDER_MEMBER,t=Blockly.Arduino.valueToCode(e,\"VALUE\",n)||\"[]\";switch(l){case\"FIRST\":if(\"GET\"==o)return[r=t+\"[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==o)return[r=t+\".shift()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==o)return t+\".shift();\\n\";break;case\"LAST\":if(\"GET\"==o)return[r=t+\".slice(-1)[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==o)return[r=t+\".pop()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==o)return t+\".pop();\\n\";break;case\"FROM_START\":var i=Blockly.Arduino.getAdjusted(e,\"AT\");if(\"GET\"==o)return[r=t+\"[\"+i+\"]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==o)return[r=t+\".splice(\"+i+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==o)return t+\".splice(\"+i+\", 1);\\n\";break;case\"FROM_END\":var r;i=Blockly.Arduino.getAdjusted(e,\"AT\",1,!0);if(\"GET\"==o)return[r=t+\".slice(\"+i+\")[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"GET_REMOVE\"==o)return[r=t+\".splice(\"+i+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==o)return t+\".splice(\"+i+\", 1);\";break;case\"RANDOM\":if(r=Blockly.Arduino.provideFunction_(\"listsGetRandomItem\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list, remove) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  if (remove) {\",\"    return list.splice(x, 1)[0];\",\"  } else {\",\"    return list[x];\",\"  }\",\"}\"])+\"(\"+t+\", \"+(\"GET\"!=o)+\")\",\"GET\"==o||\"GET_REMOVE\"==o)return[r,Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==o)return r+\";\\n\"}throw\"Unhandled combination (lists_getIndex).\"},Blockly.Arduino.lists_setIndex=function(e){var o=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",l=e.getFieldValue(\"MODE\")||\"GET\",n=e.getFieldValue(\"WHERE\")||\"FROM_START\",t=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"null\";function i(){if(o.match(/^\\w+$/))return\"\";var e=Blockly.Arduino.variableDB_.getDistinctName(\"tmpList\",Blockly.Variables.NAME_TYPE),l=\"var \"+e+\" = \"+o+\";\\n\";return o=e,l}switch(n){case\"FIRST\":if(\"SET\"==l)return o+\"[0] = \"+t+\";\\n\";if(\"INSERT\"==l)return o+\".unshift(\"+t+\");\\n\";break;case\"LAST\":if(\"SET\"==l){var r=i();return r+=o+\"[\"+o+\".length - 1] = \"+t+\";\\n\"}if(\"INSERT\"==l)return o+\".push(\"+t+\");\\n\";break;case\"FROM_START\":var u=Blockly.Arduino.getAdjusted(e,\"AT\");if(\"SET\"==l)return o+\"[\"+u+\"] = \"+t+\";\\n\";if(\"INSERT\"==l)return o+\".splice(\"+u+\", 0, \"+t+\");\\n\";break;case\"FROM_END\":u=Blockly.Arduino.getAdjusted(e,\"AT\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION),r=i();if(\"SET\"==l)return r+=o+\"[\"+o+\".length - \"+u+\"] = \"+t+\";\\n\";if(\"INSERT\"==l)return r+=o+\".splice(\"+o+\".length - \"+u+\", 0, \"+t+\");\\n\";break;case\"RANDOM\":r=i();var d=Blockly.Arduino.variableDB_.getDistinctName(\"tmpX\",Blockly.Variables.NAME_TYPE);if(r+=\"var \"+d+\" = Math.floor(Math.random() * \"+o+\".length);\\n\",\"SET\"==l)return r+=o+\"[\"+d+\"] = \"+t+\";\\n\";if(\"INSERT\"==l)return r+=o+\".splice(\"+d+\", 0, \"+t+\");\\n\"}throw\"Unhandled combination (lists_setIndex).\"},Blockly.Arduino.lists.getIndex_=function(e,o,l){return\"FIRST\"==o?\"0\":\"FROM_END\"==o?e+\".length - 1 - \"+l:\"LAST\"==o?e+\".length - 1\":l},Blockly.Arduino.lists_getSublist=function(e){var o=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",l=e.getFieldValue(\"WHERE1\"),n=e.getFieldValue(\"WHERE2\");if(\"FIRST\"==l&&\"LAST\"==n)var t=o+\".slice(0)\";else if(o.match(/^\\w+$/)||\"FROM_END\"!=l&&\"FROM_START\"==n){switch(l){case\"FROM_START\":var i=Blockly.Arduino.getAdjusted(e,\"AT1\");break;case\"FROM_END\":i=o+\".length - \"+(i=Blockly.Arduino.getAdjusted(e,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":i=\"0\";break;default:throw\"Unhandled option (lists_getSublist).\"}switch(n){case\"FROM_START\":var r=Blockly.Arduino.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":r=o+\".length - \"+(r=Blockly.Arduino.getAdjusted(e,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":r=o+\".length\";break;default:throw\"Unhandled option (lists_getSublist).\"}t=o+\".slice(\"+i+\", \"+r+\")\"}else{i=Blockly.Arduino.getAdjusted(e,\"AT1\"),r=Blockly.Arduino.getAdjusted(e,\"AT2\");var u=Blockly.Arduino.lists.getIndex_,d={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};t=Blockly.Arduino.provideFunction_(\"subsequence\"+d[l]+d[n],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==l||\"FROM_START\"==l?\", at1\":\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", at2\":\"\")+\") {\",\"  var start = \"+u(\"sequence\",l,\"at1\")+\";\",\"  var end = \"+u(\"sequence\",n,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+o+(\"FROM_END\"==l||\"FROM_START\"==l?\", \"+i:\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", \"+r:\"\")+\")\"}return[t,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_sort=function(e){var o=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\",l=\"1\"===e.getFieldValue(\"DIRECTION\")?1:-1,n=e.getFieldValue(\"TYPE\");return[o+\".slice().sort(\"+Blockly.Arduino.provideFunction_(\"listsGetSortCompare\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(type, direction) {\",\"  var compareFuncs = {\",'    \"NUMERIC\": function(a, b) {',\"        return parseFloat(a) - parseFloat(b); },\",'    \"TEXT\": function(a, b) {',\"        return a.toString() > b.toString() ? 1 : -1; },\",'    \"IGNORE_CASE\": function(a, b) {',\"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\",\"  };\",\"  var compare = compareFuncs[type];\",\"  return function(a, b) { return compare(a, b) * direction; }\",\"}\"])+'(\"'+n+'\", '+l+\"))\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_split=function(e){var o=Blockly.Arduino.valueToCode(e,\"INPUT\",Blockly.Arduino.ORDER_MEMBER),l=Blockly.Arduino.valueToCode(e,\"DELIM\",Blockly.Arduino.ORDER_NONE)||\"''\",n=e.getFieldValue(\"MODE\");if(\"SPLIT\"==n){o||(o=\"''\");var t=\"split\"}else{if(\"JOIN\"!=n)throw\"Unknown mode: \"+n;o||(o=\"[]\");t=\"join\"}return[o+\".\"+t+\"(\"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_reverse=function(e){return[(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\")+\".slice().reverse()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.logic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_if=function(e){var o=0,l=\"\";do{l+=(o>0?\" else \":\"\")+\"if (\"+(Blockly.Arduino.valueToCode(e,\"IF\"+o,Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\"+Blockly.Arduino.statementToCode(e,\"DO\"+o)+\"}\",++o}while(e.getInput(\"IF\"+o));return e.getInput(\"ELSE\")&&(l+=\" else {\\n\"+Blockly.Arduino.statementToCode(e,\"ELSE\")+\"}\"),l+\"\\n\"},Blockly.Arduino.controls_ifelse=Blockly.Arduino.controls_if,Blockly.Arduino.logic_compare=function(e){var o={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[e.getFieldValue(\"OP\")],l=\"==\"==o||\"!=\"==o?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL;return[(Blockly.Arduino.valueToCode(e,\"A\",l)||\"0\")+\" \"+o+\" \"+(Blockly.Arduino.valueToCode(e,\"B\",l)||\"0\"),l]},Blockly.Arduino.logic_operation=function(e){var o=\"AND\"==e.getFieldValue(\"OP\")?\"&&\":\"||\",l=\"&&\"==o?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,n=Blockly.Arduino.valueToCode(e,\"A\",l),t=Blockly.Arduino.valueToCode(e,\"B\",l);if(n||t){var i=\"&&\"==o?\"true\":\"false\";n||(n=i),t||(t=i)}else n=\"false\",t=\"false\";return[n+\" \"+o+\" \"+t,l]},Blockly.Arduino.logic_negate=function(e){var o=Blockly.Arduino.ORDER_LOGICAL_NOT;return[\"!\"+(Blockly.Arduino.valueToCode(e,\"BOOL\",o)||\"true\"),o]},Blockly.Arduino.logic_boolean=function(e){return[\"TRUE\"==e.getFieldValue(\"BOOL\")?\"true\":\"false\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_null=function(e){return[\"null\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_ternary=function(e){return[(Blockly.Arduino.valueToCode(e,\"IF\",Blockly.Arduino.ORDER_CONDITIONAL)||\"false\")+\" ? \"+(Blockly.Arduino.valueToCode(e,\"THEN\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\")+\" : \"+(Blockly.Arduino.valueToCode(e,\"ELSE\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\"),Blockly.Arduino.ORDER_CONDITIONAL]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.loops\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_repeat_ext=function(e){if(e.getField(\"TIMES\"))var o=String(Number(e.getFieldValue(\"TIMES\")));else o=Blockly.Arduino.valueToCode(e,\"TIMES\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";var l=Blockly.Arduino.statementToCode(e,\"DO\");l=Blockly.Arduino.addLoopTrap(l,e.id);var n=\"\",t=Blockly.Arduino.variableDB_.getDistinctName(\"count\",Blockly.Variables.NAME_TYPE),i=o;o.match(/^\\w+$/)||Blockly.isNumber(o)||(n+=\"int \"+(i=Blockly.Arduino.variableDB_.getDistinctName(\"repeat_end\",Blockly.Variables.NAME_TYPE))+\" = \"+o+\";\\n\");return n+=\"for (int \"+t+\" = 0; \"+t+\" < \"+i+\"; \"+t+\"++) {\\n\"+l+\"}\\n\"},Blockly.Arduino.controls_repeat=Blockly.Arduino.controls_repeat_ext,Blockly.Arduino.controls_whileUntil=function(e){var o=\"UNTIL\"==e.getFieldValue(\"MODE\"),l=Blockly.Arduino.valueToCode(e,\"BOOL\",o?Blockly.Arduino.ORDER_LOGICAL_NOT:Blockly.Arduino.ORDER_NONE)||\"false\",n=Blockly.Arduino.statementToCode(e,\"DO\");return o&&(l=\"!\"+l),\"while (\"+l+\") {\\n\"+(n=Blockly.Arduino.addLoopTrap(n,e.id))+\"}\\n\"},Blockly.Arduino.controls_for=function(e){var o,l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),n=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",t=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",i=Blockly.Arduino.valueToCode(e,\"BY\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"1\",r=Blockly.Arduino.statementToCode(e,\"DO\");if(r=Blockly.Arduino.addLoopTrap(r,e.id),Blockly.isNumber(n)&&Blockly.isNumber(t)&&Blockly.isNumber(i)){var u=parseFloat(n)<=parseFloat(t);o=\"for (\"+l+\" = \"+n+\"; \"+l+(u?\" <= \":\" >= \")+t+\"; \"+l;var d=Math.abs(parseFloat(i));o+=1==d?u?\"++\":\"--\":(u?\" += \":\" -= \")+d,o+=\") {\\n\"+r+\"}\\n\"}else{o=\"\";var a=n;n.match(/^\\w+$/)||Blockly.isNumber(n)||(o+=\"var \"+(a=Blockly.Arduino.variableDB_.getDistinctName(l+\"_start\",Blockly.Variables.NAME_TYPE))+\" = \"+n+\";\\n\");var c=t;if(!t.match(/^\\w+$/)&&!Blockly.isNumber(t))o+=\"var \"+(c=Blockly.Arduino.variableDB_.getDistinctName(l+\"_end\",Blockly.Variables.NAME_TYPE))+\" = \"+t+\";\\n\";var s=Blockly.Arduino.variableDB_.getDistinctName(l+\"_inc\",Blockly.Variables.NAME_TYPE);o+=\"var \"+s+\" = \",Blockly.isNumber(i)?o+=Math.abs(i)+\";\\n\":o+=\"Math.abs(\"+i+\");\\n\",o+=\"if (\"+a+\" > \"+c+\") {\\n\",o+=Blockly.Arduino.INDENT+s+\" = -\"+s+\";\\n\",o+=\"}\\n\",o+=\"for (\"+l+\" = \"+a+\"; \"+s+\" >= 0 ? \"+l+\" <= \"+c+\" : \"+l+\" >= \"+c+\"; \"+l+\" += \"+s+\") {\\n\"+r+\"}\\n\"}return o},Blockly.Arduino.controls_forEach=function(e){var o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),l=Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"[]\",n=Blockly.Arduino.statementToCode(e,\"DO\");n=Blockly.Arduino.addLoopTrap(n,e.id);var t=\"\",i=l;l.match(/^\\w+$/)||(t+=\"var \"+(i=Blockly.Arduino.variableDB_.getDistinctName(o+\"_list\",Blockly.Variables.NAME_TYPE))+\" = \"+l+\";\\n\");var r=Blockly.Arduino.variableDB_.getDistinctName(o+\"_index\",Blockly.Variables.NAME_TYPE);return t+=\"for (var \"+r+\" in \"+i+\") {\\n\"+(n=Blockly.Arduino.INDENT+o+\" = \"+i+\"[\"+r+\"];\\n\"+n)+\"}\\n\"},Blockly.Arduino.controls_flow_statements=function(e){switch(e.getFieldValue(\"FLOW\")){case\"BREAK\":return\"break;\\n\";case\"CONTINUE\":return\"continue;\\n\"}throw\"Unknown flow statement.\"}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.math\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.math_number=function(e){var o=parseFloat(e.getFieldValue(\"NUM\"));return[o,o>=0?Blockly.Arduino.ORDER_ATOMIC:Blockly.Arduino.ORDER_UNARY_NEGATION]},Blockly.Arduino.math_arithmetic=function(e){var o={ADD:[\" + \",Blockly.Arduino.ORDER_ADDITION],MINUS:[\" - \",Blockly.Arduino.ORDER_SUBTRACTION],MULTIPLY:[\" * \",Blockly.Arduino.ORDER_MULTIPLICATION],DIVIDE:[\" / \",Blockly.Arduino.ORDER_DIVISION],POWER:[null,Blockly.Arduino.ORDER_COMMA]}[e.getFieldValue(\"OP\")],l=o[0],n=o[1],t=Blockly.Arduino.valueToCode(e,\"A\",n)||\"0\",i=Blockly.Arduino.valueToCode(e,\"B\",n)||\"0\";return l?[t+l+i,n]:[\"Math.pow(\"+t+\", \"+i+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_single=function(e){var o,l,n=e.getFieldValue(\"OP\");if(\"NEG\"==n)return\"-\"==(l=Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_UNARY_NEGATION)||\"0\")[0]&&(l=\" \"+l),[o=\"-\"+l,Blockly.Arduino.ORDER_UNARY_NEGATION];switch(l=\"SIN\"==n||\"COS\"==n||\"TAN\"==n?Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_DIVISION)||\"0\":Blockly.Arduino.valueToCode(e,\"NUM\",Blockly.Arduino.ORDER_NONE)||\"0\",n){case\"ABS\":o=\"Math.abs(\"+l+\")\";break;case\"ROOT\":o=\"Math.sqrt(\"+l+\")\";break;case\"LN\":o=\"Math.log(\"+l+\")\";break;case\"EXP\":o=\"Math.exp(\"+l+\")\";break;case\"POW10\":o=\"Math.pow(10,\"+l+\")\";break;case\"ROUND\":o=\"Math.round(\"+l+\")\";break;case\"ROUNDUP\":o=\"Math.ceil(\"+l+\")\";break;case\"ROUNDDOWN\":o=\"Math.floor(\"+l+\")\";break;case\"SIN\":o=\"Math.sin(\"+l+\" / 180 * Math.PI)\";break;case\"COS\":o=\"Math.cos(\"+l+\" / 180 * Math.PI)\";break;case\"TAN\":o=\"Math.tan(\"+l+\" / 180 * Math.PI)\"}if(o)return[o,Blockly.Arduino.ORDER_FUNCTION_CALL];switch(n){case\"LOG10\":o=\"Math.log(\"+l+\") / Math.log(10)\";break;case\"ASIN\":o=\"Math.asin(\"+l+\") / Math.PI * 180\";break;case\"ACOS\":o=\"Math.acos(\"+l+\") / Math.PI * 180\";break;case\"ATAN\":o=\"Math.atan(\"+l+\") / Math.PI * 180\";break;default:throw\"Unknown math operator: \"+n}return[o,Blockly.Arduino.ORDER_DIVISION]},Blockly.Arduino.math_constant=function(e){return{PI:[\"Math.PI\",Blockly.Arduino.ORDER_MEMBER],E:[\"Math.E\",Blockly.Arduino.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + Math.sqrt(5)) / 2\",Blockly.Arduino.ORDER_DIVISION],SQRT2:[\"Math.SQRT2\",Blockly.Arduino.ORDER_MEMBER],SQRT1_2:[\"Math.SQRT1_2\",Blockly.Arduino.ORDER_MEMBER],INFINITY:[\"Infinity\",Blockly.Arduino.ORDER_ATOMIC]}[e.getFieldValue(\"CONSTANT\")]},Blockly.Arduino.math_number_property=function(e){var o,l=Blockly.Arduino.valueToCode(e,\"NUMBER_TO_CHECK\",Blockly.Arduino.ORDER_MODULUS)||\"0\",n=e.getFieldValue(\"PROPERTY\");if(\"PRIME\"==n)return[o=Blockly.Arduino.provideFunction_(\"mathIsPrime\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(n) {\",\"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\"  if (n == 2 || n == 3) {\",\"    return true;\",\"  }\",\"  // False if n is NaN, negative, is 1, or not whole.\",\"  // And false if n is divisible by 2 or 3.\",\"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\",\"    return false;\",\"  }\",\"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\",\"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\",\"      return false;\",\"    }\",\"  }\",\"  return true;\",\"}\"])+\"(\"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];switch(n){case\"EVEN\":o=l+\" % 2 == 0\";break;case\"ODD\":o=l+\" % 2 == 1\";break;case\"WHOLE\":o=l+\" % 1 == 0\";break;case\"POSITIVE\":o=l+\" > 0\";break;case\"NEGATIVE\":o=l+\" < 0\";break;case\"DIVISIBLE_BY\":o=l+\" % \"+(Blockly.Arduino.valueToCode(e,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" == 0\"}return[o,Blockly.Arduino.ORDER_EQUALITY]},Blockly.Arduino.math_change=function(e){var o=Blockly.Arduino.valueToCode(e,\"DELTA\",Blockly.Arduino.ORDER_ADDITION)||\"0\",l=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return l+\" = (typeof \"+l+\" == 'number' ? \"+l+\" : 0) + \"+o+\";\\n\"},Blockly.Arduino.math_round=Blockly.Arduino.math_single,Blockly.Arduino.math_trig=Blockly.Arduino.math_single,Blockly.Arduino.math_on_list=function(e){var o,l=e.getFieldValue(\"OP\");switch(l){case\"SUM\":o=(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".reduce(function(x, y) {return x + y;})\";break;case\"MIN\":o=\"Math.min.apply(null, \"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"MAX\":o=\"Math.max.apply(null, \"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"AVERAGE\":o=Blockly.Arduino.provideFunction_(\"mathMean\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MEDIAN\":o=Blockly.Arduino.provideFunction_(\"mathMedian\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  var localList = myList.filter(function (x) {return typeof x == 'number';});\",\"  if (!localList.length) return null;\",\"  localList.sort(function(a, b) {return b - a;});\",\"  if (localList.length % 2 == 0) {\",\"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\",\"  } else {\",\"    return localList[(localList.length - 1) / 2];\",\"  }\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MODE\":o=Blockly.Arduino.provideFunction_(\"mathModes\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(values) {\",\"  var modes = [];\",\"  var counts = [];\",\"  var maxCount = 0;\",\"  for (var i = 0; i < values.length; i++) {\",\"    var value = values[i];\",\"    var found = false;\",\"    var thisCount;\",\"    for (var j = 0; j < counts.length; j++) {\",\"      if (counts[j][0] === value) {\",\"        thisCount = ++counts[j][1];\",\"        found = true;\",\"        break;\",\"      }\",\"    }\",\"    if (!found) {\",\"      counts.push([value, 1]);\",\"      thisCount = 1;\",\"    }\",\"    maxCount = Math.max(thisCount, maxCount);\",\"  }\",\"  for (var j = 0; j < counts.length; j++) {\",\"    if (counts[j][1] == maxCount) {\",\"        modes.push(counts[j][0]);\",\"    }\",\"  }\",\"  return modes;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"STD_DEV\":o=Blockly.Arduino.provideFunction_(\"mathStandardDeviation\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(numbers) {\",\"  var n = numbers.length;\",\"  if (!n) return null;\",\"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\",\"  var variance = 0;\",\"  for (var j = 0; j < n; j++) {\",\"    variance += Math.pow(numbers[j] - mean, 2);\",\"  }\",\"  variance = variance / n;\",\"  return Math.sqrt(variance);\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"RANDOM\":o=Blockly.Arduino.provideFunction_(\"mathRandomList\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  return list[x];\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(e,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;default:throw\"Unknown operator: \"+l}return[o,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_modulo=function(e){return[(Blockly.Arduino.valueToCode(e,\"DIVIDEND\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" % \"+(Blockly.Arduino.valueToCode(e,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\"),Blockly.Arduino.ORDER_MODULUS]},Blockly.Arduino.math_constrain=function(e){return[\"Math.min(Math.max(\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\", \"+(Blockly.Arduino.valueToCode(e,\"LOW\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\"), \"+(Blockly.Arduino.valueToCode(e,\"HIGH\",Blockly.Arduino.ORDER_COMMA)||\"Infinity\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_int=function(e){var o=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_COMMA)||\"0\",l=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_COMMA)||\"0\";return[Blockly.Arduino.provideFunction_(\"mathRandomInt\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(a, b) {\",\"  if (a > b) {\",\"    // Swap a and b to ensure a is smaller.\",\"    var c = a;\",\"    a = b;\",\"    b = c;\",\"  }\",\"  return Math.floor(Math.random() * (b - a + 1) + a);\",\"}\"])+\"(\"+o+\", \"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_float=function(e){return[\"Math.random()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.procedures\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.procedures_defreturn=function(e){var o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=Blockly.Arduino.statementToCode(e,\"STACK\");if(Blockly.Arduino.STATEMENT_PREFIX){var n=e.id.replace(/\\$/g,\"$$$$\");l=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,\"'\"+n+\"'\"),Blockly.Arduino.INDENT)+l}Blockly.Arduino.INFINITE_LOOP_TRAP&&(l=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,\"'\"+e.id+\"'\")+l);var t=Blockly.Arduino.valueToCode(e,\"RETURN\",Blockly.Arduino.ORDER_NONE)||\"\";t&&(t=Blockly.Arduino.INDENT+\"return \"+t+\";\\n\");for(var i=t?\"int\":\"void\",r=[],u=0;u<e.arguments_.length;u++)r[u]=\"int \"+Blockly.Arduino.variableDB_.getName(e.arguments_[u],Blockly.Variables.NAME_TYPE);var d=i+\" \"+o+\"(\"+r.join(\", \")+\") {\\n\"+l+t+\"}\\n\";return d=Blockly.Arduino.scrub_(e,d),Blockly.Arduino.definitions_[\"%\"+o]=d,null},Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn,Blockly.Arduino.procedures_callreturn=function(e){for(var o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=[],n=0;n<e.arguments_.length;n++)l[n]=Blockly.Arduino.valueToCode(e,\"ARG\"+n,Blockly.Arduino.ORDER_COMMA)||\"null\";return[o+\"(\"+l.join(\", \")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.procedures_callnoreturn=function(e){for(var o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=[],n=0;n<e.arguments_.length;n++)l[n]=Blockly.Arduino.valueToCode(e,\"ARG\"+n,Blockly.Arduino.ORDER_COMMA)||\"null\";return o+\"(\"+l.join(\", \")+\");\\n\"},Blockly.Arduino.procedures_ifreturn=function(e){var o=\"if (\"+(Blockly.Arduino.valueToCode(e,\"CONDITION\",Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\";if(e.hasReturnValue_){var l=Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_NONE)||\"null\";o+=Blockly.Arduino.INDENT+\"return \"+l+\";\\n\"}else o+=Blockly.Arduino.INDENT+\"return;\\n\";return o+=\"}\\n\"}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.texts\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.text=function(e){return[Blockly.Arduino.quote_(e.getFieldValue(\"TEXT\")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.text_join=function(e){switch(e.itemCount_){case 0:return[\"''\",Blockly.Arduino.ORDER_ATOMIC];case 1:return[\"String(\"+(Blockly.Arduino.valueToCode(e,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case 2:return[\"String(\"+(Blockly.Arduino.valueToCode(e,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\") + String(\"+(Blockly.Arduino.valueToCode(e,\"ADD1\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_ADDITION];default:for(var o=new Array(e.itemCount_),l=0;l<e.itemCount_;l++)o[l]=Blockly.Arduino.valueToCode(e,\"ADD\"+l,Blockly.Arduino.ORDER_COMMA)||\"''\";return[\"[\"+o.join(\",\")+\"].join('')\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},Blockly.Arduino.text_append=function(e){var o=Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return o+\" = String(\"+o+\") + String(\"+(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_length=function(e){return[(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_isEmpty=function(e){return[\"!\"+(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.text_indexOf=function(e){var o=\"FIRST\"==e.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",l=Blockly.Arduino.valueToCode(e,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",n=(Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".\"+o+\"(\"+l+\")\";return e.workspace.options.oneBasedIndex?[n+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[n,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_charAt=function(e){var o=e.getFieldValue(\"WHERE\")||\"FROM_START\",l=\"RANDOM\"==o?Blockly.Arduino.ORDER_NONE:Blockly.Arduino.ORDER_MEMBER,n=Blockly.Arduino.valueToCode(e,\"VALUE\",l)||\"''\";switch(o){case\"FIRST\":return[n+\".charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"LAST\":return[n+\".slice(-1)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_START\":return[n+\".charAt(\"+Blockly.Arduino.getAdjusted(e,\"AT\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_END\":return[n+\".slice(\"+Blockly.Arduino.getAdjusted(e,\"AT\",1,!0)+\").charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"RANDOM\":return[Blockly.Arduino.provideFunction_(\"textRandomLetter\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(text) {\",\"  var x = Math.floor(Math.random() * text.length);\",\"  return text[x];\",\"}\"])+\"(\"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}throw\"Unhandled option (text_charAt).\"},Blockly.Arduino.text.getIndex_=function(e,o,l){return\"FIRST\"==o?\"0\":\"FROM_END\"==o?e+\".length - 1 - \"+l:\"LAST\"==o?e+\".length - 1\":l},Blockly.Arduino.text_getSubstring=function(e){var o=Blockly.Arduino.valueToCode(e,\"STRING\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\",l=e.getFieldValue(\"WHERE1\"),n=e.getFieldValue(\"WHERE2\");if(\"FIRST\"==l&&\"LAST\"==n)var t=o;else if(o.match(/^'?\\w+'?$/)||\"FROM_END\"!=l&&\"LAST\"!=l&&\"FROM_END\"!=n&&\"LAST\"!=n){switch(l){case\"FROM_START\":var i=Blockly.Arduino.getAdjusted(e,\"AT1\");break;case\"FROM_END\":i=o+\".length - \"+(i=Blockly.Arduino.getAdjusted(e,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":i=\"0\";break;default:throw\"Unhandled option (text_getSubstring).\"}switch(n){case\"FROM_START\":var r=Blockly.Arduino.getAdjusted(e,\"AT2\",1);break;case\"FROM_END\":r=o+\".length - \"+(r=Blockly.Arduino.getAdjusted(e,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":r=o+\".length\";break;default:throw\"Unhandled option (text_getSubstring).\"}t=o+\".slice(\"+i+\", \"+r+\")\"}else{i=Blockly.Arduino.getAdjusted(e,\"AT1\"),r=Blockly.Arduino.getAdjusted(e,\"AT2\");var u=Blockly.Arduino.text.getIndex_,d={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};t=Blockly.Arduino.provideFunction_(\"subsequence\"+d[l]+d[n],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==l||\"FROM_START\"==l?\", at1\":\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", at2\":\"\")+\") {\",\"  var start = \"+u(\"sequence\",l,\"at1\")+\";\",\"  var end = \"+u(\"sequence\",n,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+o+(\"FROM_END\"==l||\"FROM_START\"==l?\", \"+i:\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", \"+r:\"\")+\")\"}return[t,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_changeCase=function(e){var o={UPPERCASE:\".toUpperCase()\",LOWERCASE:\".toLowerCase()\",TITLECASE:null}[e.getFieldValue(\"CASE\")],l=o?Blockly.Arduino.ORDER_MEMBER:Blockly.Arduino.ORDER_NONE,n=Blockly.Arduino.valueToCode(e,\"TEXT\",l)||\"''\";if(o)var t=n+o;else t=Blockly.Arduino.provideFunction_(\"textToTitleCase\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(str) {\",\"  return str.replace(/\\\\S+/g,\",\"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\",\"}\"])+\"(\"+n+\")\";return[t,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_trim=function(e){var o={LEFT:\".replace(/^[\\\\s\\\\xa0]+/, '')\",RIGHT:\".replace(/[\\\\s\\\\xa0]+$/, '')\",BOTH:\".trim()\"}[e.getFieldValue(\"MODE\")];return[(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+o,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_print=function(e){return\"window.alert(\"+(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_prompt_ext=function(e){if(e.getField(\"TEXT\"))var o=Blockly.Arduino.quote_(e.getFieldValue(\"TEXT\"));else o=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\";var l=\"window.prompt(\"+o+\")\";return\"NUMBER\"==e.getFieldValue(\"TYPE\")&&(l=\"parseFloat(\"+l+\")\"),[l,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_prompt=Blockly.Arduino.text_prompt_ext,Blockly.Arduino.text_count=function(e){var o=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",l=Blockly.Arduino.valueToCode(e,\"SUB\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textCount\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle) {\",\"  if (needle.length === 0) {\",\"    return haystack.length + 1;\",\"  } else {\",\"    return haystack.split(needle).length - 1;\",\"  }\",\"}\"])+\"(\"+o+\", \"+l+\")\",Blockly.Arduino.ORDER_SUBTRACTION]},Blockly.Arduino.text_replace=function(e){var o=Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",l=Blockly.Arduino.valueToCode(e,\"FROM\",Blockly.Arduino.ORDER_NONE)||\"''\",n=Blockly.Arduino.valueToCode(e,\"TO\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textReplace\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle, replacement) {\",'  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")','                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\"  return haystack.replace(new RegExp(needle, 'g'), replacement);\",\"}\"])+\"(\"+o+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_reverse=function(e){return[(Blockly.Arduino.valueToCode(e,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".split('').reverse().join('')\",Blockly.Arduino.ORDER_MEMBER]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variables\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.variables_get=function(e){return[Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.variables_set=function(e){var o=Blockly.Arduino.valueToCode(e,\"VALUE\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";return Blockly.Arduino.variableDB_.getName(e.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE)+\" = \"+o+\";\\n\"}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2018 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variablesDynamic\"),goog.require(\"Blockly.Arduino\"),goog.require(\"Blockly.Arduino.variables\"),Blockly.Arduino.variables_get_dynamic=Blockly.Arduino.variables_get,Blockly.Arduino.variables_set_dynamic=Blockly.Arduino.variables_set},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Arduino.arduino_base\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_base_inout_buildin_led=function(e){var o=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_.setup_output_13=\"pinMode(13, OUTPUT);\",\"digitalWrite(13, \"+o+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_write=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_output_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"digitalWrite(\"+o+\", \"+l+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_read=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+o]=\"pinMode(\"+o+\", INPUT);\",[\"digitalRead(\"+o+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_highlow=function(e){return[\"HIGH\"==e.getFieldValue(\"BOOL\")?\"HIGH\":\"LOW\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_analog_write=function(e){return\"analogWrite(\"+e.getFieldValue(\"PIN\")+\", \"+Blockly.Arduino.valueToCode(this,\"PWM\",Blockly.Arduino.ORDER_ATOMIC)+\");\\n\"},Blockly.Arduino.arduino_base_inout_analog_read=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_delay=function(e){return\"delay(\"+(Blockly.Arduino.valueToCode(this,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\")+\");\\n\"},Blockly.Arduino.arduino_base_angle=function(e){return[this.getFieldValue(\"ANGLE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_date=function(e){return[this.getFieldValue(\"DATE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_map=function(e){return[\"map(\"+Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_NONE)+\", 0, 1024, 0, \"+Blockly.Arduino.valueToCode(this,\"DMAX\",Blockly.Arduino.ORDER_ATOMIC)+\")\",Blockly.Arduino.ORDER_NONE]},Blockly.Arduino.arduino_base_inout_tone=function(e){var o=e.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_[\"setup_output\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"tone(\"+o+\", \"+l+\");\\n\"},Blockly.Arduino.arduino_base_inout_notone=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_output\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"noTone(\"+o+\");\\n\"},Blockly.Arduino.arduino_base_serial_print=function(e){var o=Blockly.Arduino.valueToCode(this,\"CONTENT\",Blockly.Arduino.ORDER_ATOMIC)||\"0\";return Blockly.Arduino.setups_[\"setup_serial_\"+profile.default.serial]=\"Serial.begin(9600);\\n\",\"Serial.println(\"+o+\");\\n\"}},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Arduino.grove\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.grove_led=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_green_led_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"digitalWrite(\"+o+\",\"+l+\");\\n\"},Blockly.Arduino.grove_button=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_button_\"+o]=\"pinMode(\"+o+\", INPUT);\",[\"digitalRead(\"+o+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rotary_angle=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_tilt_switch=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_tilt_switch_\"+o]=\"pinMode(\"+o+\", INPUT);\",[\"digitalRead(\"+o+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_piezo_buzzer=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_piezo_buzzer_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"digitalWrite(\"+o+\",\"+l+\");\\n\"},Blockly.Arduino.grove_relay=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_relay_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",\"digitalWrite(\"+o+\",\"+l+\");\\n\"},Blockly.Arduino.grove_temperature_sensor=function(e){var o=e.getFieldValue(\"PIN\");return[\"round((1/(log((float)(1023-analogRead(\"+o+\"))*10000/analogRead(\"+o+\"))/10000)/3975+1/298.15)-273.15)\",Blockly.Arduino.ORDER_ATOMIC]};var n=function(e){var o=e;o=parseInt(o)?parseInt(e)+1:\"A\"+(parseInt(o.slice(1,o.length))+1);for(var l=profile.default.dropdownDigital.length,n=!0,t=0;t<l;t++)profile.default.dropdownDigital[t][1]==o&&(n=!1);return n?(alert(\"Grove Sensor needs PIN#+1 port, current setting is out of bound.\"),null):o};function t(e){return parseInt(r(e).substring(2,4),16)}function i(e){return parseInt(r(e).substring(4,6),16)}function r(e){return\"#\"==e.charAt(0)?e.substring(1,7):e}Blockly.Arduino.grove_serial_lcd_print=function(e){var o=e.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(e,\"TEXT1\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",t=Blockly.Arduino.valueToCode(e,\"TEXT2\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",i=Blockly.Arduino.valueToCode(e,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\";Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var r=n(o);Blockly.Arduino.definitions_[\"var_lcd_\"+o]=\"SerialLCD slcd_\"+o+\"(\"+o+\",\"+r+\");\\n\",Blockly.Arduino.setups_[\"setup_lcd_\"+o]=\"slcd_\"+o+\".begin();\\n\";var u=\"slcd_\"+o+\".backlight();\\n\";return u+=\"slcd_\"+o+\".setCursor(0,0);\\n\",u+=\"slcd_\"+o+\".print(\"+l+\");\\n\",u+=\"slcd_\"+o+\".setCursor(0,1);\\n\",u+=\"slcd_\"+o+\".print(\"+t+\");\\n\",u+=\"delay(\"+i+\");\\n\"},Blockly.Arduino.grove_serial_lcd_power=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var t=n(o);Blockly.Arduino.definitions_[\"var_lcd\"+o]=\"SerialLCD slcd_\"+o+\"(\"+o+\",\"+t+\");\\n\";var i=\"slcd_\"+o;return i+=\"ON\"===l?\".Power();\\n\":\".noPower();\\n\"},Blockly.Arduino.grove_serial_lcd_effect=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var t=n(o);Blockly.Arduino.definitions_[\"var_lcd\"+o]=\"SerialLCD slcd_\"+o+\"(\"+o+\",\"+t+\");\\n\";var i=\"slcd_\"+o;return i+=\"LEFT\"===l?\".scrollDisplayLeft();\\n\":\"RIGHT\"===l?\".scrollDisplayRight();\\n\":\".autoscroll();\\n\"},Blockly.Arduino.grove_sound_sensor=function(e){return[\"analogRead(\"+e.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_pir_motion_sensor=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+o]=\"pinMode(\"+o+\", INPUT);\",[\"digitalRead(\"+o+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_line_finder=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+o]=\"pinMode(\"+o+\", INPUT);\",[\"digitalRead(\"+o+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_ultrasonic_ranger=function(e){var o=e.getFieldValue(\"PIN\"),l=e.getFieldValue(\"UNIT\");return Blockly.Arduino.definitions_.define_ultrasonic=\"#include <Ultrasonic.h>\\n\",Blockly.Arduino.definitions_[\"var_ultrasonic\"+o]=\"Ultrasonic ultrasonic_\"+o+\"(\"+o+\");\",[\"cm\"===l?\"ultrasonic_\"+o+\".MeasureInCentimeters()\":\"ultrasonic_\"+o+\".MeasureInInches()\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_motor_shield=function(e){var o=e.getFieldValue(\"DIRECTION\");Blockly.Arduino.setups_.setup_motor=\"pinMode(8,OUTPUT);//I1\\n  pinMode(11,OUTPUT);//I2\\n  pinMode(9,OUTPUT);//speedPinA\\n  pinMode(12,OUTPUT);//I3\\n  pinMode(13,OUTPUT);//i4\\n  pinMode(10,OUTPUT);//speedPinB\\n\";var l=\"\";return\"forward\"===o?(Blockly.Arduino.definitions_.define_forward=\"void forward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\",l=\"forward();\\n\"):\"right\"===o?(Blockly.Arduino.definitions_.define_right=\"void right()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\\n\",l=\"right();\\n\"):\"left\"===o?(Blockly.Arduino.definitions_.define_left=\"void left()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",l=\"left();\\n\"):\"backward\"===o?(Blockly.Arduino.definitions_.define_backward=\"void backward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",l=\"backward();\\n\"):\"stop\"===o&&(Blockly.Arduino.definitions_.define_stop=\"void stop()\\n{\\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. block should be done to avid damaging the motor.\\ndigitalWrite(10,LOW);\\ndelay(1000);\\n}\\n\\n\",l=\"stop();\\n\"),l},Blockly.Arduino.grove_thumb_joystick=function(e){var o=e.getFieldValue(\"PIN\");return[\"analogRead(\"+(\"y\"===e.getFieldValue(\"AXIS\")?n(o):o)+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rgb_led=function(e){var o=e.getFieldValue(\"PIN\"),l=n(o);Blockly.Arduino.setups_[\"setup_input_\"+o]=\"pinMode(\"+o+\", OUTPUT);\",Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",Blockly.Arduino.definitions_.define_uint8=\"#define uint8 unsigned char\",Blockly.Arduino.definitions_.define_uint16=\"#define uint16 unsigned int\",Blockly.Arduino.definitions_.define_uint32=\"#define uint32 unsigned long int\",Blockly.Arduino.definitions_[\"define_clkproduce_\"+o]=\"void ClkProduce_\"+o+\"(void)\\n{\\n  digitalWrite(\"+o+\", LOW);\\n  delayMicroseconds(20);\\n  digitalWrite(\"+o+\", HIGH);\\n  delayMicroseconds(20);\\n}\\n\",Blockly.Arduino.definitions_[\"define_send32zero_\"+o]=\"void Send32Zero_\"+o+\"(void)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    digitalWrite(\"+l+\", LOW);\\n    ClkProduce_\"+o+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_.define_taskanticode=\"uint8 TakeAntiCode(uint8 dat)\\n{\\n  uint8 tmp = 0;\\n  if ((dat & 0x80) == 0)\\n  {\\n    tmp |= 0x02;\\n  }\\n  \\n  if ((dat & 0x40) == 0)\\n  {\\n    tmp |= 0x01;\\n  }\\n  return tmp;\\n}\\n\",Blockly.Arduino.definitions_[\"define_datasend_\"+o]=\"// gray data\\nvoid DatSend_\"+o+\"(uint32 dx)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    if ((dx & 0x80000000) != 0)\\n    {\\n      digitalWrite(\"+l+\", HIGH);\\n    }\\n    else\\n    {\\n      digitalWrite(\"+l+\", LOW);\\n    }\\n  dx <<= 1;\\n  ClkProduce_\"+o+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_[\"define_datadealwithsend_\"+o]=\"// data processing\\nvoid DataDealWithAndSend_\"+o+\"(uint8 r, uint8 g, uint8 b)\\n{\\n  uint32 dx = 0;\\n  dx |= (uint32)0x03 << 30;             // highest two bits 1ï¼flag bits\\n  dx |= (uint32)TakeAntiCode(b) << 28;\\n  dx |= (uint32)TakeAntiCode(g) << 26;\\n  dx |= (uint32)TakeAntiCode(r) << 24;\\n\\n  dx |= (uint32)b << 16;\\n  dx |= (uint32)g << 8;\\n  dx |= r;\\n\\n  DatSend_\"+o+\"(dx);\\n}\\n\";var u=\"Send32Zero_\"+o+\"(); // begin\\n\";if(0==e.itemCount_)return\"\";for(var d=0;d<e.itemCount_;d++){var a=e.getFieldValue(\"RGB\"+d);u+=\"DataDealWithAndSend_\"+o+\"(\"+parseInt(r(a).substring(0,2),16)+\", \"+t(a)+\", \"+i(a)+\"); // first node data\\n\"}return u+=\"Send32Zero_\"+o+\"();  // send to update data\\n\"},Blockly.Arduino.grove_bluetooth_slave=function(e){var o=e.getFieldValue(\"PIN\"),l=n(o),t=e.getFieldValue(\"NAME\"),i=(e.getFieldValue(\"PINCODE\"),Blockly.Arduino.statementToCode(e,\"RCV\")),r=Blockly.Arduino.statementToCode(e,\"SNT\");return Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\",Blockly.Arduino.definitions_[\"var_bluetooth_\"+o]=\"SoftwareSerial blueToothSerial_\"+o+\"(\"+o+\",\"+l+\");\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+o]=\"Serial.begin(9600);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+o]+=\"  pinMode(\"+o+\", INPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+o]+=\"  pinMode(\"+l+\", OUTPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+o]+=\"  setupBlueToothConnection_\"+o+\"();\\n\",Blockly.Arduino.definitions_[\"define_setupBlueToothConnection_\"+o]=\"void setupBlueToothConnection_\"+o+\"()\\n{\\n  blueToothSerial_\"+o+\".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\\n  blueToothSerial_\"+o+'.print(\"\\\\r\\\\n+STWMOD=0\\\\r\\\\n\"); //set the bluetooth work in slave mode\\n  blueToothSerial_'+o+'.print(\"\\\\r\\\\n+STNA='+t+'\\\\r\\\\n\"); //set the bluetooth name as \"'+t+'\"\\n  blueToothSerial_'+o+'.print(\"\\\\r\\\\n+STPIN=0000\\\\r\\\\n\");//Set SLAVE pincode\"0000\"\\n  blueToothSerial_'+o+'.print(\"\\\\r\\\\n+STOAUT=1\\\\r\\\\n\"); // Permit Paired device to connect me\\n  blueToothSerial_'+o+'.print(\"\\\\r\\\\n+STAUTO=0\\\\r\\\\n\"); // Auto-connection should be forbidden here\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+o+'.print(\"\\\\r\\\\n+INQ=1\\\\r\\\\n\"); //make the slave bluetooth inquirable \\n  Serial.println(\"The slave bluetooth is inquirable!\");\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+o+\".flush();\\n}\\n\",\"char recvChar_\"+o+\";\\nwhile(1) {\\n  if(blueToothSerial_\"+o+\".available()) {//check if there is any data sent from the remote bluetooth shield\\n    recvChar_\"+o+\" = blueToothSerial_\"+o+\".read();\\n    Serial.print(recvChar_\"+o+\");\\n\"+i+\"  }\\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\\n    recvChar_\"+o+\" = Serial.read();\\n    blueToothSerial_\"+o+\".print(recvChar_\"+o+\");\\n\"+r+\"  }\\n}\\n\"}},function(e,o,l){\"use strict\";goog.provide(\"Blockly.Arduino.servo\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.servo_move=function(e){var o=e.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(e,\"DEGREE\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+o]=\"Servo servo_\"+o+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+o]=\"servo_\"+o+\".attach(\"+o+\");\\n\",\"servo_\"+o+\".write(\"+l+\");\\n\"},Blockly.Arduino.servo_read_degrees=function(e){var o=e.getFieldValue(\"PIN\");return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+o]=\"Servo servo_\"+o+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+o]=\"servo_\"+o+\".attach(\"+o+\");\\n\",[\"servo_\"+o+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.program\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_program=function(e){var o=Blockly.Arduino.statementToCode(e,\"SETUP_FUNC\");return o&&(Blockly.Arduino.setups_.userSetupCode=o),function(e,o){var l=e.getInputTargetBlock(o),n=Blockly.Arduino.blockToCode(l);if(!goog.isString(n))throw'Expecting code from statement block \"'+l.type+'\".';return n}(e,\"LOOP_FUNC\")}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.lineSensor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lineSensor_read=function(e){var o=e.getFieldValue(\"INPUT_PIN\"),l=\"lineSensor_\"+o;return Blockly.Arduino.definitions_.lineSensor=\"#include <DigitalIO.h>\",Blockly.Arduino.definitions_[l]=\"DigitalIO \"+l+\"(\"+o+\", INPUT);\",[l+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.motor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.motor_right=function(e){var o=e.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorRight(\"+o+\");\\n\"},Blockly.Arduino.motor_left=function(e){var o=e.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorLeft(\"+o+\");\\n\"},Blockly.Arduino.motor_drive=function(e){var o=e.getFieldValue(\"MOTOR_SPEED_LEFT\"),l=e.getFieldValue(\"MOTOR_SPEED_RIGHT\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"drive(\"+o+\", \"+l+\");\\n\"}},function(e,o,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.ultrasonic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.ultrasonic_read=function(e){var o=e.getFieldValue(\"TIGGER_PIN\"),l=e.getFieldValue(\"ECHO_PIN\"),n=\"usonic_\"+o+\"_\"+l;return Blockly.Arduino.definitions_.ultrasonic=\"#include <Ultrasonic.h>\",Blockly.Arduino.definitions_[n]=\"Ultrasonic \"+n+\"(\"+o+\", \"+l+\");\",[n+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(e,o,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2018 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Themes.Modern\"),goog.require(\"Blockly.Theme\");Blockly.Themes.Modern=new Blockly.Theme({colour_blocks:{colourPrimary:\"#a5745b\",colourSecondary:\"#dbc7bd\",colourTertiary:\"#845d49\"},list_blocks:{colourPrimary:\"#745ba5\",colourSecondary:\"#c7bddb\",colourTertiary:\"#5d4984\"},logic_blocks:{colourPrimary:\"#5b80a5\",colourSecondary:\"#bdccdb\",colourTertiary:\"#496684\"},loop_blocks:{colourPrimary:\"#5ba55b\",colourSecondary:\"#bddbbd\",colourTertiary:\"#498449\"},math_blocks:{colourPrimary:\"#5b67a5\",colourSecondary:\"#bdc2db\",colourTertiary:\"#495284\"},procedure_blocks:{colourPrimary:\"#995ba5\",colourSecondary:\"#d6bddb\",colourTertiary:\"#7a4984\"},text_blocks:{colourPrimary:\"#5ba58c\",colourSecondary:\"#bddbd1\",colourTertiary:\"#498470\"},variable_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\"},variable_dynamic_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\"},hat_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\",hat:\"cap\"},arduino_blocks:{colourPrimary:\"#007481\",colourSecondary:\"#007481\",colourTertiary:\"#007481\"},grove_blocks:{colourPrimary:\"#018770\",colourSecondary:\"#018770\",colourTertiary:\"#018770\"},servo_blocks:{colourPrimary:\"#343434\",colourSecondary:\"#343434\",colourTertiary:\"#343434\"}},{colour_category:{colour:\"#a5745b\"},list_category:{colour:\"#745ba5\"},logic_category:{colour:\"#5b80a5\"},loop_category:{colour:\"#5ba55b\"},math_category:{colour:\"#5b67a5\"},procedure_category:{colour:\"#995ba5\"},text_category:{colour:\"#5ba58c\"},variable_category:{colour:\"#a55b99\"},variable_dynamic_category:{colour:\"#a55b99\"},arduino_category:{colour:\"#007481\"},grove_category:{colour:\"#018770\"},servo_category:{colour:\"#343434\"}})}]);","extractedComments":[]}