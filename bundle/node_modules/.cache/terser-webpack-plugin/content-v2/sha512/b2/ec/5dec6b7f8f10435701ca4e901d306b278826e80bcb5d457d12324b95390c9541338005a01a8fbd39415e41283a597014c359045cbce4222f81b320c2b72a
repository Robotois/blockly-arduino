{"code":"!function(o){var e={};function l(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return o[n].call(i.exports,i,i.exports,l),i.l=!0,i.exports}l.m=o,l.c=e,l.d=function(o,e,n){l.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:n})},l.r=function(o){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})},l.t=function(o,e){if(1&e&&(o=l(o)),8&e)return o;if(4&e&&\"object\"==typeof o&&o&&o.__esModule)return o;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:o}),2&e&&\"string\"!=typeof o)for(var i in o)l.d(n,i,function(e){return o[e]}.bind(null,i));return n},l.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return l.d(e,\"a\",e),e},l.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},l.p=\"\",l(l.s=0)}([function(o,e,l){\"use strict\";l.r(e);l(1),l(2),l(3),l(4),l(5),l(6),l(7),l(8),l(9),l(10),l(11),l(12),l(13),l(14),l(15),l(16),l(17),l(18),l(19),l(20),l(21),l(22),l(23),l(24),l(25),l(26),l(27)},function(o,e,l){\"use strict\";goog.provide(\"Blockly.Msg.colors\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ARDUINO_BASE_HUE=\"#007481\",Blockly.Msg.GROVE_HUE=\"#018770\",Blockly.Msg.SERVO_HUE=\"#343434\"},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.arduino_base\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.arduino_base_inout_buildin_led={init:function(){this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_HELPURL),this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_INPUT).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_BUILDIN_LED_TOOLTIP),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_write={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage(\"./images/digital.jpg\",64,64)).appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_INPUT2).appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_digital_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_DIGITAL_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_highlow={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown(Blockly.Msg.FIELDDROPDOWN),\"BOOL\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ONOFF_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_write={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage(\"./images/pwm.png\",64,64)).appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownPWM),\"PIN\"),this.appendValueInput(\"PWM\",\"Number\").appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_WRITE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_analog_read={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_INOUT_ANALOG_READ_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_delay={init:function(){this.appendValueInput(\"DELAY_TIME\",\"Number\").appendField(Blockly.Msg.ARDUINO_BASE_DELAY_DELAY_TIME).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_BASE_DELAY_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_DELAY_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_angle={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_BASE_ANGLE).appendField(new Blockly.FieldAngle(90),\"ANGLE\"),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ARDUINO_BASE_ANGLE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_BASE_ANGLE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_date={init:function(){this.appendDummyInput().appendField(\"date:\").appendField(\"DATE\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Date entrie as yyyy-mm-dd\"),this.setHelpUrl(\"\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_map={init:function(){this.appendValueInput(\"NUM\",\"Number\").appendField(\"Map \").setCheck(\"Number\"),this.appendValueInput(\"DMAX\",\"Number\").appendField(\"value to [0-\").setCheck(\"Number\"),this.appendDummyInput().appendField(\"]\"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(\"Re-maps a number from [0-1024] to another.\"),this.setHelpUrl(\"https://www.arduino.cc/reference/en/language/functions/math/map/\"),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_tone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_TONE_INPUT1).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"NUM\",\"Number\").appendField(Blockly.Msg.ARDUINO_TONE_INPUT2).setCheck(\"Number\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_TONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_TONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_inout_notone={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARDUINO_NOTONE_INPUT).appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_NOTONE_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_NOTONE_HELPURL),this.setStyle(\"arduino_blocks\")}},Blockly.Blocks.arduino_base_serial_print={init:function(){this.appendValueInput(\"CONTENT\",\"String\").appendField(Blockly.Msg.ARDUINO_SERIAL_PRINT_CONTENT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ARDUINO_SERIAL_PRINT_TOOLTIP),this.setHelpUrl(Blockly.Msg.ARDUINO_SERIAL_PRINT_HELPURL),this.setStyle(\"arduino_blocks\")}}},function(o,e){\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ngoog.provide(\"Blockly.Constants.grove\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Blocks.grove_led={init:function(){this.appendDummyInput().appendField(\"LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Red_LED_s.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"green LED\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Red_LED/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_button={init:function(){this.appendDummyInput().appendField(\"Button\").appendField(new Blockly.FieldImage(\"./blocks/grove/Button.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Basic digital input\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Button/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rotary_angle={init:function(){this.appendDummyInput().appendField(\"Rotary Angle\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove-Rotary_Angle_Sensor-P-.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Analog output between 0 and Vcc\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Rotary_Angle_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_tilt_switch={init:function(){this.appendDummyInput().appendField(\"Tilt Switch\").appendField(new Blockly.FieldImage(\"./blocks/grove/Tilt1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"When the switch is level it is open, and when tilted, the switch closes.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Tilt_Switch/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_piezo_buzzer={init:function(){this.appendDummyInput().appendField(\"Piezo Buzzer\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_Buzzer.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Emit a tone when the output is high\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Buzzer/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_relay={init:function(){this.appendDummyInput().appendField(\"Relay\").appendField(new Blockly.FieldImage(\"./blocks/grove/Twig-Relay.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"stat\").appendField(new Blockly.FieldDropdown([[\"HIGH\",\"HIGH\"],[\"LOW\",\"LOW\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Relay/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_temperature_sensor={init:function(){this.appendDummyInput().appendField(\"Temperature Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Temperature1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return number of ambient temperature in ℃\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Temperature_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_print={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"TEXT1\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line1\"),this.appendValueInput(\"TEXT2\").setCheck(\"String\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"print line2\"),this.appendValueInput(\"DELAY_TIME\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Delay\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"print text on an 16 character by 2 line LCD.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_power={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Power\").appendField(new Blockly.FieldDropdown([[\"ON\",\"ON\"],[\"OFF\",\"OFF\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_serial_lcd_effect={init:function(){this.appendDummyInput().appendField(\"Serial LCD\").appendField(new Blockly.FieldImage(\"./blocks/grove/Lcdnew1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Effect\").appendField(new Blockly.FieldDropdown([[\"Scroll Left\",\"LEFT\"],[\"Scroll Right\",\"RIGHT\"],[\"Scroll Auto\",\"AUTO\"]]),\"STAT\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Turn LCD power on/off\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_LCD_V1.0/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_sound_sensor={init:function(){this.appendDummyInput().appendField(\"Sound Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/sound_sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Detect the sound strength of the environment\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Sound_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_pir_motion_sensor={init:function(){this.appendDummyInput().appendField(\"PIR Motion Sensor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grove_-_PIR_Motion_Sensor.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"When anyone moves in it's detecting range, the sensor outputs HIGH.\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-PIR_Motion_Sensor/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_line_finder={init:function(){this.appendDummyInput().appendField(\"Line Finder\").appendField(new Blockly.FieldImage(\"./blocks/grove/Grovelinefinder1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.setOutput(!0,\"Boolean\"),this.setTooltip(\"Output digital signal so the robot can reliably follow a black line on a white background\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Line_Finder/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_ultrasonic_ranger={init:function(){this.appendDummyInput().appendField(\"Ultrasonic Ranger\").appendField(new Blockly.FieldImage(\"./blocks/grove/Ultrasonic.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\").appendField(\"unit\").appendField(new Blockly.FieldDropdown([[\"cm\",\"cm\"],[\"inch\",\"inch\"]]),\"UNIT\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"Non-contact distance measurement module\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_motor_shield={init:function(){this.appendDummyInput().appendField(\"Motor\").appendField(new Blockly.FieldImage(\"./blocks/grove/Smotoshield2.jpg\",64,64)).appendField(new Blockly.FieldDropdown([[\"Stop\",\"stop\"],[\"Forward\",\"forward\"],[\"Right\",\"right\"],[\"Left\",\"left\"],[\"Backward\",\"backward\"]]),\"DIRECTION\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Drive two brushed DC motors\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Motor_Shield/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_thumb_joystick={init:function(){this.appendDummyInput().appendField(\"Thumb Joystick\").appendField(new Blockly.FieldImage(\"./blocks/grove/Bgjoy1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownAnalog),\"PIN\").appendField(\"axis\").appendField(new Blockly.FieldDropdown([[\"x\",\"x\"],[\"y\",\"y\"]]),\"AXIS\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"output two analog values(200~800) representing two directions\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Thumb_Joystick/\"),this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led={init:function(){this.appendDummyInput().appendField(\"Chainable RGB LED\").appendField(new Blockly.FieldImage(\"./blocks/grove/Chanbalelednb1.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\"),this.setMutator(new Blockly.Mutator([\"grove_rgb_led_item\"])),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"256 color LED, currently Chainable feature is not support\"),this.itemCount_=1,this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Chainable_RGB_LED/\"),this.setStyle(\"grove_blocks\")},mutationToDom:function(){var o=document.createElement(\"mutation\");o.setAttribute(\"items\",this.itemCount_);for(var e=0;e<this.itemCount_;e++){var l=this.getFieldValue(\"RGB0\");o.setAttribute(\"RGB\"+e,l)}return o},domToMutation:function(o){for(var e=0;e<this.itemCount_;e++)this.removeInput(\"COLOR\"+e);this.itemCount_=window.parseInt(o.getAttribute(\"items\"),10);for(e=0;e<this.itemCount_;e++){var l=window.parseInt(o.getAttribute(\"RGB\"+e),\"#00ff00\");this.appendDummyInput(\"COLOR\"+e).setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(e+1)).appendField(new Blockly.FieldColour(l),\"RGB\"+e)}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")},decompose:function(o){var e=o.newBlock(\"grove_rgb_led_container\");e.initSvg();for(var l=e.getInput(\"STACK\").connection,n=0;n<this.itemCount_;n++){var i=o.newBlock(\"grove_rgb_led_item\");i.initSvg(),l.connect(i.previousConnection),l=i.nextConnection}return e},compose:function(o){if(0==this.itemCount_)this.removeInput(\"COLOR0\");else for(var e=this.itemCount_-1;e>=0;e--)this.removeInput(\"COLOR\"+e);this.itemCount_=0;for(var l=o.getInputTargetBlock(\"STACK\");l;){var n=this.getFieldValue(\"RGB\"+this.itemCount_);null==n&&(n=\"00ff00\");var i=this.appendDummyInput(\"COLOR\"+this.itemCount_);i.setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color \"+(this.itemCount_+1)).appendField(new Blockly.FieldColour(n),\"RGB\"+this.itemCount_),l.valueConnection_&&i.connection.connect(l.valueConnection_),this.itemCount_++,l=l.nextConnection&&l.nextConnection.targetBlock()}0==this.itemCount_&&this.appendDummyInput(\"COLOR0\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Color 1\").appendField(new Blockly.FieldColour(\"#00ff00\"),\"RGB0\")}},Blockly.Blocks.grove_rgb_led_container={init:function(){this.appendDummyInput().appendField(\"Container\"),this.appendStatementInput(\"STACK\"),this.setTooltip(\"Add, remove items to reconfigure this chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_rgb_led_item={init:function(){this.appendDummyInput().appendField(\"Item\"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(\"Add an item to the chain\"),this.contextMenu=!1,this.setStyle(\"grove_blocks\")}},Blockly.Blocks.grove_bluetooth_slave={init:function(){this.appendDummyInput().appendField(\"Bluetooth Slave\").appendField(new Blockly.FieldImage(\"http://www.seeedstudio.com/wiki/File:Twigbt00.jpg\",64,64)).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Name\").appendField(new Blockly.FieldTextInput(\"blocklyduino\"),\"NAME\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Pincode\").appendField(new Blockly.FieldTextInput(\"0000\"),\"PINCODE\"),this.appendStatementInput(\"RCV\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Receive\"),this.appendStatementInput(\"SNT\").setAlign(Blockly.ALIGN_RIGHT).appendField(\"Send\"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"Bluetooth V2.0+EDR slave. Support single slave per board\"),this.setHelpUrl(\"http://wiki.seeedstudio.com/Grove-Serial_Bluetooth/\"),this.setStyle(\"grove_blocks\")}}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2012 Fred Lin.\n * https://github.com/gasolin/BlocklyDuino\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Constants.servo\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly\"),Blockly.Constants.servo.HUE=\"#334E68\",Blockly.Blocks.servo_move={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_SERVO_DRIVE).appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendValueInput(\"DEGREE\").setCheck(\"Number\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.ROBOTOIS_SERVO_LABEL),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(\"move between 0~180 degree\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setColour(Blockly.Constants.servo.HUE),this.setTooltip(Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP)}},Blockly.Blocks.servo_read_degrees={init:function(){this.appendDummyInput().appendField(\"Servo\").appendField(\"PIN#\").appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"PIN\"),this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Read Degrees\"),this.setOutput(!0,\"Number\"),this.setTooltip(\"return that degree with the last servo move.\"),this.setHelpUrl(\"http://playground.arduino.cc/ComponentLib/servo\"),this.setStyle(\"servo_blocks\")}}},function(o,e,l){\"use strict\";goog.provide(\"Blockly.Msg.robotois\"),goog.require(\"Blockly.Msg\"),Blockly.Msg.ROBOTOIS_RUN_SETUP=\"Inicializar Arduino:\",Blockly.Msg.ROBOTOIS_RUN_LOOP=\"Ejecutar programa de Arduino:\",Blockly.Msg.ROBOTOIS_RUN_TIP=\"Define la inicialización de Arduino y el programa a ejecutar.\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT=\"Motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP=\"Velocidad del motor derecho\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT=\"Motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP=\"Velocidad del motor izquierdo\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE=\"Mover motores\",Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE=\"Mover servo\",Blockly.Msg.ROBOTOIS_SERVO_LABEL=\"Grados (0~180)\",Blockly.Msg.ROBOTOIS_SERVO_DRIVE_TIP=\"Mover motores a diferente velocidad\",Blockly.Msg.ROBOTOIS_ULTRASONIC=\"Leer el sensor de distancia usando los pines #\",Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP=\"Usar el sensor de distancia\",Blockly.Msg.ROBOTOIS_LINE_SENSOR=\"Leer el sensor de linea usando el pin #\",Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP=\"Leer el sensor de linea\"},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.require(\"Blockly.Blocks\"),Blockly.Blocks.arduino_program={init:function(){this.appendDummyInput().appendField(Blockly.Msg.ARD_FUN_RUN_SETUP),this.appendStatementInput(\"SETUP_FUNC\"),this.appendDummyInput().appendField(Blockly.Msg.ARD_FUN_RUN_LOOP),this.appendStatementInput(\"LOOP_FUNC\"),this.setInputsInline(!1),this.setColour(\"#3EBD93\"),this.setTooltip(Blockly.Msg.ARD_FUN_RUN_TIP),this.setHelpUrl(\"https://arduino.cc/en/Reference/Loop\"),this.contextMenu=!1},getArduinoLoopsInstance:function(){return!0}}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.lineSensor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.lineSensor.HUE=\"#8888FC\",Blockly.Blocks.lineSensor_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/lineSensor\"),this.setColour(Blockly.Blocks.lineSensor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_LINE_SENSOR),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"INPUT_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_LINE_SENSOR_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"INPUT_PIN\",\"digitalPins\")}}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.ultrasonic\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.ultrasonic.HUE=\"#8888FC\",Blockly.Blocks.ultrasonic_read={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/ultrasonic\"),this.setColour(Blockly.Blocks.ultrasonic.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_ULTRASONIC),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"TIGGER_PIN\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldDropdown(profile.default.dropdownDigital),\"ECHO_PIN\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setOutput(!0,\"Number\"),this.setTooltip(Blockly.Msg.ROBOTOIS_ULTRASONIC_TIP)},getBlockType:function(){return\"Number\"},updateFields:function(){Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"TIGGER_PIN\",\"digitalPins\"),Blockly.Arduino.Boards.refreshBlockFieldDropdown(this,\"ECHO_PIN\",\"digitalPins\")}}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Blocks.motor\"),goog.require(\"Blockly.Blocks\"),goog.require(\"Blockly.Types\"),Blockly.Blocks.motor.HUE=\"#334E68\",Blockly.Blocks.motor_right={init:function(){this.setHelpUrl(\"http://robotois.com/docs/arduino/motor\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_RIGHT_TIP)}},Blockly.Blocks.motor_left={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().appendField(Blockly.Msg.ROBOTOIS_MOTOR_LEFT),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_LEFT_TIP)}},Blockly.Blocks.motor_drive={init:function(){this.setHelpUrl(\"http://robotois.com\"),this.setColour(Blockly.Blocks.motor.HUE),this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE),this.appendDummyInput().appendField(\"(\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_LEFT\"),this.appendDummyInput().appendField(\",\"),this.appendDummyInput().appendField(new Blockly.FieldNumber(64,-100,100),\"MOTOR_SPEED_RIGHT\"),this.appendDummyInput().appendField(\")\"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(Blockly.Msg.ROBOTOIS_MOTOR_DRIVE_TIP)}}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino\"),goog.require(\"Blockly.Generator\"),Blockly.Arduino=new Blockly.Generator(\"Arduino\"),Blockly.Arduino.addReservedWords(\"setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts\"),Blockly.Arduino.ORDER_ATOMIC=0,Blockly.Arduino.ORDER_UNARY_POSTFIX=1,Blockly.Arduino.ORDER_UNARY_PREFIX=2,Blockly.Arduino.ORDER_MULTIPLICATIVE=3,Blockly.Arduino.ORDER_ADDITIVE=4,Blockly.Arduino.ORDER_SHIFT=5,Blockly.Arduino.ORDER_RELATIONAL=6,Blockly.Arduino.ORDER_EQUALITY=7,Blockly.Arduino.ORDER_BITWISE_AND=8,Blockly.Arduino.ORDER_BITWISE_XOR=9,Blockly.Arduino.ORDER_BITWISE_OR=10,Blockly.Arduino.ORDER_LOGICAL_AND=11,Blockly.Arduino.ORDER_LOGICAL_OR=12,Blockly.Arduino.ORDER_CONDITIONAL=13,Blockly.Arduino.ORDER_ASSIGNMENT=14,Blockly.Arduino.ORDER_NONE=99,Blockly.Arduino.ORDER_OVERRIDES=[[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_FUNCTION_CALL,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_MEMBER],[Blockly.Arduino.ORDER_MEMBER,Blockly.Arduino.ORDER_FUNCTION_CALL],[Blockly.Arduino.ORDER_LOGICAL_NOT,Blockly.Arduino.ORDER_LOGICAL_NOT],[Blockly.Arduino.ORDER_MULTIPLICATION,Blockly.Arduino.ORDER_MULTIPLICATION],[Blockly.Arduino.ORDER_ADDITION,Blockly.Arduino.ORDER_ADDITION],[Blockly.Arduino.ORDER_LOGICAL_AND,Blockly.Arduino.ORDER_LOGICAL_AND],[Blockly.Arduino.ORDER_LOGICAL_OR,Blockly.Arduino.ORDER_LOGICAL_OR]],Blockly.Arduino.init=function(o){Blockly.Arduino.definitions_=Object.create(null),Blockly.Arduino.setups_=Object.create(null),Blockly.Arduino.functionNames_=Object.create(null),Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_),Blockly.Arduino.variableDB_.setVariableMap(o.getVariableMap());for(var e=[],l=Blockly.Variables.allDeveloperVariables(o),n=0;n<l.length;n++)e.push(\"int \"+Blockly.Arduino.variableDB_.getName(l[n],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+\";\\n\");var i=Blockly.Variables.allUsedVarModels(o);for(n=0;n<i.length;n++)e.push(Blockly.Arduino.variableDB_.getName(i[n].getId(),Blockly.Variables.NAME_TYPE));Blockly.Arduino.definitions_.variables=e.join(\"\\n\"),e.length&&(Blockly.Arduino.definitions_.variables=\"int \"+e.join(\", \")+\";\\n\")},Blockly.Arduino.finish=function(o){o=\"void loop() \\n{\\n\"+(o=(o=\"  \"+o.replace(/\\n/g,\"\\n  \")).replace(/\\n\\s+$/,\"\\n\"))+\"\\n}\";var e=[],l=[];for(var n in Blockly.Arduino.definitions_){var i=Blockly.Arduino.definitions_[n];i.match(/^#include/)?e.push(i):l.push(i)}var t=[];for(var n in Blockly.Arduino.setups_)t.push(Blockly.Arduino.setups_[n]);return delete Blockly.Arduino.definitions_,delete Blockly.Arduino.functionNames_,Blockly.Arduino.variableDB_.reset(),(e.join(\"\\n\")+\"\\n\\n\"+l.join(\"\\n\")+\"\\nvoid setup() \\n{\\n  \"+t.join(\"\\n  \")+\"\\n}\\n\\n\").replace(/\\n\\n+/g,\"\\n\\n\").replace(/\\n*$/,\"\\n\\n\\n\")+o},Blockly.Arduino.scrubNakedValue=function(o){return o+\";\\n\"},Blockly.Arduino.quote_=function(o){return'\"'+(o=o.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\").replace(/\\$/g,\"\\\\$\").replace(/'/g,\"\\\\'\"))+'\"'},Blockly.Arduino.scrub_=function(o,e){if(null===e)return\"\";var l=\"\";if(!o.outputConnection||!o.outputConnection.targetConnection){(i=o.getCommentText())&&(l+=Blockly.Arduino.prefixLines(i,\"// \")+\"\\n\");for(var n=0;n<o.inputList.length;n++)if(o.inputList[n].type==Blockly.INPUT_VALUE){var i,t=o.inputList[n].connection.targetBlock();if(t)(i=Blockly.Arduino.allNestedComments(t))&&(l+=Blockly.Arduino.prefixLines(i,\"// \"))}}var r=o.nextConnection&&o.nextConnection.targetBlock();return l+e+Blockly.Arduino.blockToCode(r)}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.colour\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.colour_picker=function(o){return[\"'\"+o.getFieldValue(\"COLOUR\")+\"'\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.colour_random=function(o){return[Blockly.Arduino.provideFunction_(\"colourRandom\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"() {\",\"  var num = Math.floor(Math.random() * Math.pow(2, 24));\",\"  return '#' + ('00000' + num.toString(16)).substr(-6);\",\"}\"])+\"()\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_rgb=function(o){var e=Blockly.Arduino.valueToCode(o,\"RED\",Blockly.Arduino.ORDER_COMMA)||0,l=Blockly.Arduino.valueToCode(o,\"GREEN\",Blockly.Arduino.ORDER_COMMA)||0,n=Blockly.Arduino.valueToCode(o,\"BLUE\",Blockly.Arduino.ORDER_COMMA)||0;return[Blockly.Arduino.provideFunction_(\"colourRgb\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b) {\",\"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\",\"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\",\"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\",\"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\",\"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\",\"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+e+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.colour_blend=function(o){var e=Blockly.Arduino.valueToCode(o,\"COLOUR1\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",l=Blockly.Arduino.valueToCode(o,\"COLOUR2\",Blockly.Arduino.ORDER_COMMA)||\"'#000000'\",n=Blockly.Arduino.valueToCode(o,\"RATIO\",Blockly.Arduino.ORDER_COMMA)||.5;return[Blockly.Arduino.provideFunction_(\"colourBlend\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(c1, c2, ratio) {\",\"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\",\"  var r1 = parseInt(c1.substring(1, 3), 16);\",\"  var g1 = parseInt(c1.substring(3, 5), 16);\",\"  var b1 = parseInt(c1.substring(5, 7), 16);\",\"  var r2 = parseInt(c2.substring(1, 3), 16);\",\"  var g2 = parseInt(c2.substring(3, 5), 16);\",\"  var b2 = parseInt(c2.substring(5, 7), 16);\",\"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\",\"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\",\"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\",\"  r = ('0' + (r || 0).toString(16)).slice(-2);\",\"  g = ('0' + (g || 0).toString(16)).slice(-2);\",\"  b = ('0' + (b || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+e+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.lists\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lists_create_empty=function(o){return[\"[]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_create_with=function(o){for(var e=new Array(o.itemCount_),l=0;l<o.itemCount_;l++)e[l]=Blockly.Arduino.valueToCode(o,\"ADD\"+l,Blockly.Arduino.ORDER_COMMA)||\"null\";return[\"[\"+e.join(\", \")+\"]\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.lists_repeat=function(o){return[Blockly.Arduino.provideFunction_(\"listsRepeat\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(value, n) {\",\"  var array = [];\",\"  for (var i = 0; i < n; i++) {\",\"    array[i] = value;\",\"  }\",\"  return array;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"ITEM\",Blockly.Arduino.ORDER_COMMA)||\"null\")+\", \"+(Blockly.Arduino.valueToCode(o,\"NUM\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_length=function(o){return[(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.lists_isEmpty=function(o){return[\"!\"+(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.lists_indexOf=function(o){var e=\"FIRST\"==o.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",l=Blockly.Arduino.valueToCode(o,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",n=(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".\"+e+\"(\"+l+\")\";return o.workspace.options.oneBasedIndex?[n+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[n,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_getIndex=function(o){var e=o.getFieldValue(\"MODE\")||\"GET\",l=o.getFieldValue(\"WHERE\")||\"FROM_START\",n=\"RANDOM\"==l?Blockly.Arduino.ORDER_COMMA:Blockly.Arduino.ORDER_MEMBER,i=Blockly.Arduino.valueToCode(o,\"VALUE\",n)||\"[]\";switch(l){case\"FIRST\":if(\"GET\"==e)return[r=i+\"[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==e)return[r=i+\".shift()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==e)return i+\".shift();\\n\";break;case\"LAST\":if(\"GET\"==e)return[r=i+\".slice(-1)[0]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==e)return[r=i+\".pop()\",Blockly.Arduino.ORDER_MEMBER];if(\"REMOVE\"==e)return i+\".pop();\\n\";break;case\"FROM_START\":var t=Blockly.Arduino.getAdjusted(o,\"AT\");if(\"GET\"==e)return[r=i+\"[\"+t+\"]\",Blockly.Arduino.ORDER_MEMBER];if(\"GET_REMOVE\"==e)return[r=i+\".splice(\"+t+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==e)return i+\".splice(\"+t+\", 1);\\n\";break;case\"FROM_END\":var r;t=Blockly.Arduino.getAdjusted(o,\"AT\",1,!0);if(\"GET\"==e)return[r=i+\".slice(\"+t+\")[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"GET_REMOVE\"==e)return[r=i+\".splice(\"+t+\", 1)[0]\",Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==e)return i+\".splice(\"+t+\", 1);\";break;case\"RANDOM\":if(r=Blockly.Arduino.provideFunction_(\"listsGetRandomItem\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list, remove) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  if (remove) {\",\"    return list.splice(x, 1)[0];\",\"  } else {\",\"    return list[x];\",\"  }\",\"}\"])+\"(\"+i+\", \"+(\"GET\"!=e)+\")\",\"GET\"==e||\"GET_REMOVE\"==e)return[r,Blockly.Arduino.ORDER_FUNCTION_CALL];if(\"REMOVE\"==e)return r+\";\\n\"}throw\"Unhandled combination (lists_getIndex).\"},Blockly.Arduino.lists_setIndex=function(o){var e=Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",l=o.getFieldValue(\"MODE\")||\"GET\",n=o.getFieldValue(\"WHERE\")||\"FROM_START\",i=Blockly.Arduino.valueToCode(o,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"null\";function t(){if(e.match(/^\\w+$/))return\"\";var o=Blockly.Arduino.variableDB_.getDistinctName(\"tmpList\",Blockly.Variables.NAME_TYPE),l=\"var \"+o+\" = \"+e+\";\\n\";return e=o,l}switch(n){case\"FIRST\":if(\"SET\"==l)return e+\"[0] = \"+i+\";\\n\";if(\"INSERT\"==l)return e+\".unshift(\"+i+\");\\n\";break;case\"LAST\":if(\"SET\"==l){var r=t();return r+=e+\"[\"+e+\".length - 1] = \"+i+\";\\n\"}if(\"INSERT\"==l)return e+\".push(\"+i+\");\\n\";break;case\"FROM_START\":var u=Blockly.Arduino.getAdjusted(o,\"AT\");if(\"SET\"==l)return e+\"[\"+u+\"] = \"+i+\";\\n\";if(\"INSERT\"==l)return e+\".splice(\"+u+\", 0, \"+i+\");\\n\";break;case\"FROM_END\":u=Blockly.Arduino.getAdjusted(o,\"AT\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION),r=t();if(\"SET\"==l)return r+=e+\"[\"+e+\".length - \"+u+\"] = \"+i+\";\\n\";if(\"INSERT\"==l)return r+=e+\".splice(\"+e+\".length - \"+u+\", 0, \"+i+\");\\n\";break;case\"RANDOM\":r=t();var d=Blockly.Arduino.variableDB_.getDistinctName(\"tmpX\",Blockly.Variables.NAME_TYPE);if(r+=\"var \"+d+\" = Math.floor(Math.random() * \"+e+\".length);\\n\",\"SET\"==l)return r+=e+\"[\"+d+\"] = \"+i+\";\\n\";if(\"INSERT\"==l)return r+=e+\".splice(\"+d+\", 0, \"+i+\");\\n\"}throw\"Unhandled combination (lists_setIndex).\"},Blockly.Arduino.lists.getIndex_=function(o,e,l){return\"FIRST\"==e?\"0\":\"FROM_END\"==e?o+\".length - 1 - \"+l:\"LAST\"==e?o+\".length - 1\":l},Blockly.Arduino.lists_getSublist=function(o){var e=Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\",l=o.getFieldValue(\"WHERE1\"),n=o.getFieldValue(\"WHERE2\");if(\"FIRST\"==l&&\"LAST\"==n)var i=e+\".slice(0)\";else if(e.match(/^\\w+$/)||\"FROM_END\"!=l&&\"FROM_START\"==n){switch(l){case\"FROM_START\":var t=Blockly.Arduino.getAdjusted(o,\"AT1\");break;case\"FROM_END\":t=e+\".length - \"+(t=Blockly.Arduino.getAdjusted(o,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":t=\"0\";break;default:throw\"Unhandled option (lists_getSublist).\"}switch(n){case\"FROM_START\":var r=Blockly.Arduino.getAdjusted(o,\"AT2\",1);break;case\"FROM_END\":r=e+\".length - \"+(r=Blockly.Arduino.getAdjusted(o,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":r=e+\".length\";break;default:throw\"Unhandled option (lists_getSublist).\"}i=e+\".slice(\"+t+\", \"+r+\")\"}else{t=Blockly.Arduino.getAdjusted(o,\"AT1\"),r=Blockly.Arduino.getAdjusted(o,\"AT2\");var u=Blockly.Arduino.lists.getIndex_,d={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};i=Blockly.Arduino.provideFunction_(\"subsequence\"+d[l]+d[n],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==l||\"FROM_START\"==l?\", at1\":\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", at2\":\"\")+\") {\",\"  var start = \"+u(\"sequence\",l,\"at1\")+\";\",\"  var end = \"+u(\"sequence\",n,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+e+(\"FROM_END\"==l||\"FROM_START\"==l?\", \"+t:\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", \"+r:\"\")+\")\"}return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_sort=function(o){var e=Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\",l=\"1\"===o.getFieldValue(\"DIRECTION\")?1:-1,n=o.getFieldValue(\"TYPE\");return[e+\".slice().sort(\"+Blockly.Arduino.provideFunction_(\"listsGetSortCompare\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(type, direction) {\",\"  var compareFuncs = {\",'    \"NUMERIC\": function(a, b) {',\"        return parseFloat(a) - parseFloat(b); },\",'    \"TEXT\": function(a, b) {',\"        return a.toString() > b.toString() ? 1 : -1; },\",'    \"IGNORE_CASE\": function(a, b) {',\"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\",\"  };\",\"  var compare = compareFuncs[type];\",\"  return function(a, b) { return compare(a, b) * direction; }\",\"}\"])+'(\"'+n+'\", '+l+\"))\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_split=function(o){var e=Blockly.Arduino.valueToCode(o,\"INPUT\",Blockly.Arduino.ORDER_MEMBER),l=Blockly.Arduino.valueToCode(o,\"DELIM\",Blockly.Arduino.ORDER_NONE)||\"''\",n=o.getFieldValue(\"MODE\");if(\"SPLIT\"==n){e||(e=\"''\");var i=\"split\"}else{if(\"JOIN\"!=n)throw\"Unknown mode: \"+n;e||(e=\"[]\");i=\"join\"}return[e+\".\"+i+\"(\"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.lists_reverse=function(o){return[(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"[]\")+\".slice().reverse()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.logic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_if=function(o){var e=0,l=\"\";do{l+=(e>0?\" else \":\"\")+\"if (\"+(Blockly.Arduino.valueToCode(o,\"IF\"+e,Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\"+Blockly.Arduino.statementToCode(o,\"DO\"+e)+\"}\",++e}while(o.getInput(\"IF\"+e));return o.getInput(\"ELSE\")&&(l+=\" else {\\n\"+Blockly.Arduino.statementToCode(o,\"ELSE\")+\"}\"),l+\"\\n\"},Blockly.Arduino.controls_ifelse=Blockly.Arduino.controls_if,Blockly.Arduino.logic_compare=function(o){var e={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[o.getFieldValue(\"OP\")],l=\"==\"==e||\"!=\"==e?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL;return[(Blockly.Arduino.valueToCode(o,\"A\",l)||\"0\")+\" \"+e+\" \"+(Blockly.Arduino.valueToCode(o,\"B\",l)||\"0\"),l]},Blockly.Arduino.logic_operation=function(o){var e=\"AND\"==o.getFieldValue(\"OP\")?\"&&\":\"||\",l=\"&&\"==e?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,n=Blockly.Arduino.valueToCode(o,\"A\",l),i=Blockly.Arduino.valueToCode(o,\"B\",l);if(n||i){var t=\"&&\"==e?\"true\":\"false\";n||(n=t),i||(i=t)}else n=\"false\",i=\"false\";return[n+\" \"+e+\" \"+i,l]},Blockly.Arduino.logic_negate=function(o){var e=Blockly.Arduino.ORDER_LOGICAL_NOT;return[\"!\"+(Blockly.Arduino.valueToCode(o,\"BOOL\",e)||\"true\"),e]},Blockly.Arduino.logic_boolean=function(o){return[\"TRUE\"==o.getFieldValue(\"BOOL\")?\"true\":\"false\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_null=function(o){return[\"null\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_ternary=function(o){return[(Blockly.Arduino.valueToCode(o,\"IF\",Blockly.Arduino.ORDER_CONDITIONAL)||\"false\")+\" ? \"+(Blockly.Arduino.valueToCode(o,\"THEN\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\")+\" : \"+(Blockly.Arduino.valueToCode(o,\"ELSE\",Blockly.Arduino.ORDER_CONDITIONAL)||\"null\"),Blockly.Arduino.ORDER_CONDITIONAL]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.loops\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.controls_repeat_ext=function(o){if(o.getField(\"TIMES\"))var e=String(Number(o.getFieldValue(\"TIMES\")));else e=Blockly.Arduino.valueToCode(o,\"TIMES\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";var l=Blockly.Arduino.statementToCode(o,\"DO\");l=Blockly.Arduino.addLoopTrap(l,o.id);var n=\"\",i=Blockly.Arduino.variableDB_.getDistinctName(\"count\",Blockly.Variables.NAME_TYPE),t=e;e.match(/^\\w+$/)||Blockly.isNumber(e)||(n+=\"int \"+(t=Blockly.Arduino.variableDB_.getDistinctName(\"repeat_end\",Blockly.Variables.NAME_TYPE))+\" = \"+e+\";\\n\");return n+=\"for (int \"+i+\" = 0; \"+i+\" < \"+t+\"; \"+i+\"++) {\\n\"+l+\"}\\n\"},Blockly.Arduino.controls_repeat=Blockly.Arduino.controls_repeat_ext,Blockly.Arduino.controls_whileUntil=function(o){var e=\"UNTIL\"==o.getFieldValue(\"MODE\"),l=Blockly.Arduino.valueToCode(o,\"BOOL\",e?Blockly.Arduino.ORDER_LOGICAL_NOT:Blockly.Arduino.ORDER_NONE)||\"false\",n=Blockly.Arduino.statementToCode(o,\"DO\");return e&&(l=\"!\"+l),\"while (\"+l+\") {\\n\"+(n=Blockly.Arduino.addLoopTrap(n,o.id))+\"}\\n\"},Blockly.Arduino.controls_for=function(o){var e,l=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),n=Blockly.Arduino.valueToCode(o,\"FROM\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",i=Blockly.Arduino.valueToCode(o,\"TO\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\",t=Blockly.Arduino.valueToCode(o,\"BY\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"1\",r=Blockly.Arduino.statementToCode(o,\"DO\");if(r=Blockly.Arduino.addLoopTrap(r,o.id),Blockly.isNumber(n)&&Blockly.isNumber(i)&&Blockly.isNumber(t)){var u=parseFloat(n)<=parseFloat(i);e=\"for (\"+l+\" = \"+n+\"; \"+l+(u?\" <= \":\" >= \")+i+\"; \"+l;var d=Math.abs(parseFloat(t));e+=1==d?u?\"++\":\"--\":(u?\" += \":\" -= \")+d,e+=\") {\\n\"+r+\"}\\n\"}else{e=\"\";var a=n;n.match(/^\\w+$/)||Blockly.isNumber(n)||(e+=\"var \"+(a=Blockly.Arduino.variableDB_.getDistinctName(l+\"_start\",Blockly.Variables.NAME_TYPE))+\" = \"+n+\";\\n\");var c=i;if(!i.match(/^\\w+$/)&&!Blockly.isNumber(i))e+=\"var \"+(c=Blockly.Arduino.variableDB_.getDistinctName(l+\"_end\",Blockly.Variables.NAME_TYPE))+\" = \"+i+\";\\n\";var s=Blockly.Arduino.variableDB_.getDistinctName(l+\"_inc\",Blockly.Variables.NAME_TYPE);e+=\"var \"+s+\" = \",Blockly.isNumber(t)?e+=Math.abs(t)+\";\\n\":e+=\"Math.abs(\"+t+\");\\n\",e+=\"if (\"+a+\" > \"+c+\") {\\n\",e+=Blockly.Arduino.INDENT+s+\" = -\"+s+\";\\n\",e+=\"}\\n\",e+=\"for (\"+l+\" = \"+a+\"; \"+s+\" >= 0 ? \"+l+\" <= \"+c+\" : \"+l+\" >= \"+c+\"; \"+l+\" += \"+s+\") {\\n\"+r+\"}\\n\"}return e},Blockly.Arduino.controls_forEach=function(o){var e=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),l=Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"[]\",n=Blockly.Arduino.statementToCode(o,\"DO\");n=Blockly.Arduino.addLoopTrap(n,o.id);var i=\"\",t=l;l.match(/^\\w+$/)||(i+=\"var \"+(t=Blockly.Arduino.variableDB_.getDistinctName(e+\"_list\",Blockly.Variables.NAME_TYPE))+\" = \"+l+\";\\n\");var r=Blockly.Arduino.variableDB_.getDistinctName(e+\"_index\",Blockly.Variables.NAME_TYPE);return i+=\"for (var \"+r+\" in \"+t+\") {\\n\"+(n=Blockly.Arduino.INDENT+e+\" = \"+t+\"[\"+r+\"];\\n\"+n)+\"}\\n\"},Blockly.Arduino.controls_flow_statements=function(o){switch(o.getFieldValue(\"FLOW\")){case\"BREAK\":return\"break;\\n\";case\"CONTINUE\":return\"continue;\\n\"}throw\"Unknown flow statement.\"}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.math\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.math_number=function(o){var e=parseFloat(o.getFieldValue(\"NUM\"));return[e,e>=0?Blockly.Arduino.ORDER_ATOMIC:Blockly.Arduino.ORDER_UNARY_NEGATION]},Blockly.Arduino.math_arithmetic=function(o){var e={ADD:[\" + \",Blockly.Arduino.ORDER_ADDITION],MINUS:[\" - \",Blockly.Arduino.ORDER_SUBTRACTION],MULTIPLY:[\" * \",Blockly.Arduino.ORDER_MULTIPLICATION],DIVIDE:[\" / \",Blockly.Arduino.ORDER_DIVISION],POWER:[null,Blockly.Arduino.ORDER_COMMA]}[o.getFieldValue(\"OP\")],l=e[0],n=e[1],i=Blockly.Arduino.valueToCode(o,\"A\",n)||\"0\",t=Blockly.Arduino.valueToCode(o,\"B\",n)||\"0\";return l?[i+l+t,n]:[\"Math.pow(\"+i+\", \"+t+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_single=function(o){var e,l,n=o.getFieldValue(\"OP\");if(\"NEG\"==n)return\"-\"==(l=Blockly.Arduino.valueToCode(o,\"NUM\",Blockly.Arduino.ORDER_UNARY_NEGATION)||\"0\")[0]&&(l=\" \"+l),[e=\"-\"+l,Blockly.Arduino.ORDER_UNARY_NEGATION];switch(l=\"SIN\"==n||\"COS\"==n||\"TAN\"==n?Blockly.Arduino.valueToCode(o,\"NUM\",Blockly.Arduino.ORDER_DIVISION)||\"0\":Blockly.Arduino.valueToCode(o,\"NUM\",Blockly.Arduino.ORDER_NONE)||\"0\",n){case\"ABS\":e=\"Math.abs(\"+l+\")\";break;case\"ROOT\":e=\"Math.sqrt(\"+l+\")\";break;case\"LN\":e=\"Math.log(\"+l+\")\";break;case\"EXP\":e=\"Math.exp(\"+l+\")\";break;case\"POW10\":e=\"Math.pow(10,\"+l+\")\";break;case\"ROUND\":e=\"Math.round(\"+l+\")\";break;case\"ROUNDUP\":e=\"Math.ceil(\"+l+\")\";break;case\"ROUNDDOWN\":e=\"Math.floor(\"+l+\")\";break;case\"SIN\":e=\"Math.sin(\"+l+\" / 180 * Math.PI)\";break;case\"COS\":e=\"Math.cos(\"+l+\" / 180 * Math.PI)\";break;case\"TAN\":e=\"Math.tan(\"+l+\" / 180 * Math.PI)\"}if(e)return[e,Blockly.Arduino.ORDER_FUNCTION_CALL];switch(n){case\"LOG10\":e=\"Math.log(\"+l+\") / Math.log(10)\";break;case\"ASIN\":e=\"Math.asin(\"+l+\") / Math.PI * 180\";break;case\"ACOS\":e=\"Math.acos(\"+l+\") / Math.PI * 180\";break;case\"ATAN\":e=\"Math.atan(\"+l+\") / Math.PI * 180\";break;default:throw\"Unknown math operator: \"+n}return[e,Blockly.Arduino.ORDER_DIVISION]},Blockly.Arduino.math_constant=function(o){return{PI:[\"Math.PI\",Blockly.Arduino.ORDER_MEMBER],E:[\"Math.E\",Blockly.Arduino.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + Math.sqrt(5)) / 2\",Blockly.Arduino.ORDER_DIVISION],SQRT2:[\"Math.SQRT2\",Blockly.Arduino.ORDER_MEMBER],SQRT1_2:[\"Math.SQRT1_2\",Blockly.Arduino.ORDER_MEMBER],INFINITY:[\"Infinity\",Blockly.Arduino.ORDER_ATOMIC]}[o.getFieldValue(\"CONSTANT\")]},Blockly.Arduino.math_number_property=function(o){var e,l=Blockly.Arduino.valueToCode(o,\"NUMBER_TO_CHECK\",Blockly.Arduino.ORDER_MODULUS)||\"0\",n=o.getFieldValue(\"PROPERTY\");if(\"PRIME\"==n)return[e=Blockly.Arduino.provideFunction_(\"mathIsPrime\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(n) {\",\"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\"  if (n == 2 || n == 3) {\",\"    return true;\",\"  }\",\"  // False if n is NaN, negative, is 1, or not whole.\",\"  // And false if n is divisible by 2 or 3.\",\"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\",\"    return false;\",\"  }\",\"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\",\"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\",\"      return false;\",\"    }\",\"  }\",\"  return true;\",\"}\"])+\"(\"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];switch(n){case\"EVEN\":e=l+\" % 2 == 0\";break;case\"ODD\":e=l+\" % 2 == 1\";break;case\"WHOLE\":e=l+\" % 1 == 0\";break;case\"POSITIVE\":e=l+\" > 0\";break;case\"NEGATIVE\":e=l+\" < 0\";break;case\"DIVISIBLE_BY\":e=l+\" % \"+(Blockly.Arduino.valueToCode(o,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" == 0\"}return[e,Blockly.Arduino.ORDER_EQUALITY]},Blockly.Arduino.math_change=function(o){var e=Blockly.Arduino.valueToCode(o,\"DELTA\",Blockly.Arduino.ORDER_ADDITION)||\"0\",l=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return l+\" = (typeof \"+l+\" == 'number' ? \"+l+\" : 0) + \"+e+\";\\n\"},Blockly.Arduino.math_round=Blockly.Arduino.math_single,Blockly.Arduino.math_trig=Blockly.Arduino.math_single,Blockly.Arduino.math_on_list=function(o){var e,l=o.getFieldValue(\"OP\");switch(l){case\"SUM\":e=(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_MEMBER)||\"[]\")+\".reduce(function(x, y) {return x + y;})\";break;case\"MIN\":e=\"Math.min.apply(null, \"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"MAX\":e=\"Math.max.apply(null, \"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_COMMA)||\"[]\")+\")\";break;case\"AVERAGE\":e=Blockly.Arduino.provideFunction_(\"mathMean\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MEDIAN\":e=Blockly.Arduino.provideFunction_(\"mathMedian\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  var localList = myList.filter(function (x) {return typeof x == 'number';});\",\"  if (!localList.length) return null;\",\"  localList.sort(function(a, b) {return b - a;});\",\"  if (localList.length % 2 == 0) {\",\"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\",\"  } else {\",\"    return localList[(localList.length - 1) / 2];\",\"  }\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"MODE\":e=Blockly.Arduino.provideFunction_(\"mathModes\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(values) {\",\"  var modes = [];\",\"  var counts = [];\",\"  var maxCount = 0;\",\"  for (var i = 0; i < values.length; i++) {\",\"    var value = values[i];\",\"    var found = false;\",\"    var thisCount;\",\"    for (var j = 0; j < counts.length; j++) {\",\"      if (counts[j][0] === value) {\",\"        thisCount = ++counts[j][1];\",\"        found = true;\",\"        break;\",\"      }\",\"    }\",\"    if (!found) {\",\"      counts.push([value, 1]);\",\"      thisCount = 1;\",\"    }\",\"    maxCount = Math.max(thisCount, maxCount);\",\"  }\",\"  for (var j = 0; j < counts.length; j++) {\",\"    if (counts[j][1] == maxCount) {\",\"        modes.push(counts[j][0]);\",\"    }\",\"  }\",\"  return modes;\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"STD_DEV\":e=Blockly.Arduino.provideFunction_(\"mathStandardDeviation\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(numbers) {\",\"  var n = numbers.length;\",\"  if (!n) return null;\",\"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\",\"  var variance = 0;\",\"  for (var j = 0; j < n; j++) {\",\"    variance += Math.pow(numbers[j] - mean, 2);\",\"  }\",\"  variance = variance / n;\",\"  return Math.sqrt(variance);\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;case\"RANDOM\":e=Blockly.Arduino.provideFunction_(\"mathRandomList\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(list) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  return list[x];\",\"}\"])+\"(\"+(Blockly.Arduino.valueToCode(o,\"LIST\",Blockly.Arduino.ORDER_NONE)||\"[]\")+\")\";break;default:throw\"Unknown operator: \"+l}return[e,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_modulo=function(o){return[(Blockly.Arduino.valueToCode(o,\"DIVIDEND\",Blockly.Arduino.ORDER_MODULUS)||\"0\")+\" % \"+(Blockly.Arduino.valueToCode(o,\"DIVISOR\",Blockly.Arduino.ORDER_MODULUS)||\"0\"),Blockly.Arduino.ORDER_MODULUS]},Blockly.Arduino.math_constrain=function(o){return[\"Math.min(Math.max(\"+(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\", \"+(Blockly.Arduino.valueToCode(o,\"LOW\",Blockly.Arduino.ORDER_COMMA)||\"0\")+\"), \"+(Blockly.Arduino.valueToCode(o,\"HIGH\",Blockly.Arduino.ORDER_COMMA)||\"Infinity\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_int=function(o){var e=Blockly.Arduino.valueToCode(o,\"FROM\",Blockly.Arduino.ORDER_COMMA)||\"0\",l=Blockly.Arduino.valueToCode(o,\"TO\",Blockly.Arduino.ORDER_COMMA)||\"0\";return[Blockly.Arduino.provideFunction_(\"mathRandomInt\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(a, b) {\",\"  if (a > b) {\",\"    // Swap a and b to ensure a is smaller.\",\"    var c = a;\",\"    a = b;\",\"    b = c;\",\"  }\",\"  return Math.floor(Math.random() * (b - a + 1) + a);\",\"}\"])+\"(\"+e+\", \"+l+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.math_random_float=function(o){return[\"Math.random()\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.procedures\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.procedures_defreturn=function(o){var e=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=Blockly.Arduino.statementToCode(o,\"STACK\");if(Blockly.Arduino.STATEMENT_PREFIX){var n=o.id.replace(/\\$/g,\"$$$$\");l=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,\"'\"+n+\"'\"),Blockly.Arduino.INDENT)+l}Blockly.Arduino.INFINITE_LOOP_TRAP&&(l=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,\"'\"+o.id+\"'\")+l);var i=Blockly.Arduino.valueToCode(o,\"RETURN\",Blockly.Arduino.ORDER_NONE)||\"\";i&&(i=Blockly.Arduino.INDENT+\"return \"+i+\";\\n\");for(var t=i?\"int\":\"void\",r=[],u=0;u<o.arguments_.length;u++)r[u]=\"int \"+Blockly.Arduino.variableDB_.getName(o.arguments_[u],Blockly.Variables.NAME_TYPE);var d=t+\" \"+e+\"(\"+r.join(\", \")+\") {\\n\"+l+i+\"}\\n\";return d=Blockly.Arduino.scrub_(o,d),Blockly.Arduino.definitions_[\"%\"+e]=d,null},Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn,Blockly.Arduino.procedures_callreturn=function(o){for(var e=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=[],n=0;n<o.arguments_.length;n++)l[n]=Blockly.Arduino.valueToCode(o,\"ARG\"+n,Blockly.Arduino.ORDER_COMMA)||\"null\";return[e+\"(\"+l.join(\", \")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.procedures_callnoreturn=function(o){for(var e=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"NAME\"),Blockly.Procedures.NAME_TYPE),l=[],n=0;n<o.arguments_.length;n++)l[n]=Blockly.Arduino.valueToCode(o,\"ARG\"+n,Blockly.Arduino.ORDER_COMMA)||\"null\";return e+\"(\"+l.join(\", \")+\");\\n\"},Blockly.Arduino.procedures_ifreturn=function(o){var e=\"if (\"+(Blockly.Arduino.valueToCode(o,\"CONDITION\",Blockly.Arduino.ORDER_NONE)||\"false\")+\") {\\n\";if(o.hasReturnValue_){var l=Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_NONE)||\"null\";e+=Blockly.Arduino.INDENT+\"return \"+l+\";\\n\"}else e+=Blockly.Arduino.INDENT+\"return;\\n\";return e+=\"}\\n\"}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.texts\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.text=function(o){return[Blockly.Arduino.quote_(o.getFieldValue(\"TEXT\")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.text_join=function(o){switch(o.itemCount_){case 0:return[\"''\",Blockly.Arduino.ORDER_ATOMIC];case 1:return[\"String(\"+(Blockly.Arduino.valueToCode(o,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case 2:return[\"String(\"+(Blockly.Arduino.valueToCode(o,\"ADD0\",Blockly.Arduino.ORDER_NONE)||\"''\")+\") + String(\"+(Blockly.Arduino.valueToCode(o,\"ADD1\",Blockly.Arduino.ORDER_NONE)||\"''\")+\")\",Blockly.Arduino.ORDER_ADDITION];default:for(var e=new Array(o.itemCount_),l=0;l<o.itemCount_;l++)e[l]=Blockly.Arduino.valueToCode(o,\"ADD\"+l,Blockly.Arduino.ORDER_COMMA)||\"''\";return[\"[\"+e.join(\",\")+\"].join('')\",Blockly.Arduino.ORDER_FUNCTION_CALL]}},Blockly.Arduino.text_append=function(o){var e=Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE);return e+\" = String(\"+e+\") + String(\"+(Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_length=function(o){return[(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\")+\".length\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_isEmpty=function(o){return[\"!\"+(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".length\",Blockly.Arduino.ORDER_LOGICAL_NOT]},Blockly.Arduino.text_indexOf=function(o){var e=\"FIRST\"==o.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",l=Blockly.Arduino.valueToCode(o,\"FIND\",Blockly.Arduino.ORDER_NONE)||\"''\",n=(Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".\"+e+\"(\"+l+\")\";return o.workspace.options.oneBasedIndex?[n+\" + 1\",Blockly.Arduino.ORDER_ADDITION]:[n,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_charAt=function(o){var e=o.getFieldValue(\"WHERE\")||\"FROM_START\",l=\"RANDOM\"==e?Blockly.Arduino.ORDER_NONE:Blockly.Arduino.ORDER_MEMBER,n=Blockly.Arduino.valueToCode(o,\"VALUE\",l)||\"''\";switch(e){case\"FIRST\":return[n+\".charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"LAST\":return[n+\".slice(-1)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_START\":return[n+\".charAt(\"+Blockly.Arduino.getAdjusted(o,\"AT\")+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"FROM_END\":return[n+\".slice(\"+Blockly.Arduino.getAdjusted(o,\"AT\",1,!0)+\").charAt(0)\",Blockly.Arduino.ORDER_FUNCTION_CALL];case\"RANDOM\":return[Blockly.Arduino.provideFunction_(\"textRandomLetter\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(text) {\",\"  var x = Math.floor(Math.random() * text.length);\",\"  return text[x];\",\"}\"])+\"(\"+n+\")\",Blockly.Arduino.ORDER_FUNCTION_CALL]}throw\"Unhandled option (text_charAt).\"},Blockly.Arduino.text.getIndex_=function(o,e,l){return\"FIRST\"==e?\"0\":\"FROM_END\"==e?o+\".length - 1 - \"+l:\"LAST\"==e?o+\".length - 1\":l},Blockly.Arduino.text_getSubstring=function(o){var e=Blockly.Arduino.valueToCode(o,\"STRING\",Blockly.Arduino.ORDER_FUNCTION_CALL)||\"''\",l=o.getFieldValue(\"WHERE1\"),n=o.getFieldValue(\"WHERE2\");if(\"FIRST\"==l&&\"LAST\"==n)var i=e;else if(e.match(/^'?\\w+'?$/)||\"FROM_END\"!=l&&\"LAST\"!=l&&\"FROM_END\"!=n&&\"LAST\"!=n){switch(l){case\"FROM_START\":var t=Blockly.Arduino.getAdjusted(o,\"AT1\");break;case\"FROM_END\":t=e+\".length - \"+(t=Blockly.Arduino.getAdjusted(o,\"AT1\",1,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"FIRST\":t=\"0\";break;default:throw\"Unhandled option (text_getSubstring).\"}switch(n){case\"FROM_START\":var r=Blockly.Arduino.getAdjusted(o,\"AT2\",1);break;case\"FROM_END\":r=e+\".length - \"+(r=Blockly.Arduino.getAdjusted(o,\"AT2\",0,!1,Blockly.Arduino.ORDER_SUBTRACTION));break;case\"LAST\":r=e+\".length\";break;default:throw\"Unhandled option (text_getSubstring).\"}i=e+\".slice(\"+t+\", \"+r+\")\"}else{t=Blockly.Arduino.getAdjusted(o,\"AT1\"),r=Blockly.Arduino.getAdjusted(o,\"AT2\");var u=Blockly.Arduino.text.getIndex_,d={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};i=Blockly.Arduino.provideFunction_(\"subsequence\"+d[l]+d[n],[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==l||\"FROM_START\"==l?\", at1\":\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", at2\":\"\")+\") {\",\"  var start = \"+u(\"sequence\",l,\"at1\")+\";\",\"  var end = \"+u(\"sequence\",n,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+e+(\"FROM_END\"==l||\"FROM_START\"==l?\", \"+t:\"\")+(\"FROM_END\"==n||\"FROM_START\"==n?\", \"+r:\"\")+\")\"}return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_changeCase=function(o){var e={UPPERCASE:\".toUpperCase()\",LOWERCASE:\".toLowerCase()\",TITLECASE:null}[o.getFieldValue(\"CASE\")],l=e?Blockly.Arduino.ORDER_MEMBER:Blockly.Arduino.ORDER_NONE,n=Blockly.Arduino.valueToCode(o,\"TEXT\",l)||\"''\";if(e)var i=n+e;else i=Blockly.Arduino.provideFunction_(\"textToTitleCase\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(str) {\",\"  return str.replace(/\\\\S+/g,\",\"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\",\"}\"])+\"(\"+n+\")\";return[i,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_trim=function(o){var e={LEFT:\".replace(/^[\\\\s\\\\xa0]+/, '')\",RIGHT:\".replace(/[\\\\s\\\\xa0]+$/, '')\",BOTH:\".trim()\"}[o.getFieldValue(\"MODE\")];return[(Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+e,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_print=function(o){return\"window.alert(\"+(Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\")+\");\\n\"},Blockly.Arduino.text_prompt_ext=function(o){if(o.getField(\"TEXT\"))var e=Blockly.Arduino.quote_(o.getFieldValue(\"TEXT\"));else e=Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_NONE)||\"''\";var l=\"window.prompt(\"+e+\")\";return\"NUMBER\"==o.getFieldValue(\"TYPE\")&&(l=\"parseFloat(\"+l+\")\"),[l,Blockly.Arduino.ORDER_FUNCTION_CALL]},Blockly.Arduino.text_prompt=Blockly.Arduino.text_prompt_ext,Blockly.Arduino.text_count=function(o){var e=Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",l=Blockly.Arduino.valueToCode(o,\"SUB\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textCount\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle) {\",\"  if (needle.length === 0) {\",\"    return haystack.length + 1;\",\"  } else {\",\"    return haystack.split(needle).length - 1;\",\"  }\",\"}\"])+\"(\"+e+\", \"+l+\")\",Blockly.Arduino.ORDER_SUBTRACTION]},Blockly.Arduino.text_replace=function(o){var e=Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\",l=Blockly.Arduino.valueToCode(o,\"FROM\",Blockly.Arduino.ORDER_NONE)||\"''\",n=Blockly.Arduino.valueToCode(o,\"TO\",Blockly.Arduino.ORDER_NONE)||\"''\";return[Blockly.Arduino.provideFunction_(\"textReplace\",[\"function \"+Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle, replacement) {\",'  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")','                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\"  return haystack.replace(new RegExp(needle, 'g'), replacement);\",\"}\"])+\"(\"+e+\", \"+l+\", \"+n+\")\",Blockly.Arduino.ORDER_MEMBER]},Blockly.Arduino.text_reverse=function(o){return[(Blockly.Arduino.valueToCode(o,\"TEXT\",Blockly.Arduino.ORDER_MEMBER)||\"''\")+\".split('').reverse().join('')\",Blockly.Arduino.ORDER_MEMBER]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2012 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variables\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.variables_get=function(o){return[Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.variables_set=function(o){var e=Blockly.Arduino.valueToCode(o,\"VALUE\",Blockly.Arduino.ORDER_ASSIGNMENT)||\"0\";return Blockly.Arduino.variableDB_.getName(o.getFieldValue(\"VAR\"),Blockly.Variables.NAME_TYPE)+\" = \"+e+\";\\n\"}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Language\n *\n * Copyright 2018 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Arduino.variablesDynamic\"),goog.require(\"Blockly.Arduino\"),goog.require(\"Blockly.Arduino.variables\"),Blockly.Arduino.variables_get_dynamic=Blockly.Arduino.variables_get,Blockly.Arduino.variables_set_dynamic=Blockly.Arduino.variables_set},function(o,e,l){\"use strict\";goog.provide(\"Blockly.Arduino.arduino_base\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_base_inout_buildin_led=function(o){var e=o.getFieldValue(\"STAT\");return Blockly.Arduino.setups_.setup_output_13=\"pinMode(13, OUTPUT);\",\"digitalWrite(13, \"+e+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_write=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_output_\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"digitalWrite(\"+e+\", \"+l+\");\\n\"},Blockly.Arduino.arduino_base_inout_digital_read=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+e]=\"pinMode(\"+e+\", INPUT);\",[\"digitalRead(\"+e+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_highlow=function(o){return[\"HIGH\"==o.getFieldValue(\"BOOL\")?\"HIGH\":\"LOW\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_inout_analog_write=function(o){return\"analogWrite(\"+o.getFieldValue(\"PIN\")+\", \"+Blockly.Arduino.valueToCode(this,\"PWM\",Blockly.Arduino.ORDER_ATOMIC)+\");\\n\"},Blockly.Arduino.arduino_base_inout_analog_read=function(o){return[\"analogRead(\"+o.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_delay=function(o){return\"delay(\"+(Blockly.Arduino.valueToCode(this,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\")+\");\\n\"},Blockly.Arduino.arduino_base_angle=function(o){return[this.getFieldValue(\"ANGLE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_date=function(o){return[this.getFieldValue(\"DATE\"),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.arduino_base_map=function(o){return[\"map(\"+Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_NONE)+\", 0, 1024, 0, \"+Blockly.Arduino.valueToCode(this,\"DMAX\",Blockly.Arduino.ORDER_ATOMIC)+\")\",Blockly.Arduino.ORDER_NONE]},Blockly.Arduino.arduino_base_inout_tone=function(o){var e=o.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(this,\"NUM\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_[\"setup_output\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"tone(\"+e+\", \"+l+\");\\n\"},Blockly.Arduino.arduino_base_inout_notone=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_output\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"noTone(\"+e+\");\\n\"},Blockly.Arduino.arduino_base_serial_print=function(o){var e=Blockly.Arduino.valueToCode(this,\"CONTENT\",Blockly.Arduino.ORDER_ATOMIC)||\"0\";return Blockly.Arduino.setups_[\"setup_serial_\"+profile.default.serial]=\"Serial.begin(9600);\\n\",\"Serial.println(\"+e+\");\\n\"}},function(o,e,l){\"use strict\";goog.provide(\"Blockly.Arduino.grove\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.grove_led=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_green_led_\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"digitalWrite(\"+e+\",\"+l+\");\\n\"},Blockly.Arduino.grove_button=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_button_\"+e]=\"pinMode(\"+e+\", INPUT);\",[\"digitalRead(\"+e+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rotary_angle=function(o){return[\"analogRead(\"+o.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_tilt_switch=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_tilt_switch_\"+e]=\"pinMode(\"+e+\", INPUT);\",[\"digitalRead(\"+e+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_piezo_buzzer=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_piezo_buzzer_\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"digitalWrite(\"+e+\",\"+l+\");\\n\"},Blockly.Arduino.grove_relay=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");return Blockly.Arduino.setups_[\"setup_relay_\"+e]=\"pinMode(\"+e+\", OUTPUT);\",\"digitalWrite(\"+e+\",\"+l+\");\\n\"},Blockly.Arduino.grove_temperature_sensor=function(o){var e=o.getFieldValue(\"PIN\");return[\"round((1/(log((float)(1023-analogRead(\"+e+\"))*10000/analogRead(\"+e+\"))/10000)/3975+1/298.15)-273.15)\",Blockly.Arduino.ORDER_ATOMIC]};var n=function(o){var e=o;e=parseInt(e)?parseInt(o)+1:\"A\"+(parseInt(e.slice(1,e.length))+1);for(var l=profile.default.dropdownDigital.length,n=!0,i=0;i<l;i++)profile.default.dropdownDigital[i][1]==e&&(n=!1);return n?(alert(\"Grove Sensor needs PIN#+1 port, current setting is out of bound.\"),null):e};function i(o){return parseInt(r(o).substring(2,4),16)}function t(o){return parseInt(r(o).substring(4,6),16)}function r(o){return\"#\"==o.charAt(0)?o.substring(1,7):o}Blockly.Arduino.grove_serial_lcd_print=function(o){var e=o.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(o,\"TEXT1\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",i=Blockly.Arduino.valueToCode(o,\"TEXT2\",Blockly.Arduino.ORDER_UNARY_POSTFIX)||\"''\",t=Blockly.Arduino.valueToCode(o,\"DELAY_TIME\",Blockly.Arduino.ORDER_ATOMIC)||\"1000\";Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var r=n(e);Blockly.Arduino.definitions_[\"var_lcd_\"+e]=\"SerialLCD slcd_\"+e+\"(\"+e+\",\"+r+\");\\n\",Blockly.Arduino.setups_[\"setup_lcd_\"+e]=\"slcd_\"+e+\".begin();\\n\";var u=\"slcd_\"+e+\".backlight();\\n\";return u+=\"slcd_\"+e+\".setCursor(0,0);\\n\",u+=\"slcd_\"+e+\".print(\"+l+\");\\n\",u+=\"slcd_\"+e+\".setCursor(0,1);\\n\",u+=\"slcd_\"+e+\".print(\"+i+\");\\n\",u+=\"delay(\"+t+\");\\n\"},Blockly.Arduino.grove_serial_lcd_power=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var i=n(e);Blockly.Arduino.definitions_[\"var_lcd\"+e]=\"SerialLCD slcd_\"+e+\"(\"+e+\",\"+i+\");\\n\";var t=\"slcd_\"+e;return t+=\"ON\"===l?\".Power();\\n\":\".noPower();\\n\"},Blockly.Arduino.grove_serial_lcd_effect=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"STAT\");Blockly.Arduino.definitions_.define_seriallcd=\"#include <SerialLCD.h>\\n\",Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\";var i=n(e);Blockly.Arduino.definitions_[\"var_lcd\"+e]=\"SerialLCD slcd_\"+e+\"(\"+e+\",\"+i+\");\\n\";var t=\"slcd_\"+e;return t+=\"LEFT\"===l?\".scrollDisplayLeft();\\n\":\"RIGHT\"===l?\".scrollDisplayRight();\\n\":\".autoscroll();\\n\"},Blockly.Arduino.grove_sound_sensor=function(o){return[\"analogRead(\"+o.getFieldValue(\"PIN\")+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_pir_motion_sensor=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+e]=\"pinMode(\"+e+\", INPUT);\",[\"digitalRead(\"+e+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_line_finder=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.setups_[\"setup_input_\"+e]=\"pinMode(\"+e+\", INPUT);\",[\"digitalRead(\"+e+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_ultrasonic_ranger=function(o){var e=o.getFieldValue(\"PIN\"),l=o.getFieldValue(\"UNIT\");return Blockly.Arduino.definitions_.define_ultrasonic=\"#include <Ultrasonic.h>\\n\",Blockly.Arduino.definitions_[\"var_ultrasonic\"+e]=\"Ultrasonic ultrasonic_\"+e+\"(\"+e+\");\",[\"cm\"===l?\"ultrasonic_\"+e+\".MeasureInCentimeters()\":\"ultrasonic_\"+e+\".MeasureInInches()\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_motor_shield=function(o){var e=o.getFieldValue(\"DIRECTION\");Blockly.Arduino.setups_.setup_motor=\"pinMode(8,OUTPUT);//I1\\n  pinMode(11,OUTPUT);//I2\\n  pinMode(9,OUTPUT);//speedPinA\\n  pinMode(12,OUTPUT);//I3\\n  pinMode(13,OUTPUT);//i4\\n  pinMode(10,OUTPUT);//speedPinB\\n\";var l=\"\";return\"forward\"===e?(Blockly.Arduino.definitions_.define_forward=\"void forward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\",l=\"forward();\\n\"):\"right\"===e?(Blockly.Arduino.definitions_.define_right=\"void right()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\\n  digitalWrite(8,HIGH);\\n}\\n\\n\",l=\"right();\\n\"):\"left\"===e?(Blockly.Arduino.definitions_.define_left=\"void left()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\\n  digitalWrite(12,LOW);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",l=\"left();\\n\"):\"backward\"===e?(Blockly.Arduino.definitions_.define_backward=\"void backward()\\n{\\n  analogWrite(9,127);//input a simulation value to set the speed\\n  analogWrite(10,127);\\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\\n  digitalWrite(12,HIGH);\\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\\n  digitalWrite(8,LOW);\\n}\\n\\n\",l=\"backward();\\n\"):\"stop\"===e&&(Blockly.Arduino.definitions_.define_stop=\"void stop()\\n{\\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. block should be done to avid damaging the motor.\\ndigitalWrite(10,LOW);\\ndelay(1000);\\n}\\n\\n\",l=\"stop();\\n\"),l},Blockly.Arduino.grove_thumb_joystick=function(o){var e=o.getFieldValue(\"PIN\");return[\"analogRead(\"+(\"y\"===o.getFieldValue(\"AXIS\")?n(e):e)+\")\",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rgb_led=function(o){var e=o.getFieldValue(\"PIN\"),l=n(e);Blockly.Arduino.setups_[\"setup_input_\"+e]=\"pinMode(\"+e+\", OUTPUT);\",Blockly.Arduino.setups_[\"setup_input_\"+l]=\"pinMode(\"+l+\", OUTPUT);\",Blockly.Arduino.definitions_.define_uint8=\"#define uint8 unsigned char\",Blockly.Arduino.definitions_.define_uint16=\"#define uint16 unsigned int\",Blockly.Arduino.definitions_.define_uint32=\"#define uint32 unsigned long int\",Blockly.Arduino.definitions_[\"define_clkproduce_\"+e]=\"void ClkProduce_\"+e+\"(void)\\n{\\n  digitalWrite(\"+e+\", LOW);\\n  delayMicroseconds(20);\\n  digitalWrite(\"+e+\", HIGH);\\n  delayMicroseconds(20);\\n}\\n\",Blockly.Arduino.definitions_[\"define_send32zero_\"+e]=\"void Send32Zero_\"+e+\"(void)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    digitalWrite(\"+l+\", LOW);\\n    ClkProduce_\"+e+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_.define_taskanticode=\"uint8 TakeAntiCode(uint8 dat)\\n{\\n  uint8 tmp = 0;\\n  if ((dat & 0x80) == 0)\\n  {\\n    tmp |= 0x02;\\n  }\\n  \\n  if ((dat & 0x40) == 0)\\n  {\\n    tmp |= 0x01;\\n  }\\n  return tmp;\\n}\\n\",Blockly.Arduino.definitions_[\"define_datasend_\"+e]=\"// gray data\\nvoid DatSend_\"+e+\"(uint32 dx)\\n{\\n  uint8 i;\\n  for (i=0; i<32; i++)\\n  {\\n    if ((dx & 0x80000000) != 0)\\n    {\\n      digitalWrite(\"+l+\", HIGH);\\n    }\\n    else\\n    {\\n      digitalWrite(\"+l+\", LOW);\\n    }\\n  dx <<= 1;\\n  ClkProduce_\"+e+\"();\\n  }\\n}\\n\",Blockly.Arduino.definitions_[\"define_datadealwithsend_\"+e]=\"// data processing\\nvoid DataDealWithAndSend_\"+e+\"(uint8 r, uint8 g, uint8 b)\\n{\\n  uint32 dx = 0;\\n  dx |= (uint32)0x03 << 30;             // highest two bits 1，flag bits\\n  dx |= (uint32)TakeAntiCode(b) << 28;\\n  dx |= (uint32)TakeAntiCode(g) << 26;\\n  dx |= (uint32)TakeAntiCode(r) << 24;\\n\\n  dx |= (uint32)b << 16;\\n  dx |= (uint32)g << 8;\\n  dx |= r;\\n\\n  DatSend_\"+e+\"(dx);\\n}\\n\";var u=\"Send32Zero_\"+e+\"(); // begin\\n\";if(0==o.itemCount_)return\"\";for(var d=0;d<o.itemCount_;d++){var a=o.getFieldValue(\"RGB\"+d);u+=\"DataDealWithAndSend_\"+e+\"(\"+parseInt(r(a).substring(0,2),16)+\", \"+i(a)+\", \"+t(a)+\"); // first node data\\n\"}return u+=\"Send32Zero_\"+e+\"();  // send to update data\\n\"},Blockly.Arduino.grove_bluetooth_slave=function(o){var e=o.getFieldValue(\"PIN\"),l=n(e),i=o.getFieldValue(\"NAME\"),t=(o.getFieldValue(\"PINCODE\"),Blockly.Arduino.statementToCode(o,\"RCV\")),r=Blockly.Arduino.statementToCode(o,\"SNT\");return Blockly.Arduino.definitions_.define_softwareserial=\"#include <SoftwareSerial.h>\\n\",Blockly.Arduino.definitions_[\"var_bluetooth_\"+e]=\"SoftwareSerial blueToothSerial_\"+e+\"(\"+e+\",\"+l+\");\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+e]=\"Serial.begin(9600);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+e]+=\"  pinMode(\"+e+\", INPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+e]+=\"  pinMode(\"+l+\", OUTPUT);\\n\",Blockly.Arduino.setups_[\"setup_bluetooth_\"+e]+=\"  setupBlueToothConnection_\"+e+\"();\\n\",Blockly.Arduino.definitions_[\"define_setupBlueToothConnection_\"+e]=\"void setupBlueToothConnection_\"+e+\"()\\n{\\n  blueToothSerial_\"+e+\".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\\n  blueToothSerial_\"+e+'.print(\"\\\\r\\\\n+STWMOD=0\\\\r\\\\n\"); //set the bluetooth work in slave mode\\n  blueToothSerial_'+e+'.print(\"\\\\r\\\\n+STNA='+i+'\\\\r\\\\n\"); //set the bluetooth name as \"'+i+'\"\\n  blueToothSerial_'+e+'.print(\"\\\\r\\\\n+STPIN=0000\\\\r\\\\n\");//Set SLAVE pincode\"0000\"\\n  blueToothSerial_'+e+'.print(\"\\\\r\\\\n+STOAUT=1\\\\r\\\\n\"); // Permit Paired device to connect me\\n  blueToothSerial_'+e+'.print(\"\\\\r\\\\n+STAUTO=0\\\\r\\\\n\"); // Auto-connection should be forbidden here\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+e+'.print(\"\\\\r\\\\n+INQ=1\\\\r\\\\n\"); //make the slave bluetooth inquirable \\n  Serial.println(\"The slave bluetooth is inquirable!\");\\n  delay(2000); // This delay is required.\\n  blueToothSerial_'+e+\".flush();\\n}\\n\",\"char recvChar_\"+e+\";\\nwhile(1) {\\n  if(blueToothSerial_\"+e+\".available()) {//check if there is any data sent from the remote bluetooth shield\\n    recvChar_\"+e+\" = blueToothSerial_\"+e+\".read();\\n    Serial.print(recvChar_\"+e+\");\\n\"+t+\"  }\\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\\n    recvChar_\"+e+\" = Serial.read();\\n    blueToothSerial_\"+e+\".print(recvChar_\"+e+\");\\n\"+r+\"  }\\n}\\n\"}},function(o,e,l){\"use strict\";goog.provide(\"Blockly.Arduino.servo\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.servo_move=function(o){var e=o.getFieldValue(\"PIN\"),l=Blockly.Arduino.valueToCode(o,\"DEGREE\",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+e]=\"Servo servo_\"+e+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+e]=\"servo_\"+e+\".attach(\"+e+\");\\n\",\"servo_\"+e+\".write(\"+l+\");\\n\"},Blockly.Arduino.servo_read_degrees=function(o){var e=o.getFieldValue(\"PIN\");return Blockly.Arduino.definitions_.define_servo=\"#include <Servo.h>\\n\",Blockly.Arduino.definitions_[\"var_servo\"+e]=\"Servo servo_\"+e+\";\\n\",Blockly.Arduino.setups_[\"setup_servo_\"+e]=\"servo_\"+e+\".attach(\"+e+\");\\n\",[\"servo_\"+e+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.program\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.arduino_program=function(o){var e=Blockly.Arduino.statementToCode(o,\"SETUP_FUNC\");return e&&(Blockly.Arduino.setups_.userSetupCode=e),function(o,e){var l=o.getInputTargetBlock(e),n=Blockly.Arduino.blockToCode(l);if(!goog.isString(n))throw'Expecting code from statement block \"'+l.type+'\".';return n}(o,\"LOOP_FUNC\")}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.lineSensor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.lineSensor_read=function(o){var e=o.getFieldValue(\"INPUT_PIN\"),l=\"lineSensor_\"+e;return Blockly.Arduino.definitions_.lineSensor=\"#include <DigitalIO.h>\",Blockly.Arduino.definitions_[l]=\"DigitalIO \"+l+\"(\"+e+\", INPUT);\",[l+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.motor\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.motor_right=function(o){var e=o.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorRight(\"+e+\");\\n\"},Blockly.Arduino.motor_left=function(o){var e=o.getFieldValue(\"MOTOR_SPEED\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"motorLeft(\"+e+\");\\n\"},Blockly.Arduino.motor_drive=function(o){var e=o.getFieldValue(\"MOTOR_SPEED_LEFT\"),l=o.getFieldValue(\"MOTOR_SPEED_RIGHT\");return Blockly.Arduino.definitions_.motors=\"#include <Motors.h>\",Blockly.Arduino.setups_.setup_motor_=\"initializeMotors();\",\"drive(\"+e+\", \"+l+\");\\n\"}},function(o,e,l){\"use strict\";\n/**\n * @license Licensed under the Apache License, Version 2.0 (the \"License\"):\n *          http://www.apache.org/licenses/LICENSE-2.0\n */goog.provide(\"Blockly.Arduino.ultrasonic\"),goog.require(\"Blockly.Arduino\"),Blockly.Arduino.ultrasonic_read=function(o){var e=o.getFieldValue(\"TIGGER_PIN\"),l=o.getFieldValue(\"ECHO_PIN\"),n=\"usonic_\"+e+\"_\"+l;return Blockly.Arduino.definitions_.ultrasonic=\"#include <Ultrasonic.h>\",Blockly.Arduino.definitions_[n]=\"Ultrasonic \"+n+\"(\"+e+\", \"+l+\");\",[n+\".read()\",Blockly.Arduino.ORDER_ATOMIC]}},function(o,e,l){\"use strict\";\n/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2018 Google Inc.\n * https://developers.google.com/blockly/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */goog.provide(\"Blockly.Themes.Modern\"),goog.require(\"Blockly.Theme\");Blockly.Themes.Modern=new Blockly.Theme({colour_blocks:{colourPrimary:\"#a5745b\",colourSecondary:\"#dbc7bd\",colourTertiary:\"#845d49\"},list_blocks:{colourPrimary:\"#745ba5\",colourSecondary:\"#c7bddb\",colourTertiary:\"#5d4984\"},logic_blocks:{colourPrimary:\"#5b80a5\",colourSecondary:\"#bdccdb\",colourTertiary:\"#496684\"},loop_blocks:{colourPrimary:\"#5ba55b\",colourSecondary:\"#bddbbd\",colourTertiary:\"#498449\"},math_blocks:{colourPrimary:\"#5b67a5\",colourSecondary:\"#bdc2db\",colourTertiary:\"#495284\"},procedure_blocks:{colourPrimary:\"#995ba5\",colourSecondary:\"#d6bddb\",colourTertiary:\"#7a4984\"},text_blocks:{colourPrimary:\"#5ba58c\",colourSecondary:\"#bddbd1\",colourTertiary:\"#498470\"},variable_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\"},variable_dynamic_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\"},hat_blocks:{colourPrimary:\"#a55b99\",colourSecondary:\"#dbbdd6\",colourTertiary:\"#84497a\",hat:\"cap\"},arduino_blocks:{colourPrimary:\"#007481\",colourSecondary:\"#007481\",colourTertiary:\"#007481\"},grove_blocks:{colourPrimary:\"#018770\",colourSecondary:\"#018770\",colourTertiary:\"#018770\"},servo_blocks:{colourPrimary:\"#343434\",colourSecondary:\"#343434\",colourTertiary:\"#343434\"}},{colour_category:{colour:\"#a5745b\"},list_category:{colour:\"#745ba5\"},logic_category:{colour:\"#5b80a5\"},loop_category:{colour:\"#5ba55b\"},math_category:{colour:\"#5b67a5\"},procedure_category:{colour:\"#995ba5\"},text_category:{colour:\"#5ba58c\"},variable_category:{colour:\"#a55b99\"},variable_dynamic_category:{colour:\"#a55b99\"},arduino_category:{colour:\"#007481\"},grove_category:{colour:\"#018770\"},servo_category:{colour:\"#343434\"}})}]);","extractedComments":[]}